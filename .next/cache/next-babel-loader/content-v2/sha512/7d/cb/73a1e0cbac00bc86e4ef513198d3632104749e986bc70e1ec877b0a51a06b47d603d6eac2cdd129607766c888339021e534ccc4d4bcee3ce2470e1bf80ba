{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport h from 'react-hyperscript';\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { Box, FormBox, LabelBox } from 'components/Layout';\nimport { Primary } from 'components/Button';\nimport { Error, PasswordInput } from 'components/Form';\nimport { useApi } from 'src/apiHelpers';\nconst COPY = {\n  header: \"Reset Password\",\n  button: \"Reset Password\",\n  passwordInput: \"New Password\",\n  confirmInput: \"Confirm Password\",\n  error: h(Error, ['Looks like that link is expired or invalid, please try to ', h(Link, {\n    href: \"/login?reset\"\n  }, h('a', 'reset your password')), ' again'])\n};\n\nconst ResetPassword = () => {\n  let {\n    0: formData,\n    1: setFormData\n  } = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  let [status, callResetPassword] = useApi([formData]);\n  let router = useRouter();\n  let key = router.query.key;\n  useEffect(() => {\n    if (status === 'success') {\n      setTimeout(() => {\n        router.push('/login');\n      }, 3500);\n    }\n  });\n  if (!key || typeof key !== 'string') return COPY.error;\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await callResetPassword('/api/user/resetPassword/reset', {\n      key,\n      password: formData.password\n    });\n  };\n\n  switch (status) {\n    case 'normal':\n    case 'loading':\n      return h(FormBox, {\n        onSubmit,\n        width: 400,\n        ma: true\n      }, [h('h1', COPY.header), h(LabelBox, {\n        gap: 8\n      }, [h('div', [h('h4', COPY.passwordInput), h('small.textSecondary', \"Minimum length 8 characters\")]), h(PasswordInput, {\n        type: 'password',\n        minLength: 8,\n        value: formData.password,\n        onChange: e => setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n          password: e.target.value\n        }))\n      })]), h(Primary, {\n        type: 'submit',\n        status,\n        style: {\n          justifySelf: 'end'\n        }\n      }, 'Submit')]);\n\n    case 'success':\n      return h(Box, [h('h1', \"Great\"), h('p', 'You can now log in with your new password'), h(Link, {\n        href: '/login'\n      }, h('a', h(Primary, 'Log In')))]);\n\n    case 'error':\n      return COPY.error;\n  }\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/resetPassword.ts"],"names":["h","useState","useEffect","useRouter","Link","Box","FormBox","LabelBox","Primary","Error","PasswordInput","useApi","COPY","header","button","passwordInput","confirmInput","error","href","ResetPassword","formData","setFormData","password","confirmPassword","status","callResetPassword","router","key","query","setTimeout","push","onSubmit","e","preventDefault","width","ma","gap","type","minLength","value","onChange","target","style","justifySelf"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport { useState, useEffect } from 'react'\nimport {useRouter} from 'next/router'\nimport Link from 'next/link'\n\nimport { Box, FormBox, LabelBox} from 'components/Layout'\nimport {Primary} from 'components/Button'\nimport { Error, PasswordInput} from 'components/Form'\nimport {ResetMsg, ResetResult} from 'pages/api/user/resetPassword/[action]'\nimport { useApi } from 'src/apiHelpers'\n\nconst COPY = {\n  header: \"Reset Password\",\n  button: \"Reset Password\",\n  passwordInput: \"New Password\",\n  confirmInput: \"Confirm Password\",\n  error: h(Error, [\n    'Looks like that link is expired or invalid, please try to ', h(Link, {href:\"/login?reset\"}, h('a', 'reset your password')),\n    ' again'\n  ])\n}\n\nconst ResetPassword = ()=>{\n  let [formData, setFormData] = useState({password:'', confirmPassword: ''})\n  let [status, callResetPassword] = useApi<ResetMsg, ResetResult>([formData])\n  let router = useRouter()\n  let key = router.query.key as string\n\n  useEffect(()=>{\n    if(status === 'success') {\n      setTimeout(()=> {\n        router.push('/login')\n      }, 3500)\n    }\n  })\n\n  if(!key || typeof key !== 'string') return COPY.error\n\n  const onSubmit = async (e:React.FormEvent)=> {\n    e.preventDefault()\n    await callResetPassword('/api/user/resetPassword/reset', {key, password: formData.password})\n  }\n\n  switch(status) {\n    case 'normal':\n    case 'loading':\n      return h(FormBox, {onSubmit, width:400, ma: true }, [\n        h('h1', COPY.header),\n        h(LabelBox, {gap: 8}, [\n          h('div',[\n            h('h4', COPY.passwordInput),\n            h('small.textSecondary', \"Minimum length 8 characters\"),\n          ]),\n          h(PasswordInput, {\n            type: 'password',\n            minLength: 8,\n            value: formData.password,\n            onChange: e => setFormData({...formData, password:e.target.value})\n          }),\n        ]),\n        h(Primary, {type: 'submit', status, style: {justifySelf:'end'}}, 'Submit')\n      ])\n    case 'success': return h(Box, [\n      h('h1', \"Great\"),\n      h('p', 'You can now log in with your new password'),\n      h(Link, {href:'/login'}, h('a', h(Primary, 'Log In')))\n    ])\n    case 'error': return COPY.error\n  }\n}\n\nexport default ResetPassword\n"]},"metadata":{},"sourceType":"module"}