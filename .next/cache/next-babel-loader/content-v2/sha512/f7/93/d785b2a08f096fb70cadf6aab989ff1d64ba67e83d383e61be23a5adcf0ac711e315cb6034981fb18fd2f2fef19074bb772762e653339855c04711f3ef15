{"ast":null,"code":"import _styled from \"@emotion/styled-base\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport h from 'react-hyperscript';\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nimport Link from 'next/link';\nimport { Box } from 'components/Layout';\nimport { colors } from 'components/Tokens';\nimport { Pill } from 'components/Pill';\nimport { BackButton } from 'components/Button';\n\nconst Library = props => {\n  return h(Box, {\n    gap: 64\n  }, [h(Box, {\n    gap: 8\n  }, [h(BackButton, {\n    href: \"/library\"\n  }, 'Collections'), h('h1', 'Latest Posts')]), ...props.posts.sort((a, b) => {\n    if (new Date(a.date) < new Date(b.date)) return 1;\n    return -1;\n  }).map(post => {\n    return props && h(LibraryPost, post);\n  })]);\n};\n\nexport const getStaticProps = async () => {\n  let posts = fs.readdirSync('./pages/library').map(file => {\n    if (fs.lstatSync(path.join('./pages/library/', file)).isDirectory()) return;\n    let content = fs.readFileSync('./pages/library/' + file);\n    let {\n      data\n    } = matter(content);\n    return _objectSpread(_objectSpread({}, data), {}, {\n      path: '/library/' + file.slice(0, -4)\n    });\n  }).filter(x => x !== undefined);\n  return {\n    props: {\n      posts: posts\n    }\n  };\n};\nexport default Library; // This defines the layout for a single library post (tags, title, author, publish date, description)\n\nconst LibraryPost = props => {\n  return h(Box, {\n    gap: 16,\n    style: {\n      maxWidth: 640\n    }\n  }, [h(Box, {\n    h: true\n  }, props.tags && props.tags.map(tag => h(Tag, {\n    tagType: tag\n  }))), h(Box, {\n    gap: 8\n  }, [h(Link, {\n    href: props.path\n  }, h('a.notBlue', {\n    style: {\n      textDecoration: 'none'\n    }\n  }, h('h2', props.title))), h('p.textSecondary', `by ${props === null || props === void 0 ? void 0 : props.author} | ${props === null || props === void 0 ? void 0 : props.date}`)]), h('div', [h('p.big', props.description)])]);\n}; // To add new tag types, add them to this object. Add the tag type and a color the tag should be.\n\n\nconst tagColors = {\n  'announcement': '#cc2288',\n  'book-review': '#cc3322',\n  'learning-design': '#11aacc',\n  'learning-writing': '#6B8648',\n  'learning-programming': '#cc2288',\n  'hyperlink-meta': '#1d44d6',\n  'stargazing': '#6B8648'\n}; // This is a function that creates tags with the appropriate tag type and color based on the list above.\n\nconst Tag = /*#__PURE__*/_styled(Pill, {\n  target: \"e1k4ampk0\"\n})(\"background-color:\", props => tagColors[props.tagType] || colors.grey35, \";color:white;&::after{content:\\\"\", props => props.tagType, \"\\\";}\" + (true ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9heW9vbHV3YWFsZm9uc28vY29kZS9rcmFrZW5lZHVhcHAvcGFnZXMvbGlicmFyeS9sYXRlc3QvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0U0QyIsImZpbGUiOiIvVXNlcnMvYXlvb2x1d2FhbGZvbnNvL2NvZGUva3Jha2VuZWR1YXBwL3BhZ2VzL2xpYnJhcnkvbGF0ZXN0L2luZGV4LnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGggZnJvbSAncmVhY3QtaHlwZXJzY3JpcHQnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcbmltcG9ydCBmcyBmcm9tICdmcydcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5pbXBvcnQgbWF0dGVyIGZyb20gJ2dyYXktbWF0dGVyJ1xuaW1wb3J0IHsgSW5mZXJHZXRTdGF0aWNQcm9wc1R5cGUgfSBmcm9tICduZXh0J1xuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuXG5pbXBvcnQgeyBCb3ggfSBmcm9tICdjb21wb25lbnRzL0xheW91dCdcbmltcG9ydCB7IGNvbG9ycyB9IGZyb20gJ2NvbXBvbmVudHMvVG9rZW5zJ1xuaW1wb3J0IHtQaWxsfSBmcm9tICdjb21wb25lbnRzL1BpbGwnXG5pbXBvcnQgeyBCYWNrQnV0dG9uIH0gZnJvbSAnY29tcG9uZW50cy9CdXR0b24nXG5cbmV4cG9ydCB0eXBlICBMaWJyYXJ5ID0ge1xuICB0aXRsZTpzdHJpbmcsXG4gIGF1dGhvcjpzdHJpbmcsXG4gIGRhdGU6c3RyaW5nLFxuICBwYXRoOiBzdHJpbmcsXG4gIGRlc2NyaXB0aW9uOnN0cmluZyxcbiAgdGFnczpzdHJpbmdbXVxufVxuXG4vL3RoZSBMaWJyYXJ5IC0gTGF0ZXN0IGxheW91dCBpcyBkZWZpbmVkIGhlcmVcblxudHlwZSBQcm9wcyA9IEluZmVyR2V0U3RhdGljUHJvcHNUeXBlPHR5cGVvZiBnZXRTdGF0aWNQcm9wcz5cbmNvbnN0IExpYnJhcnkgPSAocHJvcHM6UHJvcHMpID0+IHtcbiAgcmV0dXJuIGgoQm94LCB7Z2FwOiA2NH0sIFtcbiAgICBoKEJveCwge2dhcDogOH0sW1xuICAgICAgICBoKEJhY2tCdXR0b24sIHtocmVmOiBcIi9saWJyYXJ5XCJ9LCAnQ29sbGVjdGlvbnMnKSxcbiAgICAgICAgaCgnaDEnLCAnTGF0ZXN0IFBvc3RzJyksXG4gICAgICBdKSxcbiAgICAuLi5wcm9wcy5wb3N0cy5zb3J0KChhLCBiKSA9PiB7XG4gICAgICBpZiAobmV3IERhdGUoYS5kYXRlKSA8IG5ldyBEYXRlKGIuZGF0ZSkpIHJldHVybiAxXG4gICAgICByZXR1cm4gLTFcbiAgICB9KS5tYXAocG9zdD0+e1xuICAgICAgcmV0dXJuIHByb3BzICYmIGgoTGlicmFyeVBvc3QsIHBvc3QpXG4gICAgfSlcbiAgXSlcbn1cblxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gYXN5bmMgKCkgPT57XG4gICAgbGV0IHBvc3RzID0gZnMucmVhZGRpclN5bmMoJy4vcGFnZXMvbGlicmFyeScpLm1hcCgoZmlsZSk9PntcbiAgICAgIGlmKGZzLmxzdGF0U3luYyhwYXRoLmpvaW4oJy4vcGFnZXMvbGlicmFyeS8nLCBmaWxlKSkuaXNEaXJlY3RvcnkoKSkgcmV0dXJuXG4gICAgICBsZXQgY29udGVudCA9IGZzLnJlYWRGaWxlU3luYygnLi9wYWdlcy9saWJyYXJ5LycrZmlsZSlcbiAgICAgIGxldCB7ZGF0YX0gPSBtYXR0ZXIoY29udGVudClcbiAgICAgIHJldHVybiB7Li4uZGF0YSwgcGF0aDogJy9saWJyYXJ5LycrZmlsZS5zbGljZSgwLCAtNCl9IGFzIExpYnJhcnlcbiAgICB9KS5maWx0ZXIoeD0+eCE9PXVuZGVmaW5lZClcbiAgXG4gICAgcmV0dXJuIHtwcm9wczoge3Bvc3RzOnBvc3RzIGFzIExpYnJhcnlbXX19IGFzIGNvbnN0XG4gIH1cblxuZXhwb3J0IGRlZmF1bHQgTGlicmFyeVxuXG4vLyBUaGlzIGRlZmluZXMgdGhlIGxheW91dCBmb3IgYSBzaW5nbGUgbGlicmFyeSBwb3N0ICh0YWdzLCB0aXRsZSwgYXV0aG9yLCBwdWJsaXNoIGRhdGUsIGRlc2NyaXB0aW9uKVxuY29uc3QgTGlicmFyeVBvc3QgPSAocHJvcHM6TGlicmFyeSkgPT4ge1xuICByZXR1cm4gaChCb3gsIHtnYXA6IDE2LCBzdHlsZToge21heFdpZHRoOiA2NDB9fSAsIFtcbiAgICBoKEJveCwge2g6dHJ1ZX0sIHByb3BzLnRhZ3MgJiYgcHJvcHMudGFncy5tYXAodGFnID0+IGgoVGFnLCB7dGFnVHlwZTogdGFnfSkpKSxcbiAgICBoKEJveCwge2dhcDo4fSwgW1xuICAgICAgaChMaW5rLCB7aHJlZjogcHJvcHMucGF0aH0sIGgoJ2Eubm90Qmx1ZScsIHtzdHlsZToge3RleHREZWNvcmF0aW9uOidub25lJ319LGgoJ2gyJywgcHJvcHMudGl0bGUpKSksXG4gICAgICBoKCdwLnRleHRTZWNvbmRhcnknLCBgYnkgJHtwcm9wcz8uYXV0aG9yfSB8ICR7IHByb3BzPy5kYXRlfWApLFxuICAgIF0pLFxuICAgIGgoJ2RpdicsIFtcbiAgICAgIGgoJ3AuYmlnJywgcHJvcHMuZGVzY3JpcHRpb24pXG4gICAgXSlcbiAgXSlcbn1cblxuLy8gVG8gYWRkIG5ldyB0YWcgdHlwZXMsIGFkZCB0aGVtIHRvIHRoaXMgb2JqZWN0LiBBZGQgdGhlIHRhZyB0eXBlIGFuZCBhIGNvbG9yIHRoZSB0YWcgc2hvdWxkIGJlLlxuY29uc3QgdGFnQ29sb3JzOntba2V5OiBzdHJpbmddOnN0cmluZyB8IHVuZGVmaW5lZH0gPSB7XG4gICAgJ2Fubm91bmNlbWVudCc6ICcjY2MyMjg4JyxcbiAgICAnYm9vay1yZXZpZXcnOiAnI2NjMzMyMicsXG4gICAgJ2xlYXJuaW5nLWRlc2lnbic6ICcjMTFhYWNjJyxcbiAgICAnbGVhcm5pbmctd3JpdGluZyc6ICcjNkI4NjQ4JyxcbiAgICAnbGVhcm5pbmctcHJvZ3JhbW1pbmcnOiAnI2NjMjI4OCcsXG4gICAgJ2h5cGVybGluay1tZXRhJzogJyMxZDQ0ZDYnLFxuICAgICdzdGFyZ2F6aW5nJzogJyM2Qjg2NDgnXG59XG5cbi8vIFRoaXMgaXMgYSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGFncyB3aXRoIHRoZSBhcHByb3ByaWF0ZSB0YWcgdHlwZSBhbmQgY29sb3IgYmFzZWQgb24gdGhlIGxpc3QgYWJvdmUuXG5jb25zdCBUYWcgPSBzdHlsZWQoUGlsbCkgPHt0YWdUeXBlOiBzdHJpbmd9PmBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+IHRhZ0NvbG9yc1twcm9wcy50YWdUeXBlXSB8fCBjb2xvcnMuZ3JleTM1fTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgJjo6YWZ0ZXJ7XG4gICAgICAgIGNvbnRlbnQ6IFwiJHtwcm9wcyA9PiBwcm9wcy50YWdUeXBlfVwiO1xuICAgIH1cbmBcbiJdfQ== */\"));","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/library/latest/index.ts"],"names":["h","fs","path","matter","Link","Box","colors","Pill","BackButton","Library","props","gap","href","posts","sort","a","b","Date","date","map","post","LibraryPost","getStaticProps","readdirSync","file","lstatSync","join","isDirectory","content","readFileSync","data","slice","filter","x","undefined","style","maxWidth","tags","tag","Tag","tagType","textDecoration","title","author","description","tagColors","grey35"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport styled from '@emotion/styled'\nimport fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\nimport { InferGetStaticPropsType } from 'next'\nimport Link from 'next/link'\n\nimport { Box } from 'components/Layout'\nimport { colors } from 'components/Tokens'\nimport {Pill} from 'components/Pill'\nimport { BackButton } from 'components/Button'\n\nexport type  Library = {\n  title:string,\n  author:string,\n  date:string,\n  path: string,\n  description:string,\n  tags:string[]\n}\n\n//the Library - Latest layout is defined here\n\ntype Props = InferGetStaticPropsType<typeof getStaticProps>\nconst Library = (props:Props) => {\n  return h(Box, {gap: 64}, [\n    h(Box, {gap: 8},[\n        h(BackButton, {href: \"/library\"}, 'Collections'),\n        h('h1', 'Latest Posts'),\n      ]),\n    ...props.posts.sort((a, b) => {\n      if (new Date(a.date) < new Date(b.date)) return 1\n      return -1\n    }).map(post=>{\n      return props && h(LibraryPost, post)\n    })\n  ])\n}\n\nexport const getStaticProps = async () =>{\n    let posts = fs.readdirSync('./pages/library').map((file)=>{\n      if(fs.lstatSync(path.join('./pages/library/', file)).isDirectory()) return\n      let content = fs.readFileSync('./pages/library/'+file)\n      let {data} = matter(content)\n      return {...data, path: '/library/'+file.slice(0, -4)} as Library\n    }).filter(x=>x!==undefined)\n  \n    return {props: {posts:posts as Library[]}} as const\n  }\n\nexport default Library\n\n// This defines the layout for a single library post (tags, title, author, publish date, description)\nconst LibraryPost = (props:Library) => {\n  return h(Box, {gap: 16, style: {maxWidth: 640}} , [\n    h(Box, {h:true}, props.tags && props.tags.map(tag => h(Tag, {tagType: tag}))),\n    h(Box, {gap:8}, [\n      h(Link, {href: props.path}, h('a.notBlue', {style: {textDecoration:'none'}},h('h2', props.title))),\n      h('p.textSecondary', `by ${props?.author} | ${ props?.date}`),\n    ]),\n    h('div', [\n      h('p.big', props.description)\n    ])\n  ])\n}\n\n// To add new tag types, add them to this object. Add the tag type and a color the tag should be.\nconst tagColors:{[key: string]:string | undefined} = {\n    'announcement': '#cc2288',\n    'book-review': '#cc3322',\n    'learning-design': '#11aacc',\n    'learning-writing': '#6B8648',\n    'learning-programming': '#cc2288',\n    'hyperlink-meta': '#1d44d6',\n    'stargazing': '#6B8648'\n}\n\n// This is a function that creates tags with the appropriate tag type and color based on the list above.\nconst Tag = styled(Pill) <{tagType: string}>`\n    background-color: ${props => tagColors[props.tagType] || colors.grey35};\n    color: white;\n    &::after{\n        content: \"${props => props.tagType}\";\n    }\n`\n"]},"metadata":{},"sourceType":"module"}