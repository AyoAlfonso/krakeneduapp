{"ast":null,"code":"import _defineProperty from \"/Users/ayooluwaalfonso/code/krakeneduapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { loadStripe } from '@stripe/stripe-js/pure';\nexport var prettyDate = function prettyDate(str) {\n  var date = new Date(str);\n  var today = new Date();\n  if (date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear()) return \"Today\";\n  return date.toLocaleDateString(undefined, {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  });\n};\nexport function dateFromDateAndTimeInputs(date, time) {\n  var dateParts = date.split('-').map(function (x) {\n    return parseInt(x);\n  });\n  var timeParts = time.split(':').map(function (x) {\n    return parseInt(x);\n  });\n  return new Date(dateParts[0], dateParts[1] - 1, dateParts[2], timeParts[0], timeParts[1]);\n}\nexport var slugify = function slugify(str) {\n  var specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~’]/g;\n  return str.trim().replace(specials, '').replace(/\\s/g, '-').toLowerCase();\n};\nexport var usernameValidate = function usernameValidate(s) {\n  return /^[a-zA-Z0-9_.\\-]{3,15}$/.test(s);\n};\nexport function getTimeBetween(d1, d2) {\n  return ((d2.getTime() - d1.getTime()) / (1000 * 60 * 60)).toFixed(1);\n}\nvar stripePromise;\nexport var getStripe = function getStripe() {\n  if (!stripePromise) {\n    stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n  }\n\n  return stripePromise;\n};\nexport var sortByDateAndName = function sortByDateAndName(a, b) {\n  if (a.start_date === b.start_date) return a.name > b.name ? 1 : -1;\n  return a.start_date > b.start_date ? 1 : -1;\n};\nexport var cohortName = function cohortName(name) {\n  return isNaN(parseInt(name)) ? name : \"Cohort #\".concat(name);\n};\nexport function formHelper(state, setState) {\n  return Object.keys(state).reduce(function (acc, key) {\n    var value = state[key];\n    acc[key] = {\n      value: value,\n      onChange: function onChange(e) {\n        return setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, typeof value === 'number' ? parseInt(e.currentTarget.value) : e.currentTarget.value)));\n      }\n    };\n    return acc;\n  }, {});\n}","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/src/utils.ts"],"names":["loadStripe","prettyDate","str","date","Date","today","getDate","getMonth","getFullYear","toLocaleDateString","undefined","month","day","year","dateFromDateAndTimeInputs","time","dateParts","split","map","x","parseInt","timeParts","slugify","specials","trim","replace","toLowerCase","usernameValidate","s","test","getTimeBetween","d1","d2","getTime","toFixed","stripePromise","getStripe","process","env","NEXT_PUBLIC_STRIPE_KEY","sortByDateAndName","a","b","start_date","name","cohortName","isNaN","formHelper","state","setState","Object","keys","reduce","acc","key","value","onChange","e","currentTarget"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,wBAA3B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAkB;AAC1C,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,GAAT,CAAX;AACA,MAAIG,KAAK,GAAG,IAAID,IAAJ,EAAZ;AACA,MAAGD,IAAI,CAACG,OAAL,OAAiBD,KAAK,CAACC,OAAN,EAAjB,IACDH,IAAI,CAACI,QAAL,OAAkBF,KAAK,CAACE,QAAN,EADjB,IAEDJ,IAAI,CAACK,WAAL,OAAqBH,KAAK,CAACG,WAAN,EAFvB,EAE4C,OAAO,OAAP;AAC5C,SAAOL,IAAI,CAACM,kBAAL,CAAwBC,SAAxB,EAAmC;AAACC,IAAAA,KAAK,EAAE,OAAR;AAAiBC,IAAAA,GAAG,EAAE,SAAtB;AAAiCC,IAAAA,IAAI,EAAE;AAAvC,GAAnC,CAAP;AACD,CAPM;AASP,OAAO,SAASC,yBAAT,CAAmCX,IAAnC,EAAiDY,IAAjD,EAA8D;AACnE,MAAIC,SAAS,GAAGb,IAAI,CAACc,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAAAC,CAAC;AAAA,WAAEC,QAAQ,CAACD,CAAD,CAAV;AAAA,GAArB,CAAhB;AACA,MAAIE,SAAS,GAAGN,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAAAC,CAAC;AAAA,WAAEC,QAAQ,CAACD,CAAD,CAAV;AAAA,GAArB,CAAhB;AACA,SAAO,IAAIf,IAAJ,CAASY,SAAS,CAAC,CAAD,CAAlB,EAAuBA,SAAS,CAAC,CAAD,CAAT,GAAc,CAArC,EAAwCA,SAAS,CAAC,CAAD,CAAjD,EAAsDK,SAAS,CAAC,CAAD,CAA/D,EAAoEA,SAAS,CAAC,CAAD,CAA7E,CAAP;AACD;AAED,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACpB,GAAD,EAAgB;AACrC,MAAIqB,QAAQ,GAAG,gEAAf;AACA,SAAOrB,GAAG,CAACsB,IAAJ,GACJC,OADI,CACIF,QADJ,EACc,EADd,EAEJE,OAFI,CAEI,KAFJ,EAEW,GAFX,EAGJC,WAHI,EAAP;AAID,CANM;AAQP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD;AAAA,SAAc,0BAA0BC,IAA1B,CAA+BD,CAA/B,CAAd;AAAA,CAAzB;AAEP,OAAO,SAASE,cAAT,CAAwBC,EAAxB,EAAkCC,EAAlC,EAA2C;AAChD,SAAO,CAAC,CAACA,EAAE,CAACC,OAAH,KAAeF,EAAE,CAACE,OAAH,EAAhB,KAAiC,OAAO,EAAP,GAAY,EAA7C,CAAD,EAAmDC,OAAnD,CAA2D,CAA3D,CAAP;AACD;AAGD,IAAIC,aAAJ;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,MAAI,CAACD,aAAL,EAAoB;AAClBA,IAAAA,aAAa,GAAGnC,UAAU,CAACqC,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA1B;AACD;;AACD,SAAOJ,aAAP;AACD,CALM;AAOP,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAuCC,CAAvC,EAA+E;AAC9G,MAAGD,CAAC,CAACE,UAAF,KAAiBD,CAAC,CAACC,UAAtB,EAAkC,OAAOF,CAAC,CAACG,IAAF,GAASF,CAAC,CAACE,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAA9B;AAClC,SAAOH,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAjB,GAA8B,CAA9B,GAAkC,CAAC,CAA1C;AACD,CAHM;AAKP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACD,IAAD;AAAA,SAAgBE,KAAK,CAAC1B,QAAQ,CAACwB,IAAD,CAAT,CAAL,GAAwBA,IAAxB,qBAA0CA,IAA1C,CAAhB;AAAA,CAAnB;AAEP,OAAO,SAASG,UAAT,CAAuBC,KAAvB,EAAgCC,QAAhC,EAAsD;AAC3D,SAAOC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MAAnB,CAA0B,UAACC,GAAD,EAAMC,GAAN,EAAa;AAC5C,QAAIC,KAAK,GAAEP,KAAK,CAACM,GAAD,CAAhB;AACAD,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAsB;AACpBC,MAAAA,KAAK,EAALA,KADoB;AAEpBC,MAAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,eAA+DR,QAAQ,iCAC5ED,KAD4E,2BAE9EM,GAF8E,EAExE,OAAOC,KAAP,KAAiB,QAAjB,GAA4BnC,QAAQ,CAACqC,CAAC,CAACC,aAAF,CAAgBH,KAAjB,CAApC,GAA8DE,CAAC,CAACC,aAAF,CAAgBH,KAFN,GAAvE;AAAA;AAFU,KAAtB;AAOA,WAAOF,GAAP;AACD,GAVM,EAUH,EAVG,CAAP;AAWD","sourcesContent":["import { loadStripe } from '@stripe/stripe-js/pure'\n\nexport const prettyDate = (str: string) =>  {\n  let date = new Date(str)\n  let today = new Date()\n  if(date.getDate()===today.getDate() &&\n    date.getMonth()===today.getMonth() &&\n    date.getFullYear()===today.getFullYear()) return \"Today\"\n  return date.toLocaleDateString(undefined, {month: 'short', day: 'numeric', year: 'numeric'})\n}\n\nexport function dateFromDateAndTimeInputs(date: string, time: string){\n  let dateParts = date.split('-').map(x=>parseInt(x))\n  let timeParts = time.split(':').map(x=>parseInt(x))\n  return new Date(dateParts[0], dateParts[1] -1, dateParts[2], timeParts[0], timeParts[1])\n}\n\nexport const slugify = (str:string) => {\n  var specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~’]/g\n  return str.trim()\n    .replace(specials, '')\n    .replace(/\\s/g, '-')\n    .toLowerCase()\n}\n\nexport const usernameValidate = (s:string) => /^[a-zA-Z0-9_.\\-]{3,15}$/.test(s)\n\nexport function getTimeBetween(d1: Date, d2:Date) {\n  return ((d2.getTime() - d1.getTime()) / (1000 * 60 * 60)).toFixed(1)\n}\n\n\nlet stripePromise:ReturnType<typeof loadStripe>\nexport const getStripe = () => {\n  if (!stripePromise) {\n    stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY!)\n  }\n  return stripePromise\n}\n\nexport const sortByDateAndName = (a:{start_date: string, name: string}, b:{start_date:string, name: string}) => {\n  if(a.start_date === b.start_date) return a.name > b.name ? 1 : -1\n  return a.start_date > b.start_date ? 1 : -1\n}\n\nexport const cohortName = (name: string)=>isNaN(parseInt(name)) ? name  :`Cohort #${name}`\n\nexport function formHelper<S>(state:S, setState:(s:S)=>void) {\n  return Object.keys(state).reduce((acc, key)=> {\n    let value =state[key as keyof S]\n    acc[key as keyof S] = {\n      value,\n      onChange: (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>setState({\n        ...state,\n        [key]: typeof value === 'number' ? parseInt(e.currentTarget.value) : e.currentTarget.value\n      })\n    }\n    return acc\n  },  {} as {[k in keyof S]: {value: S[k], onChange: (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>void}})\n}\n"]},"metadata":{},"sourceType":"module"}