{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport h from 'react-hyperscript';\nimport { useRouter } from 'next/router';\nimport { useApiData, callApi } from 'src/apiHelpers';\nimport { PageLoader } from 'components/Loader';\nimport { useState, useEffect } from 'react';\nimport { Box, LabelBox, FormBox } from 'components/Layout';\nimport { Input, Radio } from 'components/Form';\nimport { Primary, BackButton, Destructive } from 'components/Button';\nimport EditorWithPreview from 'components/EditorWithPreview';\n\nfunction TemplateSettings() {\n  let router = useRouter();\n  let templateId = router.query.templateId;\n  let courseId = router.query.id;\n  let {\n    data: templates,\n    mutate\n  } = useApiData(courseId ? `/api/courses/${courseId}/templates` : undefined);\n  let template = templates ? templates.find(t => t.name === templateId) : undefined;\n  let {\n    0: formState,\n    1: setFormState\n  } = useState(template || {\n    name: '',\n    content: '',\n    type: 'prepopulated',\n    title: ''\n  });\n  let {\n    0: status,\n    1: setStatus\n  } = useState('normal');\n  useEffect(() => {\n    if (template) setFormState(template);\n  }, [template]);\n  if (templateId !== 'new' && templates === undefined) return h(PageLoader);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    let res;\n    setStatus('loading');\n\n    if (templateId === 'new') {\n      res = await callApi(`/api/courses/${courseId}/templates`, formState);\n\n      if (res.status === 200 && templates) {\n        templates.push(res.result);\n        mutate(templates);\n      }\n    } else {\n      res = await callApi(`/api/courses/${courseId}/templates/${templateId}`, formState);\n\n      if (res.status === 200 && templates) {\n        if (res.result.name !== templateId) {\n          router.replace(`/courses/[slug]/[id]/settings/templates/[templateId]`, `/courses/${router.query.slug}/${router.query.id}/settings/templates/${res.result.name}`, {\n            shallow: true\n          });\n        }\n\n        mutate(templates === null || templates === void 0 ? void 0 : templates.map(t => {\n          if (res.status === 200 && template && t.name === template.name) return res.result;\n          return t;\n        }));\n      }\n    }\n\n    if (res.status === 200) {\n      setStatus('success');\n      if (templateId === 'new') router.push(`/courses/[slug]/[id]/settings/templates/[templateId]`, `/courses/${router.query.slug}/${router.query.id}/settings/templates/${res.result.name}`);\n    }\n  };\n\n  let disabled = templateId !== 'new' && template && !(formState.name !== template.name || formState.title !== template.title || formState.content !== template.content || formState.type !== template.type);\n  return h(Box, {\n    gap: 32\n  }, [h(Box, {\n    width: 640\n  }, [h(BackButton, {\n    href: \"/courses/[slug]/[id]/settings\",\n    as: `/courses/${router.query.slug}/${courseId}/settings`\n  }, 'Settings'), h('h2', router.query.templateId === 'new' ? 'Add New Template' : \"Edit Template\"), h('p.big', `Create templates for topics to either be included in every new cohort's forum, or to be triggered by a facilitator at any time.`)]), h(FormBox, {\n    onSubmit,\n    gap: 32\n  }, [// Template Name Input\n  h(LabelBox, {\n    width: 400,\n    gap: 8\n  }, [h('h4', \"Template Name\"), h(Input, {\n    disabled: (template === null || template === void 0 ? void 0 : template.required) || undefined,\n    type: \"text\",\n    value: formState.name,\n    onChange: e => setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      name: e.currentTarget.value\n    }))\n  })]), // Template Type Input\n  h(LabelBox, {\n    width: 640,\n    gap: 8\n  }, [h('h4', \"Type\"), h(Radio, {\n    disabled: (template === null || template === void 0 ? void 0 : template.required) || undefined,\n    name: \"type\",\n    selected: formState.type,\n    onChange: v => {\n      setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n        type: v\n      }));\n    },\n    items: [{\n      value: \"prepopulated\",\n      component: h('div', [h('h4', 'Prepopulated'), h('span.textSecondary', \"This topic will automatically be posted when each new cohort is created.\")])\n    }, {\n      value: \"triggered\",\n      component: h('div', [h('h4', \"Triggered\"), h('span.textSecondary', \"This topic will be posted when the facilitator triggers it from the cohort settings page.\")])\n    }]\n  })]), // Template Title Input\n  h(LabelBox, {\n    width: 400,\n    gap: 8\n  }, [h(Box, {\n    gap: 4\n  }, [h('h4', \"Default Topic Title\"), h('p.textSecondary', \"Default title of the published topic. For a triggered template, you'll be able to edit before publishing.\")]), h(Input, {\n    type: \"text\",\n    value: formState.title,\n    onChange: e => setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      title: e.currentTarget.value\n    }))\n  })]), // Template Body Input\n  h(LabelBox, {\n    gap: 8\n  }, [h(Box, {\n    gap: 4\n  }, [h('h4', \"Default Topic Body\"), h(Box, {\n    width: 400\n  }, [h('p.textSecondary', \"Default body text of the published topic. For a triggered template, you'll be able to edit before publishing.\"), h('p.textSecondary', [\"You can use Markdown to format \", h('a', {\n    href: 'https://commonmark.org/help/'\n  }, \"(quick reference)\"), '.'])])]), h(EditorWithPreview, {\n    value: formState.content,\n    onChange: e => setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      content: e.currentTarget.value\n    }))\n  })]), // Submit and Discard Changes Button\n  h(Box, {\n    h: true,\n    gap: 8,\n    style: {\n      justifySelf: 'end'\n    }\n  }, [h(Destructive, {\n    disabled,\n    onClick: e => {\n      e.preventDefault();\n      if (template) setFormState(template);\n    }\n  }, \"Discard Changes\"), h(Primary, {\n    status,\n    type: 'submit',\n    disabled\n  }, templateId === 'new' ? 'Create New Template' : \"Update Template\")])])]);\n}\n\nexport default TemplateSettings;","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/courses/[slug]/[id]/settings/templates/[templateId].ts"],"names":["h","useRouter","useApiData","callApi","PageLoader","useState","useEffect","Box","LabelBox","FormBox","Input","Radio","Primary","BackButton","Destructive","EditorWithPreview","TemplateSettings","router","templateId","query","courseId","id","data","templates","mutate","undefined","template","find","t","name","formState","setFormState","content","type","title","status","setStatus","onSubmit","e","preventDefault","res","push","result","replace","slug","shallow","map","disabled","gap","width","href","as","required","value","onChange","currentTarget","selected","v","items","component","style","justifySelf","onClick"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport { useRouter } from 'next/router'\nimport { useApiData, callApi } from 'src/apiHelpers'\nimport { GetTemplatesResult } from 'pages/api/courses/[id]/templates'\nimport { PageLoader } from 'components/Loader'\nimport { useState, useEffect } from 'react'\nimport { course_templates } from '@prisma/client'\nimport { Box, LabelBox, FormBox } from 'components/Layout'\nimport { Input, Radio } from 'components/Form'\nimport { Primary, BackButton, Destructive } from 'components/Button'\nimport {CreateTemplateMsg, CreateTemplateResult} from 'pages/api/courses/[id]/templates'\nimport { UpdateTemplateMsg, UpdateTemplateResult } from 'pages/api/courses/[id]/templates/[templateId]'\nimport EditorWithPreview from 'components/EditorWithPreview'\n\nfunction TemplateSettings() {\n  let router = useRouter()\n  let templateId = router.query.templateId\n  let courseId = router.query.id as string\n  let {data: templates, mutate }= useApiData<GetTemplatesResult>(courseId ? `/api/courses/${courseId}/templates` : undefined)\n  let template = templates ? templates.find(t=> t.name === templateId) : undefined\n\n  let [formState, setFormState] = useState<Omit<course_templates, 'course' | 'required'>>(template || {name: '', content:'', type: 'prepopulated', title: ''})\n  let [status, setStatus] = useState<'loading' | 'normal' |'success'>('normal')\n\n  useEffect(()=>{\n    if(template) setFormState(template)\n  }, [template])\n\n  if(templateId !=='new' && templates === undefined) return h(PageLoader)\n\n  const onSubmit = async (e:React.FormEvent) => {\n    e.preventDefault()\n    let res:CreateTemplateResult | UpdateTemplateResult\n    setStatus('loading')\n    if(templateId === 'new') {\n      res = await callApi<CreateTemplateMsg, CreateTemplateResult>(`/api/courses/${courseId}/templates`, formState)\n      if(res.status === 200 && templates) {\n        templates.push(res.result)\n        mutate(templates)\n      }\n    } else {\n      res = await callApi<UpdateTemplateMsg, UpdateTemplateResult>(`/api/courses/${courseId}/templates/${templateId}`, formState)\n      if(res.status === 200 && templates) {\n        if(res.result.name !== templateId) {\n          router.replace(`/courses/[slug]/[id]/settings/templates/[templateId]`,\n                      `/courses/${router.query.slug}/${router.query.id}/settings/templates/${res.result.name}`, {shallow: true})\n        }\n        mutate(templates?.map(t=>{\n          if(res.status === 200 && template && t.name===template.name) return res.result\n          return t\n        }))\n      }\n    }\n    if(res.status === 200) {\n      setStatus('success')\n      if(templateId === 'new') router.push(`/courses/[slug]/[id]/settings/templates/[templateId]`,\n                                           `/courses/${router.query.slug}/${router.query.id}/settings/templates/${res.result.name}`)\n    }\n  }\n\n  let disabled = templateId !== 'new' && template &&\n    !(formState.name !== template.name ||\n      formState.title !== template.title ||\n      formState.content !== template.content ||\n      formState.type !== template.type)\n\n  return h(Box, {gap: 32}, [\n    h(Box, {width: 640}, [\n      h(BackButton, {href: \"/courses/[slug]/[id]/settings\", as: `/courses/${router.query.slug}/${courseId}/settings`}, 'Settings'),\n      h('h2', router.query.templateId === 'new' ? 'Add New Template' : \"Edit Template\"),\n      h('p.big', `Create templates for topics to either be included in every new cohort's forum, or to be triggered by a facilitator at any time.`)\n    ]),\n    h(FormBox, {onSubmit, gap: 32}, [\n\n      // Template Name Input\n      h(LabelBox, {width: 400, gap: 8}, [\n        h('h4', \"Template Name\"),\n        h(Input, {\n          disabled: template?.required || undefined,\n          type: \"text\",\n          value: formState.name,\n          onChange: e => setFormState({...formState, name: e.currentTarget.value})\n        })\n      ]),\n\n      // Template Type Input\n      h(LabelBox, {width: 640, gap: 8}, [\n        h('h4', \"Type\"),\n        h(Radio, {\n          disabled: template?.required || undefined,\n          name: \"type\",\n          selected: formState.type,\n          onChange: (v)=>{\n            setFormState({...formState, type:v as typeof formState.type})\n          },\n          items: [\n            {value: \"prepopulated\", component: h('div', [\n              h('h4', 'Prepopulated'),\n              h('span.textSecondary', \"This topic will automatically be posted when each new cohort is created.\")\n            ])},\n            {value:\"triggered\", component: h('div', [\n              h('h4', \"Triggered\"),\n              h('span.textSecondary', \"This topic will be posted when the facilitator triggers it from the cohort settings page.\")\n            ])}\n          ] as const\n        })\n      ]),\n\n      // Template Title Input\n      h(LabelBox, {width: 400, gap: 8}, [\n        h(Box, {gap:4}, [\n          h('h4', \"Default Topic Title\"),\n          h('p.textSecondary', \"Default title of the published topic. For a triggered template, you'll be able to edit before publishing.\"),\n        ]),\n        h(Input, {\n          type: \"text\",\n          value: formState.title,\n          onChange: e => setFormState({...formState, title: e.currentTarget.value})\n        })\n      ]),\n\n      // Template Body Input\n      h(LabelBox, {gap: 8}, [\n        h(Box, {gap:4}, [\n          h('h4', \"Default Topic Body\"),\n          h(Box, {width: 400}, [\n            h('p.textSecondary', \"Default body text of the published topic. For a triggered template, you'll be able to edit before publishing.\"),\n            h('p.textSecondary', [\"You can use Markdown to format \", h('a', {href: 'https://commonmark.org/help/'}, \"(quick reference)\"), '.']),\n          ]),\n        ]),\n        h(EditorWithPreview, {\n          value: formState.content,\n          onChange: e=>setFormState({...formState, content: e.currentTarget.value})\n        }),\n      ]),\n\n      // Submit and Discard Changes Button\n      h(Box, {h: true, gap: 8, style:{justifySelf: 'end'}}, [\n        h(Destructive, {\n          disabled,\n          onClick: (e) => {\n            e.preventDefault()\n            if(template) setFormState(template)\n          }\n        }, \"Discard Changes\"),\n        h(Primary, {\n          status,\n          type: 'submit',\n          disabled\n        }, templateId === 'new' ? 'Create New Template' : \"Update Template\")\n      ])\n    ])\n  ])\n}\n\nexport default TemplateSettings\n"]},"metadata":{},"sourceType":"module"}