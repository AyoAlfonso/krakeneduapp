{"ast":null,"code":"import _defineProperty from \"/Users/ayooluwaalfonso/code/krakeneduapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/ayooluwaalfonso/code/krakeneduapp/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ayooluwaalfonso/code/krakeneduapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport h from 'react-hyperscript';\nimport { useRouter } from 'next/router';\nimport { useApiData, callApi } from 'src/apiHelpers';\nimport { PageLoader } from 'components/Loader';\nimport { useState, useEffect } from 'react';\nimport { Box, LabelBox, FormBox } from 'components/Layout';\nimport { Input, Radio } from 'components/Form';\nimport { Primary, BackButton, Destructive } from 'components/Button';\nimport EditorWithPreview from 'components/EditorWithPreview';\n\nfunction TemplateSettings() {\n  var router = useRouter();\n  var templateId = router.query.templateId;\n  var courseId = router.query.id;\n\n  var _useApiData = useApiData(courseId ? \"/api/courses/\".concat(courseId, \"/templates\") : undefined),\n      templates = _useApiData.data,\n      mutate = _useApiData.mutate;\n\n  var template = templates ? templates.find(function (t) {\n    return t.name === templateId;\n  }) : undefined;\n\n  var _useState = useState(template || {\n    name: '',\n    content: '',\n    type: 'prepopulated',\n    title: ''\n  }),\n      formState = _useState[0],\n      setFormState = _useState[1];\n\n  var _useState2 = useState('normal'),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  useEffect(function () {\n    if (template) setFormState(template);\n  }, [template]);\n  if (templateId !== 'new' && templates === undefined) return h(PageLoader);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setStatus('loading');\n\n              if (!(templateId === 'new')) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 5;\n              return callApi(\"/api/courses/\".concat(courseId, \"/templates\"), formState);\n\n            case 5:\n              res = _context.sent;\n\n              if (res.status === 200 && templates) {\n                templates.push(res.result);\n                mutate(templates);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.next = 11;\n              return callApi(\"/api/courses/\".concat(courseId, \"/templates/\").concat(templateId), formState);\n\n            case 11:\n              res = _context.sent;\n\n              if (res.status === 200 && templates) {\n                if (res.result.name !== templateId) {\n                  router.replace(\"/courses/[slug]/[id]/settings/templates/[templateId]\", \"/courses/\".concat(router.query.slug, \"/\").concat(router.query.id, \"/settings/templates/\").concat(res.result.name), {\n                    shallow: true\n                  });\n                }\n\n                mutate(templates === null || templates === void 0 ? void 0 : templates.map(function (t) {\n                  if (res.status === 200 && template && t.name === template.name) return res.result;\n                  return t;\n                }));\n              }\n\n            case 13:\n              if (res.status === 200) {\n                setStatus('success');\n                if (templateId === 'new') router.push(\"/courses/[slug]/[id]/settings/templates/[templateId]\", \"/courses/\".concat(router.query.slug, \"/\").concat(router.query.id, \"/settings/templates/\").concat(res.result.name));\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var disabled = templateId !== 'new' && template && !(formState.name !== template.name || formState.title !== template.title || formState.content !== template.content || formState.type !== template.type);\n  return h(Box, {\n    gap: 32\n  }, [h(Box, {\n    width: 640\n  }, [h(BackButton, {\n    href: \"/courses/[slug]/[id]/settings\",\n    as: \"/courses/\".concat(router.query.slug, \"/\").concat(courseId, \"/settings\")\n  }, 'Settings'), h('h2', router.query.templateId === 'new' ? 'Add New Template' : \"Edit Template\"), h('p.big', \"Create templates for topics to either be included in every new cohort's forum, or to be triggered by a facilitator at any time.\")]), h(FormBox, {\n    onSubmit: onSubmit,\n    gap: 32\n  }, [// Template Name Input\n  h(LabelBox, {\n    width: 400,\n    gap: 8\n  }, [h('h4', \"Template Name\"), h(Input, {\n    disabled: (template === null || template === void 0 ? void 0 : template.required) || undefined,\n    type: \"text\",\n    value: formState.name,\n    onChange: function onChange(e) {\n      return setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n        name: e.currentTarget.value\n      }));\n    }\n  })]), // Template Type Input\n  h(LabelBox, {\n    width: 640,\n    gap: 8\n  }, [h('h4', \"Type\"), h(Radio, {\n    disabled: (template === null || template === void 0 ? void 0 : template.required) || undefined,\n    name: \"type\",\n    selected: formState.type,\n    onChange: function onChange(v) {\n      setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n        type: v\n      }));\n    },\n    items: [{\n      value: \"prepopulated\",\n      component: h('div', [h('h4', 'Prepopulated'), h('span.textSecondary', \"This topic will automatically be posted when each new cohort is created.\")])\n    }, {\n      value: \"triggered\",\n      component: h('div', [h('h4', \"Triggered\"), h('span.textSecondary', \"This topic will be posted when the facilitator triggers it from the cohort settings page.\")])\n    }]\n  })]), // Template Title Input\n  h(LabelBox, {\n    width: 400,\n    gap: 8\n  }, [h(Box, {\n    gap: 4\n  }, [h('h4', \"Default Topic Title\"), h('p.textSecondary', \"Default title of the published topic. For a triggered template, you'll be able to edit before publishing.\")]), h(Input, {\n    type: \"text\",\n    value: formState.title,\n    onChange: function onChange(e) {\n      return setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n        title: e.currentTarget.value\n      }));\n    }\n  })]), // Template Body Input\n  h(LabelBox, {\n    gap: 8\n  }, [h(Box, {\n    gap: 4\n  }, [h('h4', \"Default Topic Body\"), h(Box, {\n    width: 400\n  }, [h('p.textSecondary', \"Default body text of the published topic. For a triggered template, you'll be able to edit before publishing.\"), h('p.textSecondary', [\"You can use Markdown to format \", h('a', {\n    href: 'https://commonmark.org/help/'\n  }, \"(quick reference)\"), '.'])])]), h(EditorWithPreview, {\n    value: formState.content,\n    onChange: function onChange(e) {\n      return setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n        content: e.currentTarget.value\n      }));\n    }\n  })]), // Submit and Discard Changes Button\n  h(Box, {\n    h: true,\n    gap: 8,\n    style: {\n      justifySelf: 'end'\n    }\n  }, [h(Destructive, {\n    disabled: disabled,\n    onClick: function onClick(e) {\n      e.preventDefault();\n      if (template) setFormState(template);\n    }\n  }, \"Discard Changes\"), h(Primary, {\n    status: status,\n    type: 'submit',\n    disabled: disabled\n  }, templateId === 'new' ? 'Create New Template' : \"Update Template\")])])]);\n}\n\nexport default TemplateSettings;","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/courses/[slug]/[id]/settings/templates/[templateId].ts"],"names":["h","useRouter","useApiData","callApi","PageLoader","useState","useEffect","Box","LabelBox","FormBox","Input","Radio","Primary","BackButton","Destructive","EditorWithPreview","TemplateSettings","router","templateId","query","courseId","id","undefined","templates","data","mutate","template","find","t","name","content","type","title","formState","setFormState","status","setStatus","onSubmit","e","preventDefault","res","push","result","replace","slug","shallow","map","disabled","gap","width","href","as","required","value","onChange","currentTarget","selected","v","items","component","style","justifySelf","onClick"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport { useRouter } from 'next/router'\nimport { useApiData, callApi } from 'src/apiHelpers'\nimport { GetTemplatesResult } from 'pages/api/courses/[id]/templates'\nimport { PageLoader } from 'components/Loader'\nimport { useState, useEffect } from 'react'\nimport { course_templates } from '@prisma/client'\nimport { Box, LabelBox, FormBox } from 'components/Layout'\nimport { Input, Radio } from 'components/Form'\nimport { Primary, BackButton, Destructive } from 'components/Button'\nimport {CreateTemplateMsg, CreateTemplateResult} from 'pages/api/courses/[id]/templates'\nimport { UpdateTemplateMsg, UpdateTemplateResult } from 'pages/api/courses/[id]/templates/[templateId]'\nimport EditorWithPreview from 'components/EditorWithPreview'\n\nfunction TemplateSettings() {\n  let router = useRouter()\n  let templateId = router.query.templateId\n  let courseId = router.query.id as string\n  let {data: templates, mutate }= useApiData<GetTemplatesResult>(courseId ? `/api/courses/${courseId}/templates` : undefined)\n  let template = templates ? templates.find(t=> t.name === templateId) : undefined\n\n  let [formState, setFormState] = useState<Omit<course_templates, 'course' | 'required'>>(template || {name: '', content:'', type: 'prepopulated', title: ''})\n  let [status, setStatus] = useState<'loading' | 'normal' |'success'>('normal')\n\n  useEffect(()=>{\n    if(template) setFormState(template)\n  }, [template])\n\n  if(templateId !=='new' && templates === undefined) return h(PageLoader)\n\n  const onSubmit = async (e:React.FormEvent) => {\n    e.preventDefault()\n    let res:CreateTemplateResult | UpdateTemplateResult\n    setStatus('loading')\n    if(templateId === 'new') {\n      res = await callApi<CreateTemplateMsg, CreateTemplateResult>(`/api/courses/${courseId}/templates`, formState)\n      if(res.status === 200 && templates) {\n        templates.push(res.result)\n        mutate(templates)\n      }\n    } else {\n      res = await callApi<UpdateTemplateMsg, UpdateTemplateResult>(`/api/courses/${courseId}/templates/${templateId}`, formState)\n      if(res.status === 200 && templates) {\n        if(res.result.name !== templateId) {\n          router.replace(`/courses/[slug]/[id]/settings/templates/[templateId]`,\n                      `/courses/${router.query.slug}/${router.query.id}/settings/templates/${res.result.name}`, {shallow: true})\n        }\n        mutate(templates?.map(t=>{\n          if(res.status === 200 && template && t.name===template.name) return res.result\n          return t\n        }))\n      }\n    }\n    if(res.status === 200) {\n      setStatus('success')\n      if(templateId === 'new') router.push(`/courses/[slug]/[id]/settings/templates/[templateId]`,\n                                           `/courses/${router.query.slug}/${router.query.id}/settings/templates/${res.result.name}`)\n    }\n  }\n\n  let disabled = templateId !== 'new' && template &&\n    !(formState.name !== template.name ||\n      formState.title !== template.title ||\n      formState.content !== template.content ||\n      formState.type !== template.type)\n\n  return h(Box, {gap: 32}, [\n    h(Box, {width: 640}, [\n      h(BackButton, {href: \"/courses/[slug]/[id]/settings\", as: `/courses/${router.query.slug}/${courseId}/settings`}, 'Settings'),\n      h('h2', router.query.templateId === 'new' ? 'Add New Template' : \"Edit Template\"),\n      h('p.big', `Create templates for topics to either be included in every new cohort's forum, or to be triggered by a facilitator at any time.`)\n    ]),\n    h(FormBox, {onSubmit, gap: 32}, [\n\n      // Template Name Input\n      h(LabelBox, {width: 400, gap: 8}, [\n        h('h4', \"Template Name\"),\n        h(Input, {\n          disabled: template?.required || undefined,\n          type: \"text\",\n          value: formState.name,\n          onChange: e => setFormState({...formState, name: e.currentTarget.value})\n        })\n      ]),\n\n      // Template Type Input\n      h(LabelBox, {width: 640, gap: 8}, [\n        h('h4', \"Type\"),\n        h(Radio, {\n          disabled: template?.required || undefined,\n          name: \"type\",\n          selected: formState.type,\n          onChange: (v)=>{\n            setFormState({...formState, type:v as typeof formState.type})\n          },\n          items: [\n            {value: \"prepopulated\", component: h('div', [\n              h('h4', 'Prepopulated'),\n              h('span.textSecondary', \"This topic will automatically be posted when each new cohort is created.\")\n            ])},\n            {value:\"triggered\", component: h('div', [\n              h('h4', \"Triggered\"),\n              h('span.textSecondary', \"This topic will be posted when the facilitator triggers it from the cohort settings page.\")\n            ])}\n          ] as const\n        })\n      ]),\n\n      // Template Title Input\n      h(LabelBox, {width: 400, gap: 8}, [\n        h(Box, {gap:4}, [\n          h('h4', \"Default Topic Title\"),\n          h('p.textSecondary', \"Default title of the published topic. For a triggered template, you'll be able to edit before publishing.\"),\n        ]),\n        h(Input, {\n          type: \"text\",\n          value: formState.title,\n          onChange: e => setFormState({...formState, title: e.currentTarget.value})\n        })\n      ]),\n\n      // Template Body Input\n      h(LabelBox, {gap: 8}, [\n        h(Box, {gap:4}, [\n          h('h4', \"Default Topic Body\"),\n          h(Box, {width: 400}, [\n            h('p.textSecondary', \"Default body text of the published topic. For a triggered template, you'll be able to edit before publishing.\"),\n            h('p.textSecondary', [\"You can use Markdown to format \", h('a', {href: 'https://commonmark.org/help/'}, \"(quick reference)\"), '.']),\n          ]),\n        ]),\n        h(EditorWithPreview, {\n          value: formState.content,\n          onChange: e=>setFormState({...formState, content: e.currentTarget.value})\n        }),\n      ]),\n\n      // Submit and Discard Changes Button\n      h(Box, {h: true, gap: 8, style:{justifySelf: 'end'}}, [\n        h(Destructive, {\n          disabled,\n          onClick: (e) => {\n            e.preventDefault()\n            if(template) setFormState(template)\n          }\n        }, \"Discard Changes\"),\n        h(Primary, {\n          status,\n          type: 'submit',\n          disabled\n        }, templateId === 'new' ? 'Create New Template' : \"Update Template\")\n      ])\n    ])\n  ])\n}\n\nexport default TemplateSettings\n"]},"metadata":{},"sourceType":"module"}