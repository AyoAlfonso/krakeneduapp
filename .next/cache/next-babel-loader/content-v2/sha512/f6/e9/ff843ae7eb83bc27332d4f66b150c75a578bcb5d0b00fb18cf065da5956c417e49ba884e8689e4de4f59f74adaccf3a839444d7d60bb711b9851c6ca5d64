{"ast":null,"code":"import _styled from \"@emotion/styled-base\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport h from 'react-hyperscript';\n// import LandingPage2 from 'components/LandingPage2'\n// import Intro from 'writing/Intro.mdx'\nimport { Mobile, Tablet } from 'components/Tokens';\nimport { Box // Body, \n, FlexGrid } from 'components/Layout';\nimport { Primary, Secondary } from 'components/Button'; // import {TitleImg} from '../components/Images'\n\nimport { useCourses } from 'src/data';\nimport { getToken } from 'src/token'; // import NewsletterSignup from 'components/NewsletterSignup'\n\nimport { coursesQuery } from 'pages/api/courses';\nimport { getPublicEventsQuery } from './api/events';\nimport Link from 'next/link';\nimport { EventCard } from 'components/Cards/EventCard';\nimport { CourseCohortCard, ClubCohortCard } from 'components/Cards/CohortCard';\nlet COPY = {\n  hyperlinkTagline: \"Kraken.Edu is the future of work and upskilling in Nigeria.\",\n  // registerHeader: \"Calling all professionals! Join the KrakenEdu Alpha to propose a course idea, and (very soon!) enroll one of our first courses.\",\n  registerButton: \"Browse the Courses\",\n  emailHeader: \"Get updates about new courses and more!\",\n  // emailDescription: \"We'll never spam or share your email. You can unsubscribe at any time.\",\n  emailButton: \"Get Updates\",\n  coursesHeader: \"All Courses\"\n};\n\nconst Landing = props => {\n  let {\n    data: allCourses\n  } = useCourses({\n    initialData: props\n  });\n  let [courses, clubs] = (allCourses || props).courses.filter(course => {\n    return !!course.course_cohorts.filter(c => course.cohort_max_size === 0 || course.cohort_max_size !== c.people_in_cohorts.length)[0];\n  }).sort((a, b) => {\n    let upcomingCohortA = a.course_cohorts.filter(c => new Date(c.start_date) > new Date())[0];\n    let upcomingCohortB = b.course_cohorts.filter(c => new Date(c.start_date) > new Date())[0];\n    if (upcomingCohortA.start_date === upcomingCohortB.start_date) return a.name > b.name ? 1 : -1;\n    return new Date(upcomingCohortA.start_date) < new Date(upcomingCohortB === null || upcomingCohortB === void 0 ? void 0 : upcomingCohortB.start_date) ? -1 : 1;\n  }).reduce((acc, course) => {\n    acc[course.type === 'course' ? 0 : 1].push(course);\n    return acc;\n  }, [[], []]);\n  return h(Box, {\n    gap: 48\n  }, [h(Welcome), // h(WhyHyperlink, {}, h(Body, {}, h(Intro))),\n  !courses || courses.length === 0 ? null : h(Box, {\n    gap: 48\n  }, [h('h1', {\n    id: 'courses'\n  }, \"Upcoming Courses\"), h(FlexGrid, {\n    min: 400,\n    mobileMin: 320\n  }, courses.flatMap(course => {\n    return course.course_cohorts.map(cohort => {\n      return h(CourseCohortCard, _objectSpread(_objectSpread({}, cohort), {}, {\n        course\n      }));\n    });\n  }).slice(0, 4)), h(Link, {\n    href: \"/courses\"\n  }, h('a', {\n    style: {\n      justifySelf: \"right\"\n    }\n  }, h(Secondary, 'see all courses')))]), !clubs || clubs.length === 0 ? null : h(Box, {\n    gap: 48\n  }, [h('h1', \"Upcoming Clubs\"), h(FlexGrid, {\n    min: 290,\n    mobileMin: 290\n  }, clubs.flatMap(course => {\n    return course.course_cohorts.map(cohort => {\n      return h(ClubCohortCard, _objectSpread(_objectSpread({}, cohort), {}, {\n        course\n      }));\n    });\n  }).slice(0, 6)), h(Link, {\n    href: \"/clubs\"\n  }, h('a', {\n    style: {\n      justifySelf: \"right\"\n    }\n  }, h(Secondary, 'see all clubs')))]), props.events.length === 0 ? null : h(Box, {\n    gap: 48\n  }, [h('h1', \"Upcoming Events\"), h(FlexGrid, {\n    min: 400,\n    mobileMin: 300\n  }, props.events.map(ev => h(Link, {\n    passHref: true,\n    href: `/events/${ev.event}`\n  }, h(EventCard, _objectSpread({\n    cost: ev.cost\n  }, ev.events)))))]), h(Link, {\n    href: \"/events\"\n  }, h('a', {\n    style: {\n      justifySelf: \"right\"\n    }\n  }, h(Secondary, 'see all events')))]);\n};\n\nconst Welcome = () => {\n  return h(LandingContainer, [h(Box, {\n    gap: 16\n  }, [h(Box, {\n    gap: 32\n  }, [h(Title, ['Kraken.', h('wbr'), 'Edu']), h(Tagline, COPY.hyperlinkTagline)]), h(CTAGrid, [h('a', {\n    href: '#courses'\n  }, h(Primary, {}, COPY.registerButton)) // h(NewsletterSignup)\n  ])])]);\n}; // let WhyKrakenEdu = styled('div')`\n// background-color: #F0F7FA;\n// width: 100vw;\n// position: relative;\n// left: 50%;\n// right: 50%;\n// margin-left: -50vw;\n// margin-right: -50vw;\n// text-align: center;\n// `\n\n\nexport const getServerSideProps = async ({\n  req,\n  res\n}) => {\n  let token = getToken(req);\n\n  if (!token) {\n    let courses = (await coursesQuery()).filter(course => {\n      return !!course.course_cohorts.filter(c => course.cohort_max_size === 0 || course.cohort_max_size !== c.people_in_cohorts.length)[0];\n    });\n    let events = (await getPublicEventsQuery()).filter(event => {\n      return new Date(event.events.start_date) > new Date();\n    }).slice(0, 3);\n    return {\n      props: {\n        courses,\n        events\n      }\n    };\n  }\n\n  res.writeHead(303, {\n    Location: '/dashboard'\n  });\n  res.end();\n  return {\n    props: {\n      courses: [],\n      events: []\n    }\n  };\n};\n\nconst LandingContainer = /*#__PURE__*/_styled('div', {\n  target: \"ev6di3f0\",\n  label: \"LandingContainer\"\n})(\"background-image:url('/img/landing.png');background-repeat:no-repeat;background-position:right center;background-size:75%;image-rendering:pixelated;image-rendering:crisp-edges;height:700px;\", Tablet, \"{height:auto;background-position:right 80px;};\", Mobile, \"{background-position:center 104px;background-size:280px;};\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n/* Text Styling for Landing Content */\n\n\nconst Title = /*#__PURE__*/_styled('h1', {\n  target: \"ev6di3f1\",\n  label: \"Title\"\n})(\"font-family:'Roboto Mono',monospace;font-size:4rem;text-decoration:none;font-weight:bold;color:blue;z-index:2;\", Tablet, \"{font-size:2.625rem;}\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nconst Tagline = /*#__PURE__*/_styled('h3', {\n  target: \"ev6di3f2\",\n  label: \"Tagline\"\n})(\"z-index:2;width:33%;color:19ef7d;\", Mobile, \"{padding-top:176px;width:100%;}\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nconst CTAGrid = /*#__PURE__*/_styled('div', {\n  target: \"ev6di3f3\",\n  label: \"CTAGrid\"\n})(\"width:25%;display:grid;grid-gap:32px;grid-template-rows:auto auto;\", Tablet, \"{width:100%;}\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nexport default Landing;","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/index.ts"],"names":["h","Mobile","Tablet","Box","FlexGrid","Primary","Secondary","useCourses","getToken","coursesQuery","getPublicEventsQuery","Link","EventCard","CourseCohortCard","ClubCohortCard","COPY","hyperlinkTagline","registerButton","emailHeader","emailButton","coursesHeader","Landing","props","data","allCourses","initialData","courses","clubs","filter","course","course_cohorts","c","cohort_max_size","people_in_cohorts","length","sort","a","b","upcomingCohortA","Date","start_date","upcomingCohortB","name","reduce","acc","type","push","gap","Welcome","id","min","mobileMin","flatMap","map","cohort","slice","href","style","justifySelf","events","ev","passHref","event","cost","LandingContainer","Title","Tagline","CTAGrid","getServerSideProps","req","res","token","writeHead","Location","end"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport styled from '@emotion/styled'\nimport { InferGetServerSidePropsType, GetServerSidePropsContext } from 'next'\n// import LandingPage2 from 'components/LandingPage2'\n// import Intro from 'writing/Intro.mdx'\nimport { Mobile, Tablet} from 'components/Tokens'\nimport { Box, \n// Body, \nFlexGrid} from 'components/Layout'\nimport { Primary, Secondary } from 'components/Button'\n// import {TitleImg} from '../components/Images'\nimport { Courses, useCourses } from 'src/data'\nimport {getToken} from 'src/token'\n// import NewsletterSignup from 'components/NewsletterSignup'\nimport { coursesQuery } from 'pages/api/courses'\nimport { getPublicEventsQuery } from './api/events'\nimport Link from 'next/link'\nimport { EventCard } from 'components/Cards/EventCard'\nimport {CourseCohortCard, ClubCohortCard} from 'components/Cards/CohortCard'\n\nlet COPY = {\n  hyperlinkTagline:\n    \"Kraken.Edu is the future of work and upskilling in Nigeria.\",\n  // registerHeader: \"Calling all professionals! Join the KrakenEdu Alpha to propose a course idea, and (very soon!) enroll one of our first courses.\",\n  registerButton: \"Browse the Courses\",\n  emailHeader: \"Get updates about new courses and more!\",\n  // emailDescription: \"We'll never spam or share your email. You can unsubscribe at any time.\",\n  emailButton: \"Get Updates\",\n  coursesHeader: \"All Courses\",\n};\n\ntype Props = InferGetServerSidePropsType<typeof getServerSideProps>\nconst Landing = (props:Props) => {\n  let {data: allCourses} = useCourses({initialData:props})\n  let [courses, clubs] = (allCourses || props).courses\n      .filter(course=> {\n        return !!course.course_cohorts.filter(c=> course.cohort_max_size === 0 || course.cohort_max_size !==c.people_in_cohorts.length)[0]\n      })\n      .sort((a,b)=>{\n        let upcomingCohortA = a.course_cohorts.filter(c=>new Date(c.start_date) > new Date())[0]\n        let upcomingCohortB = b.course_cohorts.filter(c=>new Date(c.start_date) > new Date())[0]\n\n        if(upcomingCohortA.start_date === upcomingCohortB.start_date) return a.name > b.name ? 1 : -1\n        return new Date(upcomingCohortA.start_date) < new Date(upcomingCohortB?.start_date) ? -1 : 1\n      })\n      .reduce((acc, course)=>{\n        acc[course.type === 'course' ? 0 : 1].push(course)\n        return acc\n      }, [[],[]] as Array<Courses[\"courses\"]>)\n\n\n  \n  return h(Box, {gap:48}, [\n    h(Welcome),\n    // h(WhyHyperlink, {}, h(Body, {}, h(Intro))),\n    !courses || courses.length === 0 ? null : h(Box, {gap: 48}, [\n      h('h1', {id: 'courses'}, \"Upcoming Courses\"),\n      h(FlexGrid, {min: 400, mobileMin: 320}, \n        courses.flatMap(course=>{\n          return course.course_cohorts.map(cohort=>{\n            return  h(CourseCohortCard, {...cohort, course})\n          })\n        }).slice(0, 4)\n       ),\n      h(Link, {href:\"/courses\"}, h('a', {style:{justifySelf:\"right\"}},  h(Secondary, 'see all courses')))\n    ]),\n    !clubs || clubs.length === 0 ? null : h(Box, {gap: 48}, [\n      h('h1', \"Upcoming Clubs\"),\n      h(FlexGrid, {min: 290, mobileMin: 290},\n        clubs.flatMap(course=>{\n          return course.course_cohorts.map(cohort=>{\n            return  h(ClubCohortCard, {...cohort, course})\n          })\n        }).slice(0, 6)\n       ),\n      h(Link, {href:\"/clubs\"}, h('a', {style:{justifySelf:\"right\"}},  h(Secondary, 'see all clubs')))\n    ]),\n    props.events.length === 0 ? null : h(Box, {gap: 48}, [\n      h('h1', \"Upcoming Events\"),\n      h(FlexGrid,\n        {min: 400, mobileMin: 300},\n        props.events.map(ev => h(Link, {passHref:true, href:`/events/${ev.event}`}, h(EventCard, {cost:ev.cost, ...ev.events}))))\n    ]),\n    h(Link, {href:\"/events\"}, h('a', {style:{justifySelf:\"right\"}},  h(Secondary, 'see all events')))\n  ])\n}\n\nconst Welcome = () =>{\n  return h(LandingContainer, [\n    h(Box, {gap:16}, [\n      h(Box, {gap:32}, [\n      h(Title, ['Kraken.', h('wbr'), 'Edu']),\n      h(Tagline, COPY.hyperlinkTagline),\n      ]),\n      h(CTAGrid, [\n        h('a', {href:'#courses'}, h(Primary, {}, COPY.registerButton)),\n        // h(NewsletterSignup)\n      ]),\n    ]),\n  ])\n}\n\n// let WhyKrakenEdu = styled('div')`\n// background-color: #F0F7FA;\n// width: 100vw;\n// position: relative;\n// left: 50%;\n// right: 50%;\n// margin-left: -50vw;\n// margin-right: -50vw;\n// text-align: center;\n// `\n\nexport const getServerSideProps = async ({req,res}:GetServerSidePropsContext) => {\n  let token = getToken(req)\n  if(!token) {\n    let courses = (await coursesQuery()).filter(course=>{\n      return !!course.course_cohorts\n        .filter(c=> (course.cohort_max_size === 0\n          || course.cohort_max_size !==c.people_in_cohorts.length))[0]\n    })\n    let events = (await getPublicEventsQuery()).filter(event=>{\n      return new Date(event.events.start_date) > new Date()\n    }).slice(0, 3)\n    return {props: {courses, events}} as const\n  }\n\n  res.writeHead(303, {Location: '/dashboard'})\n  res.end()\n  return {props:{courses:[], events:[]}}\n}\n\n\nconst LandingContainer = styled('div')`\n/* setting up the background image */\nbackground-image: url('/img/landing.png');\nbackground-repeat: no-repeat;\nbackground-position: right center;\nbackground-size: 75%;\nimage-rendering: pixelated;\nimage-rendering: crisp-edges;\nheight: 700px;\n\n${Tablet} {\n  height: auto;\n  background-position: right 80px;\n};\n\n\n${Mobile}{\n  background-position: center 104px;\n  background-size: 280px;\n\n};\n`\n\n/* Text Styling for Landing Content */\nconst Title = styled('h1')`\nfont-family: 'Roboto Mono', monospace;\nfont-size: 4rem;\ntext-decoration: none;\nfont-weight: bold;\ncolor: blue;\nz-index: 2;\n\n${Tablet} {\n  font-size: 2.625rem;  \n}\n`\n\nconst Tagline = styled('h3')`\nz-index: 2;\nwidth: 33%;\ncolor:19ef7d;\n\n  ${Mobile} {\n    padding-top: 176px;\n    width: 100%;\n  }\n`\n\nconst CTAGrid = styled('div')`\n  width: 25%;\n  display: grid;\n  grid-gap: 32px; \n  grid-template-rows: auto auto;\n\n  ${Tablet}{\n    width: 100%;\n  }\n`\n\nexport default Landing\n"]},"metadata":{},"sourceType":"module"}