{"ast":null,"code":"import _styled from \"@emotion/styled-base\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport h from \"react-hyperscript\";\n// import LandingPage2 from 'components/LandingPage2'\n// import Intro from 'writing/Intro.mdx'\nimport { Mobile, Tablet } from \"components/Tokens\";\nimport { Box // Body,\n, FlexGrid } from \"components/Layout\";\nimport { Primary, Secondary } from \"components/Button\"; // import {TitleImg} from '../components/Images'\n\nimport { useCourses } from \"src/data\";\nimport { getToken } from \"src/token\"; // import NewsletterSignup from 'components/NewsletterSignup'\n\nimport { coursesQuery } from \"pages/api/courses\";\nimport { getPublicEventsQuery } from \"./api/events\";\nimport Link from \"next/link\";\nimport { EventCard } from \"components/Cards/EventCard\";\nimport { CourseCohortCard, ClubCohortCard } from \"components/Cards/CohortCard\";\nlet COPY = {\n  hyperlinkTagline: \"Kraken.Edu is the future of work and upskilling in Nigeria.\",\n  // registerHeader: \"Calling all professionals! Join the KrakenEdu Alpha to propose a course idea, and (very soon!) enroll one of our first courses.\",\n  registerButton: \"Browse the Courses\",\n  emailHeader: \"Get updates about new courses and more!\",\n  // emailDescription: \"We'll never spam or share your email. You can unsubscribe at any time.\",\n  emailButton: \"Get Updates\",\n  coursesHeader: \"All Courses\"\n};\n\nconst Landing = props => {\n  let {\n    data: allCourses\n  } = useCourses({\n    initialData: props\n  });\n  let [courses, clubs] = (allCourses || props).courses.filter(course => {\n    return !!course.course_cohorts.filter(c => course.cohort_max_size === 0 || course.cohort_max_size !== c.people_in_cohorts.length)[0];\n  }).sort((a, b) => {\n    let upcomingCohortA = a.course_cohorts.filter(c => new Date(c.start_date) > new Date())[0];\n    let upcomingCohortB = b.course_cohorts.filter(c => new Date(c.start_date) > new Date())[0];\n    if (upcomingCohortA.start_date === upcomingCohortB.start_date) return a.name > b.name ? 1 : -1;\n    return new Date(upcomingCohortA.start_date) < new Date(upcomingCohortB === null || upcomingCohortB === void 0 ? void 0 : upcomingCohortB.start_date) ? -1 : 1;\n  }).reduce((acc, course) => {\n    acc[course.type === \"course\" ? 0 : 1].push(course);\n    return acc;\n  }, [[], []]);\n  return h(Box, {\n    gap: 48\n  }, [h(Welcome), // h(WhyHyperlink, {}, h(Body, {}, h(Intro))),\n  !courses || courses.length === 0 ? null : h(Box, {\n    gap: 48\n  }, [h(\"h1\", {\n    id: \"courses\"\n  }, \"Upcoming Courses\"), h(FlexGrid, {\n    min: 400,\n    mobileMin: 320\n  }, courses.flatMap(course => {\n    return course.course_cohorts.map(cohort => {\n      return h(CourseCohortCard, _objectSpread(_objectSpread({}, cohort), {}, {\n        course\n      }));\n    });\n  }).slice(0, 4)), h(Link, {\n    href: \"/courses\"\n  }, h(\"a\", {\n    style: {\n      justifySelf: \"right\"\n    }\n  }, h(Secondary, \"see all courses\")))]), !clubs || clubs.length === 0 ? null : h(Box, {\n    gap: 48\n  }, [h(\"h1\", \"Upcoming Clubs\"), h(FlexGrid, {\n    min: 290,\n    mobileMin: 290\n  }, clubs.flatMap(course => {\n    return course.course_cohorts.map(cohort => {\n      return h(ClubCohortCard, _objectSpread(_objectSpread({}, cohort), {}, {\n        course\n      }));\n    });\n  }).slice(0, 6)), h(Link, {\n    href: \"/clubs\"\n  }, h(\"a\", {\n    style: {\n      justifySelf: \"right\"\n    }\n  }, h(Secondary, \"see all clubs\")))]), props.events.length === 0 ? null : h(Box, {\n    gap: 48\n  }, [h(\"h1\", \"Upcoming Events\"), h(FlexGrid, {\n    min: 400,\n    mobileMin: 300\n  }, props.events.map(ev => h(Link, {\n    passHref: true,\n    href: `/events/${ev.event}`\n  }, h(EventCard, _objectSpread({\n    cost: ev.cost\n  }, ev.events)))))]), h(Link, {\n    href: \"/events\"\n  }, h(\"a\", {\n    style: {\n      justifySelf: \"right\"\n    }\n  }, h(Secondary, \"see all events\")))]);\n};\n\nconst Welcome = () => {\n  return h(LandingContainer, [h(Box, {\n    gap: 16\n  }, [h(Box, {\n    gap: 32\n  }, [h(Title, [\"Kraken.\", h(\"wbr\"), \"Edu\"]), h(Tagline, COPY.hyperlinkTagline)]), h(CTAGrid, [h(\"a\", {\n    href: \"#courses\"\n  }, h(Primary, {}, COPY.registerButton)) // h(NewsletterSignup)\n  ])])]);\n}; // let WhyKrakenEdu = styled('div')`\n// background-color: #F0F7FA;\n// width: 100vw;\n// position: relative;\n// left: 50%;\n// right: 50%;\n// margin-left: -50vw;\n// margin-right: -50vw;\n// text-align: center;\n// `\n\n\nexport const getServerSideProps = async ({\n  req,\n  res\n}) => {\n  let token = getToken(req);\n\n  if (!token) {\n    let courses = (await coursesQuery()).filter(course => {\n      return !!course.course_cohorts.filter(c => course.cohort_max_size === 0 || course.cohort_max_size !== c.people_in_cohorts.length)[0];\n    });\n    let events = (await getPublicEventsQuery()).filter(event => {\n      return new Date(event.events.start_date) > new Date();\n    }).slice(0, 3);\n    return {\n      props: {\n        courses,\n        events\n      }\n    };\n  }\n\n  res.writeHead(303, {\n    Location: \"/dashboard\"\n  });\n  res.end();\n  return {\n    props: {\n      courses: [],\n      events: []\n    }\n  };\n};\n\nconst LandingContainer = /*#__PURE__*/_styled(\"div\", {\n  target: \"ev6di3f0\",\n  label: \"LandingContainer\"\n})(\"background-image:url(\\\"/img/landing.png\\\");background-repeat:no-repeat;background-position:right center;background-size:75%;image-rendering:pixelated;image-rendering:crisp-edges;height:700px;\", Tablet, \"{height:auto;background-position:right 80px;}\", Mobile, \"{background-position:center 104px;background-size:280px;};\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9heW9vbHV3YWFsZm9uc28vY29kZS9rcmFrZW5lZHVhcHAvcGFnZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd01zQyIsImZpbGUiOiIvVXNlcnMvYXlvb2x1d2FhbGZvbnNvL2NvZGUva3Jha2VuZWR1YXBwL3BhZ2VzL2luZGV4LnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGggZnJvbSBcInJlYWN0LWh5cGVyc2NyaXB0XCI7XG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcbmltcG9ydCB7IEluZmVyR2V0U2VydmVyU2lkZVByb3BzVHlwZSwgR2V0U2VydmVyU2lkZVByb3BzQ29udGV4dCB9IGZyb20gXCJuZXh0XCI7XG4vLyBpbXBvcnQgTGFuZGluZ1BhZ2UyIGZyb20gJ2NvbXBvbmVudHMvTGFuZGluZ1BhZ2UyJ1xuLy8gaW1wb3J0IEludHJvIGZyb20gJ3dyaXRpbmcvSW50cm8ubWR4J1xuaW1wb3J0IHsgTW9iaWxlLCBUYWJsZXQgfSBmcm9tIFwiY29tcG9uZW50cy9Ub2tlbnNcIjtcbmltcG9ydCB7XG4gIEJveCxcbiAgLy8gQm9keSxcbiAgRmxleEdyaWQsXG59IGZyb20gXCJjb21wb25lbnRzL0xheW91dFwiO1xuaW1wb3J0IHsgUHJpbWFyeSwgU2Vjb25kYXJ5IH0gZnJvbSBcImNvbXBvbmVudHMvQnV0dG9uXCI7XG4vLyBpbXBvcnQge1RpdGxlSW1nfSBmcm9tICcuLi9jb21wb25lbnRzL0ltYWdlcydcbmltcG9ydCB7IENvdXJzZXMsIHVzZUNvdXJzZXMgfSBmcm9tIFwic3JjL2RhdGFcIjtcbmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSBcInNyYy90b2tlblwiO1xuLy8gaW1wb3J0IE5ld3NsZXR0ZXJTaWdudXAgZnJvbSAnY29tcG9uZW50cy9OZXdzbGV0dGVyU2lnbnVwJ1xuaW1wb3J0IHsgY291cnNlc1F1ZXJ5IH0gZnJvbSBcInBhZ2VzL2FwaS9jb3Vyc2VzXCI7XG5pbXBvcnQgeyBnZXRQdWJsaWNFdmVudHNRdWVyeSB9IGZyb20gXCIuL2FwaS9ldmVudHNcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbmltcG9ydCB7IEV2ZW50Q2FyZCB9IGZyb20gXCJjb21wb25lbnRzL0NhcmRzL0V2ZW50Q2FyZFwiO1xuaW1wb3J0IHsgQ291cnNlQ29ob3J0Q2FyZCwgQ2x1YkNvaG9ydENhcmQgfSBmcm9tIFwiY29tcG9uZW50cy9DYXJkcy9Db2hvcnRDYXJkXCI7XG5cbmxldCBDT1BZID0ge1xuICBoeXBlcmxpbmtUYWdsaW5lOlxuICAgIFwiS3Jha2VuLkVkdSBpcyB0aGUgZnV0dXJlIG9mIHdvcmsgYW5kIHVwc2tpbGxpbmcgaW4gTmlnZXJpYS5cIixcbiAgLy8gcmVnaXN0ZXJIZWFkZXI6IFwiQ2FsbGluZyBhbGwgcHJvZmVzc2lvbmFscyEgSm9pbiB0aGUgS3Jha2VuRWR1IEFscGhhIHRvIHByb3Bvc2UgYSBjb3Vyc2UgaWRlYSwgYW5kICh2ZXJ5IHNvb24hKSBlbnJvbGwgb25lIG9mIG91ciBmaXJzdCBjb3Vyc2VzLlwiLFxuICByZWdpc3RlckJ1dHRvbjogXCJCcm93c2UgdGhlIENvdXJzZXNcIixcbiAgZW1haWxIZWFkZXI6IFwiR2V0IHVwZGF0ZXMgYWJvdXQgbmV3IGNvdXJzZXMgYW5kIG1vcmUhXCIsXG4gIC8vIGVtYWlsRGVzY3JpcHRpb246IFwiV2UnbGwgbmV2ZXIgc3BhbSBvciBzaGFyZSB5b3VyIGVtYWlsLiBZb3UgY2FuIHVuc3Vic2NyaWJlIGF0IGFueSB0aW1lLlwiLFxuICBlbWFpbEJ1dHRvbjogXCJHZXQgVXBkYXRlc1wiLFxuICBjb3Vyc2VzSGVhZGVyOiBcIkFsbCBDb3Vyc2VzXCIsXG59O1xuXG50eXBlIFByb3BzID0gSW5mZXJHZXRTZXJ2ZXJTaWRlUHJvcHNUeXBlPHR5cGVvZiBnZXRTZXJ2ZXJTaWRlUHJvcHM+O1xuY29uc3QgTGFuZGluZyA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgbGV0IHsgZGF0YTogYWxsQ291cnNlcyB9ID0gdXNlQ291cnNlcyh7IGluaXRpYWxEYXRhOiBwcm9wcyB9KTtcbiAgbGV0IFtjb3Vyc2VzLCBjbHVic10gPSAoYWxsQ291cnNlcyB8fCBwcm9wcykuY291cnNlc1xuICAgIC5maWx0ZXIoKGNvdXJzZSkgPT4ge1xuICAgICAgcmV0dXJuICEhY291cnNlLmNvdXJzZV9jb2hvcnRzLmZpbHRlcihcbiAgICAgICAgKGMpID0+XG4gICAgICAgICAgY291cnNlLmNvaG9ydF9tYXhfc2l6ZSA9PT0gMCB8fFxuICAgICAgICAgIGNvdXJzZS5jb2hvcnRfbWF4X3NpemUgIT09IGMucGVvcGxlX2luX2NvaG9ydHMubGVuZ3RoXG4gICAgICApWzBdO1xuICAgIH0pXG4gICAgLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgIGxldCB1cGNvbWluZ0NvaG9ydEEgPSBhLmNvdXJzZV9jb2hvcnRzLmZpbHRlcihcbiAgICAgICAgKGMpID0+IG5ldyBEYXRlKGMuc3RhcnRfZGF0ZSkgPiBuZXcgRGF0ZSgpXG4gICAgICApWzBdO1xuICAgICAgbGV0IHVwY29taW5nQ29ob3J0QiA9IGIuY291cnNlX2NvaG9ydHMuZmlsdGVyKFxuICAgICAgICAoYykgPT4gbmV3IERhdGUoYy5zdGFydF9kYXRlKSA+IG5ldyBEYXRlKClcbiAgICAgIClbMF07XG5cbiAgICAgIGlmICh1cGNvbWluZ0NvaG9ydEEuc3RhcnRfZGF0ZSA9PT0gdXBjb21pbmdDb2hvcnRCLnN0YXJ0X2RhdGUpXG4gICAgICAgIHJldHVybiBhLm5hbWUgPiBiLm5hbWUgPyAxIDogLTE7XG4gICAgICByZXR1cm4gbmV3IERhdGUodXBjb21pbmdDb2hvcnRBLnN0YXJ0X2RhdGUpIDxcbiAgICAgICAgbmV3IERhdGUodXBjb21pbmdDb2hvcnRCPy5zdGFydF9kYXRlKVxuICAgICAgICA/IC0xXG4gICAgICAgIDogMTtcbiAgICB9KVxuICAgIC5yZWR1Y2UoXG4gICAgICAoYWNjLCBjb3Vyc2UpID0+IHtcbiAgICAgICAgYWNjW2NvdXJzZS50eXBlID09PSBcImNvdXJzZVwiID8gMCA6IDFdLnB1c2goY291cnNlKTtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgIH0sXG4gICAgICBbW10sIFtdXSBhcyBBcnJheTxDb3Vyc2VzW1wiY291cnNlc1wiXT5cbiAgICApO1xuXG4gIHJldHVybiBoKEJveCwgeyBnYXA6IDQ4IH0sIFtcbiAgICBoKFdlbGNvbWUpLFxuICAgIC8vIGgoV2h5SHlwZXJsaW5rLCB7fSwgaChCb2R5LCB7fSwgaChJbnRybykpKSxcbiAgICAhY291cnNlcyB8fCBjb3Vyc2VzLmxlbmd0aCA9PT0gMFxuICAgICAgPyBudWxsXG4gICAgICA6IGgoQm94LCB7IGdhcDogNDggfSwgW1xuICAgICAgICAgIGgoXCJoMVwiLCB7IGlkOiBcImNvdXJzZXNcIiB9LCBcIlVwY29taW5nIENvdXJzZXNcIiksXG4gICAgICAgICAgaChcbiAgICAgICAgICAgIEZsZXhHcmlkLFxuICAgICAgICAgICAgeyBtaW46IDQwMCwgbW9iaWxlTWluOiAzMjAgfSxcbiAgICAgICAgICAgIGNvdXJzZXNcbiAgICAgICAgICAgICAgLmZsYXRNYXAoKGNvdXJzZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBjb3Vyc2UuY291cnNlX2NvaG9ydHMubWFwKChjb2hvcnQpID0+IHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBoKENvdXJzZUNvaG9ydENhcmQsIHsgLi4uY29ob3J0LCBjb3Vyc2UgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIC5zbGljZSgwLCA0KVxuICAgICAgICAgICksXG4gICAgICAgICAgaChcbiAgICAgICAgICAgIExpbmssXG4gICAgICAgICAgICB7IGhyZWY6IFwiL2NvdXJzZXNcIiB9LFxuICAgICAgICAgICAgaChcbiAgICAgICAgICAgICAgXCJhXCIsXG4gICAgICAgICAgICAgIHsgc3R5bGU6IHsganVzdGlmeVNlbGY6IFwicmlnaHRcIiB9IH0sXG4gICAgICAgICAgICAgIGgoU2Vjb25kYXJ5LCBcInNlZSBhbGwgY291cnNlc1wiKVxuICAgICAgICAgICAgKVxuICAgICAgICAgICksXG4gICAgICAgIF0pLFxuICAgICFjbHVicyB8fCBjbHVicy5sZW5ndGggPT09IDBcbiAgICAgID8gbnVsbFxuICAgICAgOiBoKEJveCwgeyBnYXA6IDQ4IH0sIFtcbiAgICAgICAgICBoKFwiaDFcIiwgXCJVcGNvbWluZyBDbHVic1wiKSxcbiAgICAgICAgICBoKFxuICAgICAgICAgICAgRmxleEdyaWQsXG4gICAgICAgICAgICB7IG1pbjogMjkwLCBtb2JpbGVNaW46IDI5MCB9LFxuICAgICAgICAgICAgY2x1YnNcbiAgICAgICAgICAgICAgLmZsYXRNYXAoKGNvdXJzZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBjb3Vyc2UuY291cnNlX2NvaG9ydHMubWFwKChjb2hvcnQpID0+IHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBoKENsdWJDb2hvcnRDYXJkLCB7IC4uLmNvaG9ydCwgY291cnNlIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAuc2xpY2UoMCwgNilcbiAgICAgICAgICApLFxuICAgICAgICAgIGgoXG4gICAgICAgICAgICBMaW5rLFxuICAgICAgICAgICAgeyBocmVmOiBcIi9jbHVic1wiIH0sXG4gICAgICAgICAgICBoKFxuICAgICAgICAgICAgICBcImFcIixcbiAgICAgICAgICAgICAgeyBzdHlsZTogeyBqdXN0aWZ5U2VsZjogXCJyaWdodFwiIH0gfSxcbiAgICAgICAgICAgICAgaChTZWNvbmRhcnksIFwic2VlIGFsbCBjbHVic1wiKVxuICAgICAgICAgICAgKVxuICAgICAgICAgICksXG4gICAgICAgIF0pLFxuICAgIHByb3BzLmV2ZW50cy5sZW5ndGggPT09IDBcbiAgICAgID8gbnVsbFxuICAgICAgOiBoKEJveCwgeyBnYXA6IDQ4IH0sIFtcbiAgICAgICAgICBoKFwiaDFcIiwgXCJVcGNvbWluZyBFdmVudHNcIiksXG4gICAgICAgICAgaChcbiAgICAgICAgICAgIEZsZXhHcmlkLFxuICAgICAgICAgICAgeyBtaW46IDQwMCwgbW9iaWxlTWluOiAzMDAgfSxcbiAgICAgICAgICAgIHByb3BzLmV2ZW50cy5tYXAoKGV2KSA9PlxuICAgICAgICAgICAgICBoKFxuICAgICAgICAgICAgICAgIExpbmssXG4gICAgICAgICAgICAgICAgeyBwYXNzSHJlZjogdHJ1ZSwgaHJlZjogYC9ldmVudHMvJHtldi5ldmVudH1gIH0sXG4gICAgICAgICAgICAgICAgaChFdmVudENhcmQsIHsgY29zdDogZXYuY29zdCwgLi4uZXYuZXZlbnRzIH0pXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIClcbiAgICAgICAgICApLFxuICAgICAgICBdKSxcbiAgICBoKFxuICAgICAgTGluayxcbiAgICAgIHsgaHJlZjogXCIvZXZlbnRzXCIgfSxcbiAgICAgIGgoXG4gICAgICAgIFwiYVwiLFxuICAgICAgICB7IHN0eWxlOiB7IGp1c3RpZnlTZWxmOiBcInJpZ2h0XCIgfSB9LFxuICAgICAgICBoKFNlY29uZGFyeSwgXCJzZWUgYWxsIGV2ZW50c1wiKVxuICAgICAgKVxuICAgICksXG4gIF0pO1xufTtcblxuY29uc3QgV2VsY29tZSA9ICgpID0+IHtcbiAgcmV0dXJuIGgoTGFuZGluZ0NvbnRhaW5lciwgW1xuICAgIGgoQm94LCB7IGdhcDogMTYgfSwgW1xuICAgICAgaChCb3gsIHsgZ2FwOiAzMiB9LCBbXG4gICAgICAgIGgoVGl0bGUsIFtcIktyYWtlbi5cIiwgaChcIndiclwiKSwgXCJFZHVcIl0pLFxuICAgICAgICBoKFRhZ2xpbmUsIENPUFkuaHlwZXJsaW5rVGFnbGluZSksXG4gICAgICBdKSxcbiAgICAgIGgoQ1RBR3JpZCwgW1xuICAgICAgICBoKFwiYVwiLCB7IGhyZWY6IFwiI2NvdXJzZXNcIiB9LCBoKFByaW1hcnksIHt9LCBDT1BZLnJlZ2lzdGVyQnV0dG9uKSksXG4gICAgICAgIC8vIGgoTmV3c2xldHRlclNpZ251cClcbiAgICAgIF0pLFxuICAgIF0pLFxuICBdKTtcbn07XG5cbi8vIGxldCBXaHlLcmFrZW5FZHUgPSBzdHlsZWQoJ2RpdicpYFxuLy8gYmFja2dyb3VuZC1jb2xvcjogI0YwRjdGQTtcbi8vIHdpZHRoOiAxMDB2dztcbi8vIHBvc2l0aW9uOiByZWxhdGl2ZTtcbi8vIGxlZnQ6IDUwJTtcbi8vIHJpZ2h0OiA1MCU7XG4vLyBtYXJnaW4tbGVmdDogLTUwdnc7XG4vLyBtYXJnaW4tcmlnaHQ6IC01MHZ3O1xuLy8gdGV4dC1hbGlnbjogY2VudGVyO1xuLy8gYFxuXG5leHBvcnQgY29uc3QgZ2V0U2VydmVyU2lkZVByb3BzID0gYXN5bmMgKHtcbiAgcmVxLFxuICByZXMsXG59OiBHZXRTZXJ2ZXJTaWRlUHJvcHNDb250ZXh0KSA9PiB7XG4gIGxldCB0b2tlbiA9IGdldFRva2VuKHJlcSk7XG4gIGlmICghdG9rZW4pIHtcbiAgICBsZXQgY291cnNlcyA9IChhd2FpdCBjb3Vyc2VzUXVlcnkoKSkuZmlsdGVyKChjb3Vyc2UpID0+IHtcbiAgICAgIHJldHVybiAhIWNvdXJzZS5jb3Vyc2VfY29ob3J0cy5maWx0ZXIoXG4gICAgICAgIChjKSA9PlxuICAgICAgICAgIGNvdXJzZS5jb2hvcnRfbWF4X3NpemUgPT09IDAgfHxcbiAgICAgICAgICBjb3Vyc2UuY29ob3J0X21heF9zaXplICE9PSBjLnBlb3BsZV9pbl9jb2hvcnRzLmxlbmd0aFxuICAgICAgKVswXTtcbiAgICB9KTtcbiAgICBsZXQgZXZlbnRzID0gKGF3YWl0IGdldFB1YmxpY0V2ZW50c1F1ZXJ5KCkpXG4gICAgICAuZmlsdGVyKChldmVudCkgPT4ge1xuICAgICAgICByZXR1cm4gbmV3IERhdGUoZXZlbnQuZXZlbnRzLnN0YXJ0X2RhdGUpID4gbmV3IERhdGUoKTtcbiAgICAgIH0pXG4gICAgICAuc2xpY2UoMCwgMyk7XG4gICAgcmV0dXJuIHsgcHJvcHM6IHsgY291cnNlcywgZXZlbnRzIH0gfSBhcyBjb25zdDtcbiAgfVxuXG4gIHJlcy53cml0ZUhlYWQoMzAzLCB7IExvY2F0aW9uOiBcIi9kYXNoYm9hcmRcIiB9KTtcbiAgcmVzLmVuZCgpO1xuICByZXR1cm4geyBwcm9wczogeyBjb3Vyc2VzOiBbXSwgZXZlbnRzOiBbXSB9IH07XG59O1xuXG5jb25zdCBMYW5kaW5nQ29udGFpbmVyID0gc3R5bGVkKFwiZGl2XCIpYFxuICAvKiBzZXR0aW5nIHVwIHRoZSBiYWNrZ3JvdW5kIGltYWdlICovXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWcvbGFuZGluZy5wbmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiA3NSU7XG4gIGltYWdlLXJlbmRlcmluZzogcGl4ZWxhdGVkO1xuICBpbWFnZS1yZW5kZXJpbmc6IGNyaXNwLWVkZ2VzO1xuICBoZWlnaHQ6IDcwMHB4O1xuXG4gICR7VGFibGV0fSB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IDgwcHg7XG4gIH1cblxuICAke01vYmlsZX0ge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciAxMDRweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDI4MHB4O1xuICB9IDtcbmA7XG5cbi8qIFRleHQgU3R5bGluZyBmb3IgTGFuZGluZyBDb250ZW50ICovXG5jb25zdCBUaXRsZSA9IHN0eWxlZChcImgxXCIpYFxuICBmb250LWZhbWlseTogXCJSb2JvdG8gTW9ub1wiLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogNHJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IGJsdWU7XG4gIHotaW5kZXg6IDI7XG5cbiAgJHtUYWJsZXR9IHtcbiAgICBmb250LXNpemU6IDIuNjI1cmVtO1xuICB9XG5gO1xuXG5jb25zdCBUYWdsaW5lID0gc3R5bGVkKFwiaDNcIilgXG4gIHotaW5kZXg6IDI7XG4gIHdpZHRoOiAzMyU7XG4gIGNvbG9yOiAxOWVmN2Q7XG5cbiAgJHtNb2JpbGV9IHtcbiAgICBwYWRkaW5nLXRvcDogMTc2cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbmA7XG5cbmNvbnN0IENUQUdyaWQgPSBzdHlsZWQoXCJkaXZcIilgXG4gIHdpZHRoOiAyNSU7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtZ2FwOiAzMnB4O1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcblxuICAke1RhYmxldH0ge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5gO1xuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\"));\n/* Text Styling for Landing Content */\n\n\nconst Title = /*#__PURE__*/_styled(\"h1\", {\n  target: \"ev6di3f1\",\n  label: \"Title\"\n})(\"font-family:\\\"Roboto Mono\\\",monospace;font-size:4rem;text-decoration:none;font-weight:bold;color:blue;z-index:2;\", Tablet, \"{font-size:2.625rem;}\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nconst Tagline = /*#__PURE__*/_styled(\"h3\", {\n  target: \"ev6di3f2\",\n  label: \"Tagline\"\n})(\"z-index:2;width:33%;color:19ef7d;\", Mobile, \"{padding-top:176px;width:100%;}\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nconst CTAGrid = /*#__PURE__*/_styled(\"div\", {\n  target: \"ev6di3f3\",\n  label: \"CTAGrid\"\n})(\"width:25%;display:grid;grid-gap:32px;grid-template-rows:auto auto;\", Tablet, \"{width:100%;}\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nexport default Landing;","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/index.ts"],"names":["h","Mobile","Tablet","Box","FlexGrid","Primary","Secondary","useCourses","getToken","coursesQuery","getPublicEventsQuery","Link","EventCard","CourseCohortCard","ClubCohortCard","COPY","hyperlinkTagline","registerButton","emailHeader","emailButton","coursesHeader","Landing","props","data","allCourses","initialData","courses","clubs","filter","course","course_cohorts","c","cohort_max_size","people_in_cohorts","length","sort","a","b","upcomingCohortA","Date","start_date","upcomingCohortB","name","reduce","acc","type","push","gap","Welcome","id","min","mobileMin","flatMap","map","cohort","slice","href","style","justifySelf","events","ev","passHref","event","cost","LandingContainer","Title","Tagline","CTAGrid","getServerSideProps","req","res","token","writeHead","Location","end"],"mappings":"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","sourcesContent":["import h from \"react-hyperscript\";\nimport styled from \"@emotion/styled\";\nimport { InferGetServerSidePropsType, GetServerSidePropsContext } from \"next\";\n// import LandingPage2 from 'components/LandingPage2'\n// import Intro from 'writing/Intro.mdx'\nimport { Mobile, Tablet } from \"components/Tokens\";\nimport {\n  Box,\n  // Body,\n  FlexGrid,\n} from \"components/Layout\";\nimport { Primary, Secondary } from \"components/Button\";\n// import {TitleImg} from '../components/Images'\nimport { Courses, useCourses } from \"src/data\";\nimport { getToken } from \"src/token\";\n// import NewsletterSignup from 'components/NewsletterSignup'\nimport { coursesQuery } from \"pages/api/courses\";\nimport { getPublicEventsQuery } from \"./api/events\";\nimport Link from \"next/link\";\nimport { EventCard } from \"components/Cards/EventCard\";\nimport { CourseCohortCard, ClubCohortCard } from \"components/Cards/CohortCard\";\n\nlet COPY = {\n  hyperlinkTagline:\n    \"Kraken.Edu is the future of work and upskilling in Nigeria.\",\n  // registerHeader: \"Calling all professionals! Join the KrakenEdu Alpha to propose a course idea, and (very soon!) enroll one of our first courses.\",\n  registerButton: \"Browse the Courses\",\n  emailHeader: \"Get updates about new courses and more!\",\n  // emailDescription: \"We'll never spam or share your email. You can unsubscribe at any time.\",\n  emailButton: \"Get Updates\",\n  coursesHeader: \"All Courses\",\n};\n\ntype Props = InferGetServerSidePropsType<typeof getServerSideProps>;\nconst Landing = (props: Props) => {\n  let { data: allCourses } = useCourses({ initialData: props });\n  let [courses, clubs] = (allCourses || props).courses\n    .filter((course) => {\n      return !!course.course_cohorts.filter(\n        (c) =>\n          course.cohort_max_size === 0 ||\n          course.cohort_max_size !== c.people_in_cohorts.length\n      )[0];\n    })\n    .sort((a, b) => {\n      let upcomingCohortA = a.course_cohorts.filter(\n        (c) => new Date(c.start_date) > new Date()\n      )[0];\n      let upcomingCohortB = b.course_cohorts.filter(\n        (c) => new Date(c.start_date) > new Date()\n      )[0];\n\n      if (upcomingCohortA.start_date === upcomingCohortB.start_date)\n        return a.name > b.name ? 1 : -1;\n      return new Date(upcomingCohortA.start_date) <\n        new Date(upcomingCohortB?.start_date)\n        ? -1\n        : 1;\n    })\n    .reduce(\n      (acc, course) => {\n        acc[course.type === \"course\" ? 0 : 1].push(course);\n        return acc;\n      },\n      [[], []] as Array<Courses[\"courses\"]>\n    );\n\n  return h(Box, { gap: 48 }, [\n    h(Welcome),\n    // h(WhyHyperlink, {}, h(Body, {}, h(Intro))),\n    !courses || courses.length === 0\n      ? null\n      : h(Box, { gap: 48 }, [\n          h(\"h1\", { id: \"courses\" }, \"Upcoming Courses\"),\n          h(\n            FlexGrid,\n            { min: 400, mobileMin: 320 },\n            courses\n              .flatMap((course) => {\n                return course.course_cohorts.map((cohort) => {\n                  return h(CourseCohortCard, { ...cohort, course });\n                });\n              })\n              .slice(0, 4)\n          ),\n          h(\n            Link,\n            { href: \"/courses\" },\n            h(\n              \"a\",\n              { style: { justifySelf: \"right\" } },\n              h(Secondary, \"see all courses\")\n            )\n          ),\n        ]),\n    !clubs || clubs.length === 0\n      ? null\n      : h(Box, { gap: 48 }, [\n          h(\"h1\", \"Upcoming Clubs\"),\n          h(\n            FlexGrid,\n            { min: 290, mobileMin: 290 },\n            clubs\n              .flatMap((course) => {\n                return course.course_cohorts.map((cohort) => {\n                  return h(ClubCohortCard, { ...cohort, course });\n                });\n              })\n              .slice(0, 6)\n          ),\n          h(\n            Link,\n            { href: \"/clubs\" },\n            h(\n              \"a\",\n              { style: { justifySelf: \"right\" } },\n              h(Secondary, \"see all clubs\")\n            )\n          ),\n        ]),\n    props.events.length === 0\n      ? null\n      : h(Box, { gap: 48 }, [\n          h(\"h1\", \"Upcoming Events\"),\n          h(\n            FlexGrid,\n            { min: 400, mobileMin: 300 },\n            props.events.map((ev) =>\n              h(\n                Link,\n                { passHref: true, href: `/events/${ev.event}` },\n                h(EventCard, { cost: ev.cost, ...ev.events })\n              )\n            )\n          ),\n        ]),\n    h(\n      Link,\n      { href: \"/events\" },\n      h(\n        \"a\",\n        { style: { justifySelf: \"right\" } },\n        h(Secondary, \"see all events\")\n      )\n    ),\n  ]);\n};\n\nconst Welcome = () => {\n  return h(LandingContainer, [\n    h(Box, { gap: 16 }, [\n      h(Box, { gap: 32 }, [\n        h(Title, [\"Kraken.\", h(\"wbr\"), \"Edu\"]),\n        h(Tagline, COPY.hyperlinkTagline),\n      ]),\n      h(CTAGrid, [\n        h(\"a\", { href: \"#courses\" }, h(Primary, {}, COPY.registerButton)),\n        // h(NewsletterSignup)\n      ]),\n    ]),\n  ]);\n};\n\n// let WhyKrakenEdu = styled('div')`\n// background-color: #F0F7FA;\n// width: 100vw;\n// position: relative;\n// left: 50%;\n// right: 50%;\n// margin-left: -50vw;\n// margin-right: -50vw;\n// text-align: center;\n// `\n\nexport const getServerSideProps = async ({\n  req,\n  res,\n}: GetServerSidePropsContext) => {\n  let token = getToken(req);\n  if (!token) {\n    let courses = (await coursesQuery()).filter((course) => {\n      return !!course.course_cohorts.filter(\n        (c) =>\n          course.cohort_max_size === 0 ||\n          course.cohort_max_size !== c.people_in_cohorts.length\n      )[0];\n    });\n    let events = (await getPublicEventsQuery())\n      .filter((event) => {\n        return new Date(event.events.start_date) > new Date();\n      })\n      .slice(0, 3);\n    return { props: { courses, events } } as const;\n  }\n\n  res.writeHead(303, { Location: \"/dashboard\" });\n  res.end();\n  return { props: { courses: [], events: [] } };\n};\n\nconst LandingContainer = styled(\"div\")`\n  /* setting up the background image */\n  background-image: url(\"/img/landing.png\");\n  background-repeat: no-repeat;\n  background-position: right center;\n  background-size: 75%;\n  image-rendering: pixelated;\n  image-rendering: crisp-edges;\n  height: 700px;\n\n  ${Tablet} {\n    height: auto;\n    background-position: right 80px;\n  }\n\n  ${Mobile} {\n    background-position: center 104px;\n    background-size: 280px;\n  } ;\n`;\n\n/* Text Styling for Landing Content */\nconst Title = styled(\"h1\")`\n  font-family: \"Roboto Mono\", monospace;\n  font-size: 4rem;\n  text-decoration: none;\n  font-weight: bold;\n  color: blue;\n  z-index: 2;\n\n  ${Tablet} {\n    font-size: 2.625rem;\n  }\n`;\n\nconst Tagline = styled(\"h3\")`\n  z-index: 2;\n  width: 33%;\n  color: 19ef7d;\n\n  ${Mobile} {\n    padding-top: 176px;\n    width: 100%;\n  }\n`;\n\nconst CTAGrid = styled(\"div\")`\n  width: 25%;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-rows: auto auto;\n\n  ${Tablet} {\n    width: 100%;\n  }\n`;\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}