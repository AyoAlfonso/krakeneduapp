{"ast":null,"code":"import { useRef, useEffect, useState } from 'react';\nimport { formHelper } from './utils';\nexport const useDebouncedEffect = (callback, delay, deps) => {\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    const handler = setTimeout(() => {\n      callback();\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [delay, ...deps]);\n};\nexport const useMediaQuery = query => {\n  let {\n    0: match,\n    1: setMatch\n  } = useState(false);\n  useEffect(() => {\n    let mediaQuery = window.matchMedia(query);\n    setMatch(mediaQuery.matches);\n\n    let listener = () => {\n      setMatch(mediaQuery.matches);\n    };\n\n    mediaQuery.addListener(listener);\n    return () => mediaQuery.removeListener(listener);\n  }, [query]);\n  return match;\n};\nexport function useFormData(initialState, update = []) {\n  let {\n    0: state,\n    1: setState\n  } = useState(initialState);\n  useEffect(() => {\n    setState(initialState);\n  }, update);\n  let form = formHelper(state, setState);\n  return {\n    state,\n    setState,\n    changed: Object.keys(initialState).reduce((acc, key) => acc || initialState[key] !== state[key], false),\n    form,\n    reset: () => setState(initialState)\n  };\n}","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/src/hooks.ts"],"names":["useRef","useEffect","useState","formHelper","useDebouncedEffect","callback","delay","deps","firstUpdate","current","handler","setTimeout","clearTimeout","useMediaQuery","query","match","setMatch","mediaQuery","window","matchMedia","matches","listener","addListener","removeListener","useFormData","initialState","update","state","setState","form","changed","Object","keys","reduce","acc","key","reset"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAoBC,KAApB,EAAkCC,IAAlC,KAAkD;AAClF,QAAMC,WAAW,GAAGR,MAAM,CAAC,IAAD,CAA1B;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGO,WAAW,CAACC,OAAf,EAAwB;AACtBD,MAAAA,WAAW,CAACC,OAAZ,GAAsB,KAAtB;AACA;AACD;;AACD,UAAMC,OAAO,GAAGC,UAAU,CAAC,MAAI;AAC7BN,MAAAA,QAAQ;AACT,KAFyB,EAEvBC,KAFuB,CAA1B;AAIA,WAAO,MAAI;AACTM,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACD,KAFD;AAGD,GAZQ,EAYN,CAACJ,KAAD,EAAQ,GAAGC,IAAX,CAZM,CAAT;AAaD,CAfM;AAiBP,OAAO,MAAMM,aAAa,GAAIC,KAAD,IAAmB;AAC9C,MAAI;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC,KAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIgB,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkBL,KAAlB,CAAjB;AACAE,IAAAA,QAAQ,CAACC,UAAU,CAACG,OAAZ,CAAR;;AACA,QAAIC,QAAQ,GAAG,MAAI;AACjBL,MAAAA,QAAQ,CAACC,UAAU,CAACG,OAAZ,CAAR;AACD,KAFD;;AAGAH,IAAAA,UAAU,CAACK,WAAX,CAAuBD,QAAvB;AACA,WAAO,MAAKJ,UAAU,CAACM,cAAX,CAA0BF,QAA1B,CAAZ;AACD,GARQ,EAQP,CAACP,KAAD,CARO,CAAT;AASA,SAAOC,KAAP;AACD,CAZM;AAcP,OAAO,SAASS,WAAT,CAA2FC,YAA3F,EAA2GC,MAAY,GAAC,EAAxH,EAA4H;AACjI,MAAI;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoB1B,QAAQ,CAACuB,YAAD,CAAhC;AACAxB,EAAAA,SAAS,CAAC,MAAI;AACZ2B,IAAAA,QAAQ,CAACH,YAAD,CAAR;AACD,GAFQ,EAENC,MAFM,CAAT;AAGA,MAAIG,IAAI,GAAG1B,UAAU,CAACwB,KAAD,EAAQC,QAAR,CAArB;AACA,SAAO;AACLD,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLE,IAAAA,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAYP,YAAZ,EAA0BQ,MAA1B,CAAiC,CAACC,GAAD,EAAMC,GAAN,KAAYD,GAAG,IAAIT,YAAY,CAACU,GAAD,CAAZ,KAAsBR,KAAK,CAACQ,GAAD,CAA/E,EAAsF,KAAtF,CAHJ;AAILN,IAAAA,IAJK;AAKLO,IAAAA,KAAK,EAAC,MAAIR,QAAQ,CAACH,YAAD;AALb,GAAP;AAOD","sourcesContent":["import {useRef, useEffect, useState} from 'react'\nimport { formHelper } from './utils';\nexport const useDebouncedEffect = (callback:Function, delay:number, deps:any[])  => {\n  const firstUpdate = useRef(true);\n  useEffect(()=>{\n    if(firstUpdate.current) {\n      firstUpdate.current = false\n      return\n    }\n    const handler = setTimeout(()=>{\n      callback()\n    }, delay)\n\n    return ()=>{\n      clearTimeout(handler)\n    }\n  }, [delay, ...deps])\n}\n\nexport const useMediaQuery = (query: string) => {\n  let [match, setMatch] = useState(false)\n  useEffect(()=>{\n    let mediaQuery = window.matchMedia(query)\n    setMatch(mediaQuery.matches)\n    let listener = ()=>{\n      setMatch(mediaQuery.matches)\n    }\n    mediaQuery.addListener(listener)\n    return ()=> mediaQuery.removeListener(listener)\n  },[query])\n  return match\n}\n\nexport function useFormData<T extends {[key:string]: string | null | number | object | boolean}> (initialState:T, update:any[]=[]) {\n  let [state, setState] = useState(initialState)\n  useEffect(()=>{\n    setState(initialState)\n  }, update)\n  let form = formHelper(state, setState)\n  return {\n    state,\n    setState,\n    changed: Object.keys(initialState).reduce((acc, key)=>acc || initialState[key] !== state[key], false),\n    form,\n    reset:()=>setState(initialState)\n  } as const\n}\n"]},"metadata":{},"sourceType":"module"}