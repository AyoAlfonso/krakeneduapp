{"ast":null,"code":"import useSWR from 'swr';\nimport { callApi } from './apiHelpers';\nexport const useUserData = () => {\n  return useSWR('/api/get/whoami', async api => {\n    let res = await callApi(api);\n    return res.result;\n  });\n};\nexport const useProfileData = (username, initialData) => {\n  return useSWR(username ? '/api/people/' + username : null, async api => {\n    let res = await callApi(api);\n    if (res.status === 200) return res.result;else return false;\n  }, {\n    initialData\n  });\n};\nexport const useCourseData = (id, initialData) => {\n  return useSWR(id ? '/api/courses/' + id : null, async api => {\n    let res = await callApi(api);\n    if (res.status === 200) return res.result;\n  }, {\n    initialData\n  });\n};\nexport const useEventData = (id, initialData) => useSWR(`/api/events/${id}`, async api => {\n  let res = await callApi(api);\n  if (res.status === 200) return res.result;else return false;\n}, {\n  initialData\n});\nexport const useCohortData = (cohort, initialData) => {\n  return useSWR(cohort ? `/api/cohorts/${cohort}` : null, async api => {\n    let res = await callApi(api);\n    if (res.status === 200) return res.result;else return false;\n  }, {\n    initialData,\n    revalidateOnMount: true\n  });\n};\nexport const useUserCohorts = () => {\n  return useSWR('/api/get/user_cohorts', async api => {\n    let res = await callApi(api);\n    if (res.status === 200) return res.result;\n  });\n};\nexport const useUserCourses = () => {\n  return useSWR('/api/get/user_courses', async api => {\n    let res = await callApi(api);\n    if (res.status === 200) return res.result;\n  });\n};\nexport const useCourses = options => {\n  return useSWR(`/api/courses${options !== null && options !== void 0 && options.type ? `?type=${options.type}` : ''}`, async api => {\n    let res = await callApi(api);\n    return res.result;\n  }, {\n    initialData: options === null || options === void 0 ? void 0 : options.initialData\n  });\n};\nexport const useDiscounts = id => {\n  return useSWR(`/api/courses/${id}/discounts`, async api => {\n    let res = await callApi(api);\n    if (res.status === 200) return res.result;\n  });\n};","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/src/data.ts"],"names":["useSWR","callApi","useUserData","api","res","result","useProfileData","username","initialData","status","useCourseData","id","useEventData","useCohortData","cohort","revalidateOnMount","useUserCohorts","useUserCourses","useCourses","options","type","useDiscounts"],"mappings":"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","sourcesContent":["import useSWR from 'swr'\nimport {callApi, Success} from './apiHelpers'\nimport { UserCohortsResult, WhoAmIResult, UserCoursesResult} from '../pages/api/get/[...item]'\nimport { CohortResult } from '../pages/api/cohorts/[cohortId]'\nimport { CourseDataResult } from '../pages/api/courses/[id]'\nimport { ProfileResult } from '../pages/api/people/[id]'\nimport { CourseResult } from '../pages/api/courses'\nimport { GetDiscountsResult } from 'pages/api/courses/[id]/discounts'\nimport { GETEventResult } from 'pages/api/events/[id]'\n\nexport type User = Success<WhoAmIResult>\nexport const useUserData = ()=>{\n  return useSWR('/api/get/whoami', async (api) => {\n    let res = await callApi<null, WhoAmIResult>(api)\n    return res.result\n  })\n}\n\nexport const useProfileData = (username?:string, initialData?:Success<ProfileResult>)=>{\n  return useSWR(username ? '/api/people/'+username : null, async api =>{\n    let res = await callApi<null, ProfileResult>(api)\n    if(res.status===200) return res.result\n    else return false\n  }, {initialData})\n}\n\nexport type Course = Success<CourseDataResult>\nexport const useCourseData = (id?: number | string, initialData?:Success<CourseDataResult>) => {\n  return useSWR(id ? '/api/courses/' + id : null, async api => {\n    let res = await callApi<null, CourseDataResult>(api)\n    if(res.status === 200) return res.result\n  }, {initialData})\n}\n\nexport type Event = Success<GETEventResult>\nexport const useEventData = (id: number, initialData?:Event) => useSWR(`/api/events/${id}`, async api => {\n  let res = await callApi<null, GETEventResult>(api)\n  if(res.status === 200) return res.result\n  else return false\n}, {initialData})\n\nexport type Cohort = Success<CohortResult>\nexport const useCohortData = (cohort?: number, initialData?:Success<CohortResult>) => {\n  return useSWR(cohort ? `/api/cohorts/${cohort}`:null, async api => {\n    let res = await callApi<null, CohortResult>(api)\n    if(res.status === 200) return res.result\n    else return false\n  }, {initialData, revalidateOnMount: true})\n}\n\nexport const useUserCohorts = () => {\n  return useSWR('/api/get/user_cohorts', async(api) => {\n    let res = await callApi<null, UserCohortsResult>(api)\n    if(res.status===200) return res.result\n  })\n}\n\nexport const useUserCourses = ()=>{\n  return useSWR('/api/get/user_courses', async(api)=>{\n    let res=await(callApi<null, UserCoursesResult>(api))\n    if(res.status===200) return res.result\n  })\n}\n\nexport type Courses = Success<CourseResult>\nexport const useCourses = (options?:Partial<{type: \"course\" | \"club\", initialData?:Success<CourseResult>}>) => {\n  return useSWR(`/api/courses${options?.type ? `?type=${options.type}`: ''}`, async (api) => {\n    let res = await callApi<null, CourseResult>(api)\n    return res.result\n  }, {initialData:options?.initialData})\n}\n\nexport const useDiscounts = (id: number) => {\n  return useSWR(`/api/courses/${id}/discounts`, async (api)=>{\n    let res = await callApi<null, GetDiscountsResult>(api)\n    if(res.status===200) return res.result\n  })\n}\n"]},"metadata":{},"sourceType":"module"}