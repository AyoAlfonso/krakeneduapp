{"ast":null,"code":"import _defineProperty from \"/Users/ayooluwaalfonso/code/krakeneduapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/ayooluwaalfonso/code/krakeneduapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport h from 'react-hyperscript';\nimport { Box, FormBox, LabelBox, Seperator } from 'components/Layout';\nimport { Textarea, Input } from 'components/Form';\nimport { useApi } from 'src/apiHelpers';\nimport { Primary } from 'components/Button';\nimport { AccentImg } from 'components/Images';\nimport { useFormData } from 'src/hooks';\nexport default (function () {\n  var _useFormData = useFormData({\n    Name: \"\",\n    Email: \"\",\n    Topic: \"\",\n    Structure: \"\",\n    Participants: \"\",\n    Cost: \"\",\n    Artifacts: \"\",\n    Vision: \"\",\n    References: \"\",\n    Questions: \"\"\n  }),\n      state = _useFormData.state,\n      reset = _useFormData.reset,\n      form = _useFormData.form;\n\n  var _useApi = useApi([state]),\n      _useApi2 = _slicedToArray(_useApi, 2),\n      status = _useApi2[0],\n      callApi = _useApi2[1];\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    callApi('/api/submitForm', {\n      base: \"appR4eeCFwbJVZ2ij\",\n      data: state\n    });\n  };\n\n  return status === \"success\" ? h(Box, {\n    style: {\n      justifyItems: \"center\"\n    },\n    gap: 32\n  }, [h(Box, {\n    style: {\n      textAlign: \"center\",\n      justifyItems: \"center\"\n    }\n  }, [h(AccentImg, {\n    src: \"/img/plane.gif\",\n    alt: \"an animated gif of a paper airplane taking off\"\n  }), h(\"h1\", \"Thank You!\"), h(\"p.big\", \"We'll get back to you soon! \")]), h(Primary, {\n    onClick: function onClick() {\n      return reset();\n    }\n  }, \"Submit another idea\")]) : h(Box, {\n    ma: true,\n    width: 640,\n    gap: 32\n  }, [h(Box, [h(\"h1\", \"Propose a Course\"), h(\"p.big\", \"If you're interested in running a Course on Krakenedu, we'd love to hear what you have in mind!\"), h(\"p.big\", [\"Courses on KrakenEdu are developed in the \", h(\"a\", {\n    href: \"https://app.krakenedu.com/courses/the-meta-course/1\"\n  }, \"Meta Course\"), \".\"]), h(\"p.big\", \"We'll review your proposal and if it seems like a good fit, invite you to join an upcoming Meta Course cohort.\")]), h(Seperator), h(FormBox, {\n    gap: 64,\n    onSubmit: onSubmit\n  }, [h(Box, {\n    gap: 32\n  }, [h(LabelBox, {\n    gap: 8\n  }, [h(\"h3\", \"Your Name\"), h(Input, _objectSpread({\n    type: \"text\"\n  }, form.Name))]), h(LabelBox, {\n    gap: 8\n  }, [h(\"h3\", \"Your Email\"), h(Input, _objectSpread({\n    type: \"email\"\n  }, form.Email))]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"What's the course about?\"), h(\"small\", \"In a few words, e.g. \\\"Language construction workshop\\\" or \\\"How to build an online community\\\"\")]), h(Textarea, form.Topic)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"What do you imagine the structure looks like?\"), h(\"small\", \"In a few short paragraphs: what are the main learning goals? How long is it and how frequently does it meet? What's the workload? Initial thoughts on what the list of sessions could look like?\")]), h(Textarea, form.Structure)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"Who do you imagine is the ideal participant?\"), h(\"small\", \"Who should take this course? Who should *not* take it?\")]), h(Textarea, form.Participants)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"How much do you imagine it will cost?\"), h(\"small\", \"In USD. rough estimate fine for now; we can discuss further! Our pricing model: you set a price, KrakenEdu takes a 20% platform fee, you keep 80%.\")]), h(Input, form.Cost)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"What might the artifacts or output of the course look like?\"), h(\"small\", \"What are participants making or doing in the course? Any assignments or final projects in mind?\")]), h(Textarea, form.Artifacts)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"Can you tell us a bit about yourself and your overall vision for the course?\"), h(\"small\", \"How does this fit with your work? Why are you the right person to teach it? How much time do you imagine spending on it? Any long-term ideas for how it might develop?\")]), h(Textarea, form.Vision)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"Anything else we should check out? (Optional)\"), h(\"small\", \"Feel free to share your website, Twitter, or other links that might help illustrate what you have in mind!\")]), h(Textarea, form.References)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"Any questions for us? (Optional)\"), h(\"small\", \"Let us know if you have further things you'd like to discuss about this idea, or courses on KrakenEdu in general!\")]), h(Textarea, form.Questions)])]), h(Primary, {\n    type: \"submit\",\n    status: status,\n    style: {\n      justifySelf: \"right\"\n    }\n  }, \"Submit\")])]);\n});","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/forms/propose-course.ts"],"names":["h","Box","FormBox","LabelBox","Seperator","Textarea","Input","useApi","Primary","AccentImg","useFormData","Name","Email","Topic","Structure","Participants","Cost","Artifacts","Vision","References","Questions","state","reset","form","status","callApi","onSubmit","e","preventDefault","base","data","style","justifyItems","gap","textAlign","src","alt","onClick","ma","width","href","type","justifySelf"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport { Box, FormBox, LabelBox, Seperator } from 'components/Layout'\nimport { Textarea, Input } from 'components/Form'\nimport { useApi } from 'src/apiHelpers'\nimport {SubmitFormMsg, SubmitFormResponse} from 'pages/api/submitForm'\nimport { Primary } from 'components/Button'\nimport { AccentImg } from 'components/Images'\nimport { useFormData } from 'src/hooks'\n\nexport default ()=>{\n  let {state, reset, form} = useFormData({\n    Name: \"\",\n    Email: \"\",\n    Topic: \"\",\n    Structure: \"\",\n    Participants: \"\",\n    Cost: \"\",\n    Artifacts: \"\",\n    Vision: \"\",\n    References: \"\",\n    Questions: \"\"\n  })\n  let[status, callApi] = useApi<SubmitFormMsg, SubmitFormResponse>([state])\n  const onSubmit = (e:React.FormEvent) =>{\n    e.preventDefault()\n    callApi('/api/submitForm', {\n      base: \"appR4eeCFwbJVZ2ij\",\n      data: state\n    })\n  }\n  return status === \"success\"\n    ? h(Box, { style: { justifyItems: \"center\" }, gap: 32 }, [\n        h(Box, { style: { textAlign: \"center\", justifyItems: \"center\" } }, [\n          h(AccentImg, {\n            src: \"/img/plane.gif\",\n            alt: \"an animated gif of a paper airplane taking off\",\n          }),\n          h(\"h1\", \"Thank You!\"),\n          h(\"p.big\", `We'll get back to you soon! `),\n        ]),\n        h(Primary, { onClick: () => reset() }, \"Submit another idea\"),\n      ])\n    : h(Box, { ma: true, width: 640, gap: 32 }, [\n        h(Box, [\n          h(\"h1\", \"Propose a Course\"),\n          h(\n            \"p.big\",\n            `If you're interested in running a Course on Krakenedu, we'd love to hear what you have in mind!`\n          ),\n          h(\"p.big\", [\n            `Courses on KrakenEdu are developed in the `,\n            h(\n              \"a\",\n              { href: \"https://app.krakenedu.com/courses/the-meta-course/1\" },\n              `Meta Course`\n            ),\n            `.`,\n          ]),\n          h(\n            \"p.big\",\n            `We'll review your proposal and if it seems like a good fit, invite you to join an upcoming Meta Course cohort.`\n          ),\n        ]),\n        h(Seperator),\n\n        h(FormBox, { gap: 64, onSubmit }, [\n          h(Box, { gap: 32 }, [\n            h(LabelBox, { gap: 8 }, [\n              h(\"h3\", \"Your Name\"),\n              h(Input, {\n                type: \"text\",\n                ...form.Name,\n              }),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"h3\", \"Your Email\"),\n              h(Input, {\n                type: \"email\",\n                ...form.Email,\n              }),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"What's the course about?\"),\n                h(\n                  \"small\",\n                  `In a few words, e.g. \"Language construction workshop\" or \"How to build an online community\"`\n                ),\n              ]),\n              h(Textarea, form.Topic),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"What do you imagine the structure looks like?\"),\n                h(\n                  \"small\",\n                  `In a few short paragraphs: what are the main learning goals? How long is it and how frequently does it meet? What's the workload? Initial thoughts on what the list of sessions could look like?`\n                ),\n              ]),\n              h(Textarea, form.Structure),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"Who do you imagine is the ideal participant?\"),\n                h(\n                  \"small\",\n                  `Who should take this course? Who should *not* take it?`\n                ),\n              ]),\n              h(Textarea, form.Participants),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"How much do you imagine it will cost?\"),\n                h(\n                  \"small\",\n                  `In USD. rough estimate fine for now; we can discuss further! Our pricing model: you set a price, KrakenEdu takes a 20% platform fee, you keep 80%.`\n                ),\n              ]),\n              h(Input, form.Cost),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\n                  \"h3\",\n                  \"What might the artifacts or output of the course look like?\"\n                ),\n                h(\n                  \"small\",\n                  `What are participants making or doing in the course? Any assignments or final projects in mind?`\n                ),\n              ]),\n              h(Textarea, form.Artifacts),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\n                  \"h3\",\n                  \"Can you tell us a bit about yourself and your overall vision for the course?\"\n                ),\n                h(\n                  \"small\",\n                  `How does this fit with your work? Why are you the right person to teach it? How much time do you imagine spending on it? Any long-term ideas for how it might develop?`\n                ),\n              ]),\n              h(Textarea, form.Vision),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"Anything else we should check out? (Optional)\"),\n                h(\n                  \"small\",\n                  \"Feel free to share your website, Twitter, or other links that might help illustrate what you have in mind!\"\n                ),\n              ]),\n              h(Textarea, form.References),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"Any questions for us? (Optional)\"),\n                h(\n                  \"small\",\n                  \"Let us know if you have further things you'd like to discuss about this idea, or courses on KrakenEdu in general!\"\n                ),\n              ]),\n              h(Textarea, form.Questions),\n            ]),\n          ]),\n          h(\n            Primary,\n            { type: \"submit\", status, style: { justifySelf: \"right\" } },\n            \"Submit\"\n          ),\n        ]),\n      ]);\n}\n"]},"metadata":{},"sourceType":"module"}