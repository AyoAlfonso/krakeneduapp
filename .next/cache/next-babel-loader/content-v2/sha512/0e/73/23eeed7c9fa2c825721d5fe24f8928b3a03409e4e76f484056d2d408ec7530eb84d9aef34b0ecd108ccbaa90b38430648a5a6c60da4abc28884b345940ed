{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ayooluwaalfonso/code/krakeneduapp/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/ayooluwaalfonso/code/krakeneduapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/ayooluwaalfonso/code/krakeneduapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ayooluwaalfonso/code/krakeneduapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport h from 'react-hyperscript';\nimport ErrorPage from 'pages/404';\nimport { Box, FormBox, LabelBox } from 'components/Layout';\nimport { PageLoader } from 'components/Loader';\nimport { useCohortData, useUserData } from 'src/data';\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { BackButton, Primary, Destructive } from 'components/Button';\nimport { Tabs } from 'components/Tabs';\nimport { Input, Textarea } from 'components/Form';\nimport { useFormData } from 'src/hooks';\nimport { useApi } from 'src/apiHelpers';\nimport { cohortName } from 'src/utils';\nexport var __N_SSG = true;\nexport default function WrappedSettingsPage(props) {\n  return props.notFound ? h(ErrorPage) : h(CohortSettingsPage, props);\n}\n\nvar CohortSettingsPage = function CohortSettingsPage(props) {\n  var _useUserData = useUserData(),\n      user = _useUserData.data;\n\n  var _useCohortData = useCohortData(props.cohortId, props.cohort),\n      cohort = _useCohortData.data,\n      mutate = _useCohortData.mutate;\n\n  var router = useRouter();\n  useEffect(function () {\n    if (!props.cohort || user === undefined) return;else if (user === false) router.push('/');else if (!props.cohort.cohort_facilitators.find(function (f) {\n      return user && f.facilitator === user.id;\n    })) router.push('/dashboard');\n  }, [user, props.cohort]);\n  if (!cohort) return h(PageLoader);\n  return h(Box, {\n    gap: 64\n  }, [h(Box, [h(BackButton, {\n    href: \"/courses/\".concat(props.cohort.courses.slug, \"/\").concat(props.cohort.courses.id, \"/cohorts/\").concat(props.cohort.id)\n  }, \"Cohort\"), h('h1', \"Cohort Settings\"), h('h4', cohortName(cohort.name))]), h(Tabs, {\n    tabs: {\n      Details: h(CohortDetails, {\n        cohort: cohort,\n        mutate: mutate\n      })\n    }\n  })]);\n};\n\nfunction CohortDetails(props) {\n  var start_date = new Date(props.cohort.start_date);\n\n  var _useFormData = useFormData({\n    name: props.cohort.name,\n    description: props.cohort.description,\n    start_date: \"\".concat(start_date.getFullYear(), \"-\").concat(('0' + (start_date.getMonth() + 1)).slice(-2), \"-\").concat(('0' + start_date.getDate()).slice(-2)),\n    start_time: start_date.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false\n    })\n  }, [props.cohort]),\n      state = _useFormData.state,\n      form = _useFormData.form,\n      reset = _useFormData.reset,\n      changed = _useFormData.changed;\n\n  var _useApi = useApi([]),\n      _useApi2 = _slicedToArray(_useApi, 2),\n      status = _useApi2[0],\n      callUpdateCohort = _useApi2[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var d1, t1, start_date, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              d1 = state.start_date.split('-').map(function (x) {\n                return parseInt(x);\n              });\n              t1 = state.start_time.split(':').map(function (x) {\n                return parseInt(x);\n              });\n              start_date = new Date(d1[0], d1[1] - 1, d1[2], t1[0], t1[1]).toISOString();\n              _context.next = 6;\n              return callUpdateCohort(\"/api/cohorts/\".concat(props.cohort.id), {\n                data: {\n                  name: state.name,\n                  description: state.description,\n                  start_date: start_date\n                }\n              });\n\n            case 6:\n              result = _context.sent;\n\n              if (result.status === 200) {\n                props.mutate(_objectSpread(_objectSpread({}, props.cohort), result.result));\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return h(FormBox, {\n    width: 400,\n    onSubmit: onSubmit\n  }, [h(LabelBox, {\n    gap: 8\n  }, [h('h3', 'Cohort Name'), h(Input, _objectSpread({\n    maxLength: 50\n  }, form.name))]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h('h4', 'Blurb'), h('small', 'Describe your cohort in one or two sentences. ')]), h(Textarea, _objectSpread({\n    maxLength: 200\n  }, form.description))]), h(LabelBox, {\n    gap: 8\n  }, [h('h4', \"Start Date\"), h(Box, {\n    h: true\n  }, [h(Input, _objectSpread({\n    type: \"date\"\n  }, form.start_date)), h(Input, _objectSpread({\n    type: \"time\"\n  }, form.start_time))])]), h(Box, {\n    h: true,\n    style: {\n      justifySelf: \"right\"\n    }\n  }, [h(Destructive, {\n    disabled: !changed,\n    onClick: function onClick(e) {\n      e.preventDefault();\n      reset();\n    }\n  }, \"Discard Changes\"), h(Primary, {\n    type: 'submit',\n    disabled: !changed,\n    status: status\n  }, 'Save Changes')])]);\n}","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/courses/[slug]/[id]/cohorts/[cohortId]/settings.ts"],"names":["h","ErrorPage","Box","FormBox","LabelBox","PageLoader","useCohortData","useUserData","useEffect","useRouter","BackButton","Primary","Destructive","Tabs","Input","Textarea","useFormData","useApi","cohortName","WrappedSettingsPage","props","notFound","CohortSettingsPage","user","data","cohortId","cohort","mutate","router","undefined","push","cohort_facilitators","find","f","facilitator","id","gap","href","courses","slug","name","tabs","Details","CohortDetails","start_date","Date","description","getFullYear","getMonth","slice","getDate","start_time","toLocaleTimeString","hour","minute","hour12","state","form","reset","changed","status","callUpdateCohort","onSubmit","e","preventDefault","d1","split","map","x","parseInt","t1","toISOString","result","width","maxLength","type","style","justifySelf","disabled","onClick"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport { InferGetStaticPropsType } from \"next\"\nimport { cohortDataQuery, UpdateCohortMsg, UpdateCohortResponse } from \"pages/api/cohorts/[cohortId]\"\nimport { getTaggedPost } from \"src/discourse\"\nimport ErrorPage from 'pages/404'\nimport { Box, FormBox, LabelBox } from 'components/Layout'\nimport { PageLoader } from 'components/Loader'\nimport { Cohort, useCohortData, useUserData } from 'src/data'\nimport { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { BackButton, Primary, Destructive } from 'components/Button'\nimport { Tabs } from 'components/Tabs'\nimport { Input, Textarea } from 'components/Form'\nimport { useFormData } from 'src/hooks'\nimport { useApi } from 'src/apiHelpers'\nimport { cohortName } from 'src/utils'\n\ntype Props = InferGetStaticPropsType<typeof getStaticProps>\nexport default function WrappedSettingsPage(props:Props) {return props.notFound ? h(ErrorPage) : h(CohortSettingsPage, props)}\nconst CohortSettingsPage= (props: Extract<Props, {notFound:false}>) => {\n  let {data: user} = useUserData()\n  let {data: cohort, mutate} = useCohortData(props.cohortId, props.cohort)\n  let router = useRouter()\n  useEffect(()=>{\n    if(!props.cohort || user === undefined) return\n    else if(user===false) router.push('/')\n    else if(!props.cohort.cohort_facilitators.find(f=>user&&f.facilitator===user.id)) router.push('/dashboard')\n  },[user, props.cohort])\n  if(!cohort) return h(PageLoader)\n  return h(Box, {gap:64}, [\n    h(Box, [\n      h(BackButton, {href:`/courses/${props.cohort.courses.slug}/${props.cohort.courses.id}/cohorts/${props.cohort.id}`}, \"Cohort\"),\n      h('h1', \"Cohort Settings\"),\n      h('h4', cohortName(cohort.name))\n    ]),\n    h(Tabs, {tabs: {\n      Details: h(CohortDetails, {cohort, mutate}),\n    }\n    })\n  ])\n}\n\nfunction CohortDetails(props:{cohort:Cohort, mutate:(c:Cohort)=>void}) {\n  let start_date = new Date(props.cohort.start_date)\n  let {state, form, reset, changed} = useFormData({\n    name: props.cohort.name,\n    description: props.cohort.description,\n    start_date: `${start_date.getFullYear()}-${('0'+(start_date.getMonth()+1)).slice(-2)}-${('0'+start_date.getDate()).slice(-2)}`,\n    start_time: start_date.toLocaleTimeString([], {hour:\"2-digit\", minute: \"2-digit\", hour12: false}),\n  }, [props.cohort])\n\n  let [status, callUpdateCohort] = useApi<UpdateCohortMsg, UpdateCohortResponse>([])\n\n  const onSubmit = async (e:React.FormEvent)=>{\n    e.preventDefault()\n\n    let d1 = state.start_date.split('-').map(x=>parseInt(x))\n    let t1 = state.start_time.split(':').map(x=>parseInt(x))\n    let start_date = (new Date(d1[0], d1[1] -1, d1[2], t1[0], t1[1])).toISOString()\n    let result = await callUpdateCohort(`/api/cohorts/${props.cohort.id}`, {data: {\n      name: state.name,\n      description: state.description,\n      start_date\n    }})\n    if(result.status === 200) {\n      props.mutate({...props.cohort, ...result.result})\n    }\n  }\n\n  return h(FormBox, {width: 400, onSubmit}, [\n    h(LabelBox, {gap: 8}, [\n      h('h3', 'Cohort Name'),\n      h(Input, {maxLength: 50, ...form.name})\n    ]),\n    h(LabelBox, {gap:8}, [\n      h(\"div\", [\n        h('h4', 'Blurb'),\n        h('small', 'Describe your cohort in one or two sentences. ')\n      ]),\n      h(Textarea, {maxLength: 200, ...form.description})\n    ]),\n    h(LabelBox, {gap:8}, [\n      h('h4', \"Start Date\"),\n      h(Box, {h: true},[\n      h(Input, {type: \"date\", ...form.start_date}),\n      h(Input, {type: \"time\", ...form.start_time})\n      ])\n    ]),\n    h(Box, {h: true, style:{justifySelf:\"right\"}},[\n      h(Destructive, {disabled: !changed, onClick: (e)=>{\n        e.preventDefault()\n        reset()\n      }}, \"Discard Changes\"),\n        h(Primary, {type: 'submit', disabled: !changed, status}, 'Save Changes')\n    ])\n  ])\n}\n\nexport const getStaticProps = async (ctx:any)=>{\n  let cohortId = parseInt(ctx.params?.cohortId as string || '')\n  if(Number.isNaN(cohortId)) return {props:{notFound: true}} as const\n  let cohort = await cohortDataQuery(cohortId)\n\n  if(!cohort) return {props: {notFound: true}} as const\n\n  let cohort_events = cohort.cohort_events\n    .filter(c=>c.everyone)\n    .map(event =>{\n      return {...event, events: {...event.events, location: ''}}\n  })\n\n  let [notes] = await Promise.all([\n    getTaggedPost(cohort.category_id, 'note'),\n  ])\n  return {\n    props: {\n      notFound: false,\n      cohortId,\n      cohort: {...cohort, cohort_events},\n      notes,\n    },\n    revalidate: 1} as const\n}\n\nexport const getStaticPaths = () => {\n  return {paths:[], fallback: true}\n}\n"]},"metadata":{},"sourceType":"module"}