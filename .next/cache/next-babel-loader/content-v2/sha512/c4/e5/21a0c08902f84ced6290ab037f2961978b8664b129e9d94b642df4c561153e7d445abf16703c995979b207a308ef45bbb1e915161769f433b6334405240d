{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport h from 'react-hyperscript';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { Input } from 'components/Form';\nimport { Primary } from 'components/Button';\nimport { LabelBox, FormBox, Box, Seperator } from 'components/Layout';\nimport { useApi } from 'src/apiHelpers';\nimport { useUserData } from 'src/data';\nimport { dateFromDateAndTimeInputs, formHelper } from 'src/utils';\nimport EditorWithPreview from 'components/EditorWithPreview';\n\nconst CreateEvent = () => {\n  let {\n    data: user\n  } = useUserData();\n  let router = useRouter();\n  let {\n    0: formData,\n    1: setFormData\n  } = useState({\n    name: '',\n    cost: 0,\n    max_attendees: 0,\n    description: '',\n    start_date: '',\n    start_time: '',\n    end_time: '',\n    location: ''\n  });\n  let [status, callCreateEvent] = useApi([]);\n  if (user === false) router.push('/');\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    let start_date = dateFromDateAndTimeInputs(formData.start_date, formData.start_time).toISOString();\n    let end_date = dateFromDateAndTimeInputs(formData.start_date, formData.end_time).toISOString();\n    let result = await callCreateEvent('/api/events', _objectSpread(_objectSpread({}, formData), {}, {\n      type: 'standalone',\n      start_date,\n      end_date\n    }));\n    if (result.status === 200) router.push('/events/' + result.result.event.events.id);\n  };\n\n  return h(FormBox, {\n    onSubmit\n  }, [h('h1', 'Create a New Event'), h(EventForm, {\n    onChange: setFormData,\n    state: formData\n  }), h(Primary, {\n    status,\n    type: 'submit'\n  }, 'Submit')]);\n};\n\nexport const EventForm = props => {\n  let f = formHelper(props.state, props.onChange);\n  let timezone = new Date().toLocaleDateString('en-us', {\n    timeZoneName: \"short\"\n  }).split(', ')[1];\n  return h(Box, [h(LabelBox, {\n    gap: 8,\n    width: 400\n  }, [h('h4', \"Event Name\"), h(Input, _objectSpread({}, f.name))]), h(LabelBox, {\n    gap: 8\n  }, [h('h4', \"Description\"), h(EditorWithPreview, _objectSpread({\n    height: 400\n  }, f.description))]), h(Seperator), h(Box, {\n    h: true,\n    gap: 32,\n    width: 640,\n    style: {\n      gridAutoColumns: 'auto'\n    }\n  }, [h(LabelBox, {\n    gap: 8\n  }, [h('h4', 'Date'), h(Input, _objectSpread({\n    type: 'date',\n    required: true\n  }, f.start_date))]), h(LabelBox, {\n    gap: 8\n  }, [h('h4', 'Start Time ' + `(${timezone})`), h(Input, _objectSpread({\n    type: 'time',\n    required: true\n  }, f.start_time))]), h(LabelBox, {\n    gap: 8\n  }, [h('h4', 'End Time ' + `(${timezone})`), h(Input, _objectSpread({\n    type: \"time\",\n    required: true\n  }, f.end_time))])]), h(LabelBox, {\n    gap: 8,\n    width: 400\n  }, [h('div', [h('h4', \"Location\"), h('small.textSecondary', 'Like a Zoom, Jitsi, or Google Meet link')]), h(Input, _objectSpread(_objectSpread({}, f.location), {}, {\n    required: true\n  }))]), h(LabelBox, {\n    gap: 8,\n    width: 400\n  }, [h('div', [h('h4', \"Max participants\"), h('small.textSecondary', \"Set to 0 for no limit\")]), h(Input, _objectSpread({\n    type: 'number',\n    min: 0\n  }, f.max_attendees))]), h(LabelBox, {\n    gap: 8,\n    width: 400\n  }, [h('h4', \"Cost\"), h(Input, _objectSpread({\n    type: 'number',\n    min: 0\n  }, f.cost))])]);\n};\nexport default CreateEvent;","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/events/create.ts"],"names":["h","useRouter","useState","Input","Primary","LabelBox","FormBox","Box","Seperator","useApi","useUserData","dateFromDateAndTimeInputs","formHelper","EditorWithPreview","CreateEvent","data","user","router","formData","setFormData","name","cost","max_attendees","description","start_date","start_time","end_time","location","status","callCreateEvent","push","onSubmit","e","preventDefault","toISOString","end_date","result","type","event","events","id","EventForm","onChange","state","props","f","timezone","Date","toLocaleDateString","timeZoneName","split","gap","width","height","style","gridAutoColumns","required","min"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport { useRouter } from 'next/router'\nimport { useState } from 'react'\n\nimport { Input } from 'components/Form'\nimport { Primary } from 'components/Button'\nimport { LabelBox, FormBox, Box, Seperator } from 'components/Layout'\n\nimport { useApi } from 'src/apiHelpers'\nimport { useUserData } from 'src/data'\nimport { CreateEventMsg, CreateEventResponse } from 'pages/api/events'\nimport { dateFromDateAndTimeInputs, formHelper } from 'src/utils'\nimport EditorWithPreview from 'components/EditorWithPreview'\n\ntype EventInput = {\n  name: string,\n  cost: number,\n  max_attendees: number,\n  description: string,\n  start_date: string,\n  start_time: string,\n  end_time: string,\n  location: string\n}\n\nconst CreateEvent = ()=> {\n  let {data: user} = useUserData()\n  let router = useRouter()\n  let [formData, setFormData] = useState({\n    name: '',\n    cost: 0,\n    max_attendees: 0,\n    description: '',\n    start_date: '',\n    start_time: '',\n    end_time: '',\n    location: '',\n  })\n  let [status, callCreateEvent] = useApi<CreateEventMsg, CreateEventResponse>([])\n\n  if(user === false) router.push('/')\n\n  const onSubmit = async (e:React.FormEvent) => {\n    e.preventDefault()\n\n    let start_date = dateFromDateAndTimeInputs(formData.start_date, formData.start_time).toISOString()\n    let end_date =dateFromDateAndTimeInputs(formData.start_date, formData.end_time).toISOString()\n\n    let result = await callCreateEvent('/api/events', {...formData, type: 'standalone', start_date, end_date})\n    if(result.status === 200) router.push('/events/'+result.result.event.events.id)\n  }\n\n  return h(FormBox, {onSubmit}, [\n    h('h1', 'Create a New Event'),\n    h(EventForm, {onChange: setFormData, state: formData}),\n    h(Primary, {status, type: 'submit'}, 'Submit'),\n  ])\n}\n\nexport const EventForm = (props: {onChange: (e:EventInput)=>void, state:EventInput})=>{\n  let f = formHelper(props.state, props.onChange)\n  let timezone = new Date().toLocaleDateString('en-us',{timeZoneName:\"short\"}).split(', ')[1]\n  return h(Box, [\n    h(LabelBox, {gap:8, width: 400}, [\n      h('h4', \"Event Name\"),\n      h(Input, {...f.name})\n    ]),\n    h(LabelBox, {gap:8}, [\n      h('h4', \"Description\"),\n      h(EditorWithPreview, {height: 400, ...f.description})\n    ]),\n    h(Seperator),\n    h(Box, {h: true, gap: 32, width: 640, style:{gridAutoColumns: 'auto'}}, [\n      h(LabelBox, {gap:8}, [\n        h('h4', 'Date'),\n        h(Input, {\n          type: 'date',\n          required: true,\n          ...f.start_date,\n        })\n      ]),\n      h(LabelBox, {gap:8}, [\n        h('h4', 'Start Time ' + `(${timezone})`),\n        h(Input, {\n          type: 'time',\n          required: true,\n          ...f.start_time\n        })\n      ]),\n      h(LabelBox, {gap:8}, [\n        h('h4', 'End Time ' + `(${timezone})`),\n        h(Input, {\n          type: \"time\",\n          required: true,\n          ...f.end_time\n        })\n      ]),\n    ]),\n    h(LabelBox, {gap: 8, width: 400}, [\n      h('div', [\n        h('h4', \"Location\"),\n        h('small.textSecondary', 'Like a Zoom, Jitsi, or Google Meet link'),\n      ]),\n      h(Input, {...f.location,required:true})\n    ]),\n    h(LabelBox, {gap: 8, width: 400, }, [\n      h('div', [\n        h('h4', \"Max participants\"),\n        h('small.textSecondary', \"Set to 0 for no limit\"),\n      ]),\n      h(Input, {type: 'number',  min: 0, ...f.max_attendees})\n    ]),\n    h(LabelBox, {gap:8, width:400},[\n      h('h4',\"Cost\"),\n      h(Input, {type: 'number', min: 0, ...f.cost})\n    ]),\n  ])\n}\n\nexport default CreateEvent\n"]},"metadata":{},"sourceType":"module"}