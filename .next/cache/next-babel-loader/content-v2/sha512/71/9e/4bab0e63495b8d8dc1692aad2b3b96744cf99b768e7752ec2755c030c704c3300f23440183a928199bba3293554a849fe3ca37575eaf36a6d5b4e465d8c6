{"ast":null,"code":"import * as t from 'runtypes';\nimport useSWR, { mutate } from 'swr';\nlet discountsParser = t.Array(t.Record({\n  course: t.Number,\n  code: t.String,\n  amount: t.Number,\n  date_added: t.String,\n  type: t.Union(t.Literal('percentage'), t.Literal('absolute'))\n}));\nexport function useLocalDiscounts() {\n  return useSWR('discounts', async () => {\n    return getDiscounts();\n  }, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false\n  });\n}\nexport function getDiscounts() {\n  try {\n    let localData = discountsParser.check(JSON.parse(localStorage.getItem('discounts') || ''));\n    return localData;\n  } catch (e) {\n    localStorage.setItem('discounts', JSON.stringify([]));\n    return [];\n  }\n}\nexport function setDiscounts(discounts) {\n  localStorage.setItem('discounts', JSON.stringify(discounts));\n  mutate('discounts', discounts);\n}","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/src/clientData.ts"],"names":["t","useSWR","mutate","discountsParser","Array","Record","course","Number","code","String","amount","date_added","type","Union","Literal","useLocalDiscounts","getDiscounts","revalidateOnFocus","revalidateOnReconnect","localData","check","JSON","parse","localStorage","getItem","e","setItem","stringify","setDiscounts","discounts"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,UAAnB;AACA,OAAOC,MAAP,IAAgBC,MAAhB,QAA6B,KAA7B;AAEA,IAAIC,eAAe,GAAGH,CAAC,CAACI,KAAF,CAAQJ,CAAC,CAACK,MAAF,CAAS;AACrCC,EAAAA,MAAM,EAAEN,CAAC,CAACO,MAD2B;AAErCC,EAAAA,IAAI,EAAER,CAAC,CAACS,MAF6B;AAGrCC,EAAAA,MAAM,EAAEV,CAAC,CAACO,MAH2B;AAIrCI,EAAAA,UAAU,EAAEX,CAAC,CAACS,MAJuB;AAKrCG,EAAAA,IAAI,EAAEZ,CAAC,CAACa,KAAF,CAAQb,CAAC,CAACc,OAAF,CAAU,YAAV,CAAR,EAAiCd,CAAC,CAACc,OAAF,CAAU,UAAV,CAAjC;AAL+B,CAAT,CAAR,CAAtB;AAQA,OAAO,SAASC,iBAAT,GAA6B;AAClC,SAAOd,MAAM,CAAC,WAAD,EAAc,YAAU;AACnC,WAAOe,YAAY,EAAnB;AACD,GAFY,EAEV;AACDC,IAAAA,iBAAiB,EAAE,KADlB;AAEDC,IAAAA,qBAAqB,EAAE;AAFtB,GAFU,CAAb;AAMD;AACD,OAAO,SAASF,YAAT,GAAwB;AAC7B,MAAI;AACF,QAAIG,SAAS,GAAGhB,eAAe,CAACiB,KAAhB,CAAsBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqC,EAAhD,CAAtB,CAAhB;AACA,WAAOL,SAAP;AACD,GAHD,CAIA,OAAMM,CAAN,EAAS;AACPF,IAAAA,YAAY,CAACG,OAAb,CAAqB,WAArB,EAAkCL,IAAI,CAACM,SAAL,CAAe,EAAf,CAAlC;AACA,WAAO,EAAP;AACD;AACF;AAED,OAAO,SAASC,YAAT,CAAsBC,SAAtB,EAAiE;AACtEN,EAAAA,YAAY,CAACG,OAAb,CAAqB,WAArB,EAAkCL,IAAI,CAACM,SAAL,CAAeE,SAAf,CAAlC;AACA3B,EAAAA,MAAM,CAAC,WAAD,EAAc2B,SAAd,CAAN;AACD","sourcesContent":["import * as t from 'runtypes'\nimport useSWR, {mutate} from 'swr'\n\nlet discountsParser = t.Array(t.Record({\n  course: t.Number,\n  code: t.String,\n  amount: t.Number,\n  date_added: t.String,\n  type: t.Union(t.Literal('percentage'), t.Literal('absolute'))\n}))\n\nexport function useLocalDiscounts() {\n  return useSWR('discounts', async ()=>{\n    return getDiscounts()\n  }, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  })\n}\nexport function getDiscounts() {\n  try {\n    let localData = discountsParser.check(JSON.parse(localStorage.getItem('discounts') || ''))\n    return localData\n  }\n  catch(e) {\n    localStorage.setItem('discounts', JSON.stringify([]))\n    return []\n  }\n}\n\nexport function setDiscounts(discounts:t.Static<typeof discountsParser>){\n  localStorage.setItem('discounts', JSON.stringify(discounts))\n  mutate('discounts', discounts)\n}\n"]},"metadata":{},"sourceType":"module"}