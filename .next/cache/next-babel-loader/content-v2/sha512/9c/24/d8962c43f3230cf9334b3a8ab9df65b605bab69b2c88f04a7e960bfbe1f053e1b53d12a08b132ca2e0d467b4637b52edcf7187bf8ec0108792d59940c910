{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport h from 'react-hyperscript';\nimport { Box, FormBox, LabelBox, Seperator } from 'components/Layout';\nimport { Textarea, Input } from 'components/Form';\nimport { useApi } from 'src/apiHelpers';\nimport { Primary } from 'components/Button';\nimport { AccentImg } from 'components/Images';\nimport { useFormData } from 'src/hooks';\nexport default (() => {\n  let {\n    state,\n    form,\n    reset\n  } = useFormData({\n    Name: \"\",\n    Email: \"\",\n    About: \"\",\n    Experience: \"\",\n    Timeline: \"\",\n    Hours: \"\",\n    Goals: \"\",\n    Artifacts: \"\",\n    Scheduling: \"\"\n  });\n  let [status, callApi] = useApi([state]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    callApi('/api/submitForm', {\n      base: \"appedbglZk1jTEyCS\",\n      data: state\n    });\n  };\n\n  return status === \"success\" ? h(Box, {\n    style: {\n      justifyItems: \"center\"\n    },\n    gap: 32\n  }, [h(Box, {\n    style: {\n      textAlign: \"center\",\n      justifyItems: \"center\"\n    }\n  }, [h(AccentImg, {\n    src: \"/img/plane.gif\",\n    alt: \"an animated gif of a paper airplane taking off\"\n  }), h(\"h1\", \"Thank You!\"), h(\"p.big\", `We'll get back to you soon! `)]), h(Primary, {\n    onClick: () => reset()\n  }, \"Submit another idea\")]) : h(Box, {\n    ma: true,\n    width: 640,\n    gap: 32\n  }, [h(Box, [h(\"h1\", \"Propose a Learning Adventure\"), h(\"p.big\", `Interested in joining Krakenedu's Learning Adventure Club? We'd love to hear what you have in mind!`), h(\"p.big\", `We love experiments. Also, projects that are ambitious and concrete :)`), h(\"p.big\", `Submit the form below, and if it's a good fit, we'll invite you to join an upcoming cohort.`)]), h(Seperator), h(FormBox, {\n    gap: 64,\n    onSubmit\n  }, [h(Box, {\n    gap: 32\n  }, [h(LabelBox, {\n    gap: 8\n  }, [h(\"h3\", \"Your Name\"), h(Input, _objectSpread({\n    type: \"text\"\n  }, form.Name))]), h(LabelBox, {\n    gap: 8\n  }, [h(\"h3\", \"Your Email\"), h(Input, _objectSpread({\n    type: \"email\"\n  }, form.Email))]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"What's your project about, in a sentence or two?\"), h(\"small\", `For example: \"I'm writing a book about personal librarianship\" or \"I'm doing a daily animation challenge\"`)]), h(Textarea, form.About)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"How experienced are you in this area? (Scale of 1 to 5)\"), h(\"small\", `Where 1 = \"totally new thing for me\" and 5 = \"I've been doing this for years\"`)]), h(Input, form.Experience)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"What's your estimated project length / timeline?\"), h(\"small\", `Is this a one-month project? A one-year project? Ongoing / TBD?`)]), h(Input, form.Timeline)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"How many hours per week will you commit to working on it?\"), h(\"small\", `Average is fine, but we'll expect some progress weekly. Be realistic!`)]), h(Input, form.Hours)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"What are your main goals for this project?\"), h(\"small\", `In a couple sentences: what do you hope to get out of this? What does success / completion look like?`)]), h(Textarea, form.Goals)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"What might you make and share as an artifact?\"), h(\"small\", `For example: \"I'll publish weekly reading notes on my blog\" or \"I'll share a daily Instagram post\"`)]), h(Textarea, form.Artifacts)]), h(LabelBox, {\n    gap: 8\n  }, [h(\"div\", [h(\"h3\", \"When can you start, and what time works best?\"), h(\"small\", `For example: \"I'd like to start in February and evenings EST are best\" (this helps us plan future cohorts)`)]), h(Textarea, form.Scheduling)])]), h(Primary, {\n    type: \"submit\",\n    status,\n    style: {\n      justifySelf: \"right\"\n    }\n  }, \"Submit\")])]);\n});","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/forms/propose-adventure.ts"],"names":["h","Box","FormBox","LabelBox","Seperator","Textarea","Input","useApi","Primary","AccentImg","useFormData","state","form","reset","Name","Email","About","Experience","Timeline","Hours","Goals","Artifacts","Scheduling","status","callApi","onSubmit","e","preventDefault","base","data","style","justifyItems","gap","textAlign","src","alt","onClick","ma","width","type","justifySelf"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport { Box, FormBox, LabelBox, Seperator } from 'components/Layout'\nimport { Textarea, Input } from 'components/Form'\nimport { useApi } from 'src/apiHelpers'\nimport {SubmitFormMsg, SubmitFormResponse} from 'pages/api/submitForm'\nimport { Primary } from 'components/Button'\nimport { AccentImg } from 'components/Images'\nimport { useFormData } from 'src/hooks'\n\nexport default ()=>{\n  let {state, form, reset} = useFormData({\n    Name: \"\",\n    Email: \"\",\n    About: \"\",\n    Experience: \"\",\n    Timeline: \"\",\n    Hours: \"\",\n    Goals: \"\",\n    Artifacts: \"\",\n    Scheduling: \"\"\n  })\n  let[status, callApi] = useApi<SubmitFormMsg, SubmitFormResponse>([state])\n  const onSubmit = (e:React.FormEvent) =>{\n    e.preventDefault()\n    callApi('/api/submitForm', {\n      base: \"appedbglZk1jTEyCS\",\n      data: state\n    })\n  }\n  return status === \"success\"\n    ? h(Box, { style: { justifyItems: \"center\" }, gap: 32 }, [\n        h(Box, { style: { textAlign: \"center\", justifyItems: \"center\" } }, [\n          h(AccentImg, {\n            src: \"/img/plane.gif\",\n            alt: \"an animated gif of a paper airplane taking off\",\n          }),\n          h(\"h1\", \"Thank You!\"),\n          h(\"p.big\", `We'll get back to you soon! `),\n        ]),\n        h(Primary, { onClick: () => reset() }, \"Submit another idea\"),\n      ])\n    : h(Box, { ma: true, width: 640, gap: 32 }, [\n        h(Box, [\n          h(\"h1\", \"Propose a Learning Adventure\"),\n          h(\n            \"p.big\",\n            `Interested in joining Krakenedu's Learning Adventure Club? We'd love to hear what you have in mind!`\n          ),\n          h(\n            \"p.big\",\n            `We love experiments. Also, projects that are ambitious and concrete :)`\n          ),\n          h(\n            \"p.big\",\n            `Submit the form below, and if it's a good fit, we'll invite you to join an upcoming cohort.`\n          ),\n        ]),\n        h(Seperator),\n\n        h(FormBox, { gap: 64, onSubmit }, [\n          h(Box, { gap: 32 }, [\n            h(LabelBox, { gap: 8 }, [\n              h(\"h3\", \"Your Name\"),\n              h(Input, {\n                type: \"text\",\n                ...form.Name,\n              }),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"h3\", \"Your Email\"),\n              h(Input, {\n                type: \"email\",\n                ...form.Email,\n              }),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"What's your project about, in a sentence or two?\"),\n                h(\n                  \"small\",\n                  `For example: \"I'm writing a book about personal librarianship\" or \"I'm doing a daily animation challenge\"`\n                ),\n              ]),\n              h(Textarea, form.About),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\n                  \"h3\",\n                  \"How experienced are you in this area? (Scale of 1 to 5)\"\n                ),\n                h(\n                  \"small\",\n                  `Where 1 = \"totally new thing for me\" and 5 = \"I've been doing this for years\"`\n                ),\n              ]),\n              h(Input, form.Experience),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"What's your estimated project length / timeline?\"),\n                h(\n                  \"small\",\n                  `Is this a one-month project? A one-year project? Ongoing / TBD?`\n                ),\n              ]),\n              h(Input, form.Timeline),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\n                  \"h3\",\n                  \"How many hours per week will you commit to working on it?\"\n                ),\n                h(\n                  \"small\",\n                  `Average is fine, but we'll expect some progress weekly. Be realistic!`\n                ),\n              ]),\n              h(Input, form.Hours),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"What are your main goals for this project?\"),\n                h(\n                  \"small\",\n                  `In a couple sentences: what do you hope to get out of this? What does success / completion look like?`\n                ),\n              ]),\n              h(Textarea, form.Goals),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"What might you make and share as an artifact?\"),\n                h(\n                  \"small\",\n                  `For example: \"I'll publish weekly reading notes on my blog\" or \"I'll share a daily Instagram post\"`\n                ),\n              ]),\n              h(Textarea, form.Artifacts),\n            ]),\n            h(LabelBox, { gap: 8 }, [\n              h(\"div\", [\n                h(\"h3\", \"When can you start, and what time works best?\"),\n                h(\n                  \"small\",\n                  `For example: \"I'd like to start in February and evenings EST are best\" (this helps us plan future cohorts)`\n                ),\n              ]),\n              h(Textarea, form.Scheduling),\n            ]),\n          ]),\n          h(\n            Primary,\n            { type: \"submit\", status, style: { justifySelf: \"right\" } },\n            \"Submit\"\n          ),\n        ]),\n      ]);\n}\n"]},"metadata":{},"sourceType":"module"}