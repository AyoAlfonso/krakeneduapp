{"ast":null,"code":"import { callPaystackPop } from './paystack-actions';\nexport default function usePaystackPayment(options) {\n  var publicKey = options.publicKey,\n      firstname = options.firstname,\n      lastname = options.lastname,\n      phone = options.phone,\n      email = options.email,\n      amount = options.amount,\n      reference = options.reference,\n      _options$metadata = options.metadata,\n      metadata = _options$metadata === void 0 ? {} : _options$metadata,\n      _options$currency = options.currency,\n      currency = _options$currency === void 0 ? 'NGN' : _options$currency,\n      channels = options.channels,\n      _options$label = options.label,\n      label = _options$label === void 0 ? '' : _options$label,\n      _options$plan = options.plan,\n      plan = _options$plan === void 0 ? '' : _options$plan,\n      _options$quantity = options.quantity,\n      quantity = _options$quantity === void 0 ? '' : _options$quantity,\n      _options$subaccount = options.subaccount,\n      subaccount = _options$subaccount === void 0 ? '' : _options$subaccount,\n      _options$transaction_ = options.transaction_charge,\n      transaction_charge = _options$transaction_ === void 0 ? 0 : _options$transaction_,\n      _options$bearer = options.bearer,\n      bearer = _options$bearer === void 0 ? 'account' : _options$bearer,\n      split = options.split,\n      split_code = options.split_code;\n\n  function initializePayment(callback, onClose) {\n    var paystackArgs = {\n      callback: callback ? callback : function () {\n        return null;\n      },\n      onClose: onClose ? onClose : function () {\n        return null;\n      },\n      key: publicKey,\n      ref: reference,\n      email: email,\n      firstname: firstname,\n      lastname: lastname,\n      phone: phone,\n      amount: amount,\n      currency: currency,\n      plan: plan,\n      quantity: quantity,\n      'data-custom-button': options['data-custom-button'] || '',\n      channels: channels,\n      subaccount: subaccount,\n      transaction_charge: transaction_charge,\n      bearer: bearer,\n      label: label,\n      metadata: metadata,\n      split: split,\n      split_code: split_code\n    };\n    callPaystackPop(paystackArgs);\n  }\n\n  return initializePayment;\n}","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/src/paystack/use-paystack.ts"],"names":["callPaystackPop","usePaystackPayment","options","publicKey","firstname","lastname","phone","email","amount","reference","metadata","currency","channels","label","plan","quantity","subaccount","transaction_charge","bearer","split","split_code","initializePayment","callback","onClose","paystackArgs","key","ref"],"mappings":"AACA,SAAQA,eAAR,QAA8B,oBAA9B;AAEA,eAAe,SAASC,kBAAT,CACbC,OADa,EAEsC;AAAA,MAEjDC,SAFiD,GAoB/CD,OApB+C,CAEjDC,SAFiD;AAAA,MAGjDC,SAHiD,GAoB/CF,OApB+C,CAGjDE,SAHiD;AAAA,MAIjDC,QAJiD,GAoB/CH,OApB+C,CAIjDG,QAJiD;AAAA,MAKjDC,KALiD,GAoB/CJ,OApB+C,CAKjDI,KALiD;AAAA,MAMjDC,KANiD,GAoB/CL,OApB+C,CAMjDK,KANiD;AAAA,MAOjDC,MAPiD,GAoB/CN,OApB+C,CAOjDM,MAPiD;AAAA,MAQjDC,SARiD,GAoB/CP,OApB+C,CAQjDO,SARiD;AAAA,0BAoB/CP,OApB+C,CASjDQ,QATiD;AAAA,MASjDA,QATiD,kCAStC,EATsC;AAAA,0BAoB/CR,OApB+C,CAUjDS,QAViD;AAAA,MAUjDA,QAViD,kCAUtC,KAVsC;AAAA,MAWjDC,QAXiD,GAoB/CV,OApB+C,CAWjDU,QAXiD;AAAA,uBAoB/CV,OApB+C,CAYjDW,KAZiD;AAAA,MAYjDA,KAZiD,+BAYzC,EAZyC;AAAA,sBAoB/CX,OApB+C,CAajDY,IAbiD;AAAA,MAajDA,IAbiD,8BAa1C,EAb0C;AAAA,0BAoB/CZ,OApB+C,CAcjDa,QAdiD;AAAA,MAcjDA,QAdiD,kCActC,EAdsC;AAAA,4BAoB/Cb,OApB+C,CAejDc,UAfiD;AAAA,MAejDA,UAfiD,oCAepC,EAfoC;AAAA,8BAoB/Cd,OApB+C,CAgBjDe,kBAhBiD;AAAA,MAgBjDA,kBAhBiD,sCAgB5B,CAhB4B;AAAA,wBAoB/Cf,OApB+C,CAiBjDgB,MAjBiD;AAAA,MAiBjDA,MAjBiD,gCAiBxC,SAjBwC;AAAA,MAkBjDC,KAlBiD,GAoB/CjB,OApB+C,CAkBjDiB,KAlBiD;AAAA,MAmBjDC,UAnBiD,GAoB/ClB,OApB+C,CAmBjDkB,UAnBiD;;AAsBnD,WAASC,iBAAT,CAA2BC,QAA3B,EAAgDC,OAAhD,EAA0E;AACtE,QAAMC,YAAiC,GAAG;AACxCF,MAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAc;AAAA,eAAW,IAAX;AAAA,OADQ;AAExCC,MAAAA,OAAO,EAAEA,OAAO,GAAGA,OAAH,GAAa;AAAA,eAAW,IAAX;AAAA,OAFW;AAGxCE,MAAAA,GAAG,EAAEtB,SAHmC;AAIxCuB,MAAAA,GAAG,EAAEjB,SAJmC;AAKxCF,MAAAA,KAAK,EAALA,KALwC;AAMxCH,MAAAA,SAAS,EAATA,SANwC;AAOxCC,MAAAA,QAAQ,EAARA,QAPwC;AAQxCC,MAAAA,KAAK,EAALA,KARwC;AASxCE,MAAAA,MAAM,EAANA,MATwC;AAUxCG,MAAAA,QAAQ,EAARA,QAVwC;AAWxCG,MAAAA,IAAI,EAAJA,IAXwC;AAYxCC,MAAAA,QAAQ,EAARA,QAZwC;AAaxC,4BAAsBb,OAAO,CAAC,oBAAD,CAAP,IAAiC,EAbf;AAcxCU,MAAAA,QAAQ,EAARA,QAdwC;AAexCI,MAAAA,UAAU,EAAVA,UAfwC;AAgBxCC,MAAAA,kBAAkB,EAAlBA,kBAhBwC;AAiBxCC,MAAAA,MAAM,EAANA,MAjBwC;AAkBxCL,MAAAA,KAAK,EAALA,KAlBwC;AAmBxCH,MAAAA,QAAQ,EAARA,QAnBwC;AAoBxCS,MAAAA,KAAK,EAALA,KApBwC;AAqBxCC,MAAAA,UAAU,EAAVA;AArBwC,KAA1C;AAuBApB,IAAAA,eAAe,CAACwB,YAAD,CAAf;AACH;;AAED,SAAOH,iBAAP;AACD","sourcesContent":["import {PaystackProps} from './types';\nimport {callPaystackPop} from './paystack-actions';\n\nexport default function usePaystackPayment(\n  options: PaystackProps,\n): (callback?: Function, onClose?: Function) => void {\n  const {\n    publicKey,\n    firstname,\n    lastname,\n    phone,\n    email,\n    amount,\n    reference,\n    metadata = {},\n    currency = 'NGN',\n    channels,\n    label = '',\n    plan = '',\n    quantity = '',\n    subaccount = '',\n    transaction_charge = 0,\n    bearer = 'account',\n    split,\n    split_code,\n  } = options;\n\n  function initializePayment(callback?: Function, onClose?: Function): void {\n      const paystackArgs: Record<string, any> = {\n        callback: callback ? callback : (): any => null,\n        onClose: onClose ? onClose : (): any => null,\n        key: publicKey,\n        ref: reference,\n        email,\n        firstname,\n        lastname,\n        phone,\n        amount,\n        currency,\n        plan,\n        quantity,\n        'data-custom-button': options['data-custom-button'] || '',\n        channels,\n        subaccount,\n        transaction_charge,\n        bearer,\n        label,\n        metadata,\n        split,\n        split_code,\n      };\n      callPaystackPop(paystackArgs);\n  }\n\n  return initializePayment;\n}\n"]},"metadata":{},"sourceType":"module"}