{"ast":null,"code":"import _styled from \"@emotion/styled-base\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport h from 'react-hyperscript';\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nimport { collections } from 'pages/library';\nimport ErrorPage from 'pages/404';\nimport { Box, FlexGrid } from 'components/Layout';\nimport { Card } from 'components/Cards';\nimport Link from 'next/link';\nimport { BackButton } from 'components/Button';\nimport { Pill } from 'components/Pill';\n\nconst WrappedLibraryCollectionsPage = props => props.notFound ? h(ErrorPage) : h(LibraryCollections, props);\n\nexport default WrappedLibraryCollectionsPage;\n\nfunction LibraryCollections(props) {\n  if (!props.collection) return h('div', '');\n  return h(Box, {\n    gap: 64\n  }, [h(Box, {\n    width: 640\n  }, [h(Box, {\n    gap: 8\n  }, [h(BackButton, {\n    href: \"/library\"\n  }, 'all Collections'), h('h1', props.collection.title)]), h('p.big', props.collection.description)]), h(FlexGrid, {\n    min: 250,\n    mobileMin: 250\n  }, props.posts.sort((a, b) => {\n    return new Date(a.date) < new Date(b.date) ? 1 : -1;\n  }).map(p => h(Link, {\n    href: p.path\n  }, h(Card, {\n    style: {\n      height: 'min-content'\n    }\n  }, [h(Box, {\n    gap: 16\n  }, [h(Box, {\n    gap: 8\n  }, [h('h3', p.title), new Date(p.date) > new Date(new Date().getTime() - 60 * 60 * 24 * 7 * 1000) ? h(NewPill, \"new!\") : null // h('span.textSecondary', `${p.author} | ${prettyDate(p.date)}`)\n  ]), h('p', p.description)])]))))]);\n}\n\nexport const getStaticProps = async ctx => {\n  let name = ctx.params.collection;\n  let collection = collections[name];\n  if (!collection) return {\n    props: {\n      notFound: true\n    }\n  };\n  let posts = fs.readdirSync('./pages/library').map(file => {\n    if (fs.lstatSync(path.join('./pages/library/', file)).isDirectory()) return;\n    let content = fs.readFileSync('./pages/library/' + file);\n    let {\n      data\n    } = matter(content);\n    return _objectSpread(_objectSpread({}, data), {}, {\n      path: '/library/' + file.slice(0, -4)\n    });\n  }).filter(p => {\n    var _p$tags;\n\n    return p === null || p === void 0 ? void 0 : (_p$tags = p.tags) === null || _p$tags === void 0 ? void 0 : _p$tags.includes(name);\n  });\n  return {\n    props: {\n      collection,\n      posts: posts,\n      notFound: false\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  let paths = Object.keys(collections).map(name => {\n    return {\n      params: {\n        collection: name\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false\n  };\n}; // pill to tag new posts - published in the last 7 days\n\nconst NewPill = /*#__PURE__*/_styled(Pill, {\n  target: \"ej8j9lp0\"\n})(true ? {\n  name: \"1qc5v5x\",\n  styles: \"background-color:green;color:white;\"\n} : {\n  name: \"1qc5v5x\",\n  styles: \"background-color:green;color:white;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9heW9vbHV3YWFsZm9uc28vY29kZS9rcmFrZW5lZHVhcHAvcGFnZXMvbGlicmFyeS9jb2xsZWN0aW9ucy9bY29sbGVjdGlvbl0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEU0QiIsImZpbGUiOiIvVXNlcnMvYXlvb2x1d2FhbGZvbnNvL2NvZGUva3Jha2VuZWR1YXBwL3BhZ2VzL2xpYnJhcnkvY29sbGVjdGlvbnMvW2NvbGxlY3Rpb25dLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGggZnJvbSAncmVhY3QtaHlwZXJzY3JpcHQnXG5pbXBvcnQgZnMgZnJvbSAnZnMnXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuaW1wb3J0IG1hdHRlciBmcm9tICdncmF5LW1hdHRlcidcbmltcG9ydCB7IEluZmVyR2V0U3RhdGljUHJvcHNUeXBlIH0gZnJvbSAnbmV4dCdcbmltcG9ydCB7IExpYnJhcnksIGNvbGxlY3Rpb25zIH0gZnJvbSAncGFnZXMvbGlicmFyeSdcbmltcG9ydCBFcnJvclBhZ2UgZnJvbSAncGFnZXMvNDA0J1xuaW1wb3J0IHsgQm94LCBGbGV4R3JpZCB9IGZyb20gJ2NvbXBvbmVudHMvTGF5b3V0J1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gJ2NvbXBvbmVudHMvQ2FyZHMnXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5pbXBvcnQgeyBCYWNrQnV0dG9uIH0gZnJvbSAnY29tcG9uZW50cy9CdXR0b24nXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcbmltcG9ydCB7IFBpbGwgfSBmcm9tICdjb21wb25lbnRzL1BpbGwnXG5cbnR5cGUgUHJvcHMgPSBJbmZlckdldFN0YXRpY1Byb3BzVHlwZTx0eXBlb2YgZ2V0U3RhdGljUHJvcHM+XG5cbmNvbnN0IFdyYXBwZWRMaWJyYXJ5Q29sbGVjdGlvbnNQYWdlID0gKHByb3BzOiBQcm9wcyk9PnByb3BzLm5vdEZvdW5kID8gaChFcnJvclBhZ2UpIDogaChMaWJyYXJ5Q29sbGVjdGlvbnMsIHByb3BzKVxuZXhwb3J0IGRlZmF1bHQgIFdyYXBwZWRMaWJyYXJ5Q29sbGVjdGlvbnNQYWdlXG5mdW5jdGlvbiBMaWJyYXJ5Q29sbGVjdGlvbnMocHJvcHM6RXh0cmFjdDxQcm9wcywge25vdEZvdW5kOiBmYWxzZX0+KXtcbiAgaWYoIXByb3BzLmNvbGxlY3Rpb24pIHJldHVybiBoKCdkaXYnLCAnJylcbiAgcmV0dXJuIGgoQm94LCB7Z2FwOiA2NH0sIFtcbiAgICBoKEJveCwge3dpZHRoOiA2NDB9LCBbXG4gICAgICBoKEJveCwge2dhcDogOH0sW1xuICAgICAgICBoKEJhY2tCdXR0b24sIHtocmVmOiBcIi9saWJyYXJ5XCJ9LCAnYWxsIENvbGxlY3Rpb25zJyksXG4gICAgICAgIGgoJ2gxJywgcHJvcHMuY29sbGVjdGlvbi50aXRsZSksXG4gICAgICBdKSxcbiAgICAgIGgoJ3AuYmlnJywgcHJvcHMuY29sbGVjdGlvbi5kZXNjcmlwdGlvbiksXG4gICAgXSksXG4gICAgaChGbGV4R3JpZCwge21pbjoyNTAsIG1vYmlsZU1pbjogMjUwfSwgcHJvcHMucG9zdHNcbiAgICAgIC5zb3J0KChhLCBiKT0+e1xuICAgICAgICByZXR1cm4gbmV3IERhdGUoYS5kYXRlKSA8IG5ldyBEYXRlKGIuZGF0ZSkgPyAxIDogLTFcbiAgICAgIH0pXG4gICAgICAubWFwKHA9PmgoTGluaywge2hyZWY6cC5wYXRofSwgaChDYXJkLCB7c3R5bGU6e2hlaWdodDonbWluLWNvbnRlbnQnfX0sIFtcbiAgICAgICAgaChCb3gsIHtnYXA6IDE2fSxbXG4gICAgICAgICAgaChCb3gsIHtnYXA6IDh9LCBbXG4gICAgICAgICAgICBoKCdoMycsIHAudGl0bGUpLFxuICAgICAgICAgICAgbmV3IERhdGUocC5kYXRlKSA+IG5ldyBEYXRlKChuZXcgRGF0ZSgpKS5nZXRUaW1lKCkgLSA2MCAqIDYwICogMjQgKiA3ICogMTAwMCkgPyBoKE5ld1BpbGwsIFwibmV3IVwiKSA6IG51bGwsXG4gICAgICAgICAgICAvLyBoKCdzcGFuLnRleHRTZWNvbmRhcnknLCBgJHtwLmF1dGhvcn0gfCAke3ByZXR0eURhdGUocC5kYXRlKX1gKVxuICAgICAgICAgIF0pLFxuICAgICAgICAgIGgoJ3AnLCBwLmRlc2NyaXB0aW9uKVxuICAgICAgICBdKVxuXG4gICAgICBdKSkpXG4gICAgIClcbl0pXG59XG5cbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNQcm9wcyA9IGFzeW5jIChjdHg6YW55KSA9PntcbiAgbGV0IG5hbWUgPSBjdHgucGFyYW1zLmNvbGxlY3Rpb25cbiAgbGV0IGNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uc1tuYW1lIGFzIGtleW9mIHR5cGVvZiBjb2xsZWN0aW9uc11cbiAgaWYoIWNvbGxlY3Rpb24pIHJldHVybiB7cHJvcHM6e25vdEZvdW5kOiB0cnVlfX0gYXMgY29uc3RcblxuICBsZXQgcG9zdHMgPSBmcy5yZWFkZGlyU3luYygnLi9wYWdlcy9saWJyYXJ5JykubWFwKChmaWxlKT0+e1xuICAgIGlmKGZzLmxzdGF0U3luYyhwYXRoLmpvaW4oJy4vcGFnZXMvbGlicmFyeS8nLCBmaWxlKSkuaXNEaXJlY3RvcnkoKSkgcmV0dXJuXG4gICAgbGV0IGNvbnRlbnQgPSBmcy5yZWFkRmlsZVN5bmMoJy4vcGFnZXMvbGlicmFyeS8nK2ZpbGUpXG4gICAgbGV0IHtkYXRhfSA9IG1hdHRlcihjb250ZW50KVxuICAgIHJldHVybiB7Li4uZGF0YSwgcGF0aDogJy9saWJyYXJ5LycrZmlsZS5zbGljZSgwLCAtNCl9IGFzIExpYnJhcnlcbiAgfSkuZmlsdGVyKHA9PntcbiAgICByZXR1cm4gcD8udGFncz8uaW5jbHVkZXMobmFtZSlcbiAgfSlcblxuICByZXR1cm4ge3Byb3BzOiB7Y29sbGVjdGlvbiwgcG9zdHM6cG9zdHMgYXMgTGlicmFyeVtdLCBub3RGb3VuZDogZmFsc2V9fSBhcyBjb25zdFxufVxuXG5leHBvcnQgY29uc3QgZ2V0U3RhdGljUGF0aHMgPSBhc3luYyAoKSA9PiB7XG4gIGxldCBwYXRocyA9IE9iamVjdC5rZXlzKGNvbGxlY3Rpb25zKS5tYXAobmFtZT0+e1xuICAgIHJldHVybiB7XG4gICAgICBwYXJhbXM6IHtjb2xsZWN0aW9uOiBuYW1lfVxuICAgIH1cbiAgfSlcbiAgcmV0dXJuIHtwYXRocywgZmFsbGJhY2s6IGZhbHNlfVxufVxuXG4vLyBwaWxsIHRvIHRhZyBuZXcgcG9zdHMgLSBwdWJsaXNoZWQgaW4gdGhlIGxhc3QgNyBkYXlzXG5jb25zdCBOZXdQaWxsID0gc3R5bGVkKFBpbGwpYFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xuICAgIGNvbG9yOiB3aGl0ZTtcbmBcbiJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/library/collections/[collection].ts"],"names":["h","fs","path","matter","collections","ErrorPage","Box","FlexGrid","Card","Link","BackButton","Pill","WrappedLibraryCollectionsPage","props","notFound","LibraryCollections","collection","gap","width","href","title","description","min","mobileMin","posts","sort","a","b","Date","date","map","p","style","height","getTime","NewPill","getStaticProps","ctx","name","params","readdirSync","file","lstatSync","join","isDirectory","content","readFileSync","data","slice","filter","tags","includes","getStaticPaths","paths","Object","keys","fallback"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\nimport { InferGetStaticPropsType } from 'next'\nimport { Library, collections } from 'pages/library'\nimport ErrorPage from 'pages/404'\nimport { Box, FlexGrid } from 'components/Layout'\nimport { Card } from 'components/Cards'\nimport Link from 'next/link'\nimport { BackButton } from 'components/Button'\nimport styled from '@emotion/styled'\nimport { Pill } from 'components/Pill'\n\ntype Props = InferGetStaticPropsType<typeof getStaticProps>\n\nconst WrappedLibraryCollectionsPage = (props: Props)=>props.notFound ? h(ErrorPage) : h(LibraryCollections, props)\nexport default  WrappedLibraryCollectionsPage\nfunction LibraryCollections(props:Extract<Props, {notFound: false}>){\n  if(!props.collection) return h('div', '')\n  return h(Box, {gap: 64}, [\n    h(Box, {width: 640}, [\n      h(Box, {gap: 8},[\n        h(BackButton, {href: \"/library\"}, 'all Collections'),\n        h('h1', props.collection.title),\n      ]),\n      h('p.big', props.collection.description),\n    ]),\n    h(FlexGrid, {min:250, mobileMin: 250}, props.posts\n      .sort((a, b)=>{\n        return new Date(a.date) < new Date(b.date) ? 1 : -1\n      })\n      .map(p=>h(Link, {href:p.path}, h(Card, {style:{height:'min-content'}}, [\n        h(Box, {gap: 16},[\n          h(Box, {gap: 8}, [\n            h('h3', p.title),\n            new Date(p.date) > new Date((new Date()).getTime() - 60 * 60 * 24 * 7 * 1000) ? h(NewPill, \"new!\") : null,\n            // h('span.textSecondary', `${p.author} | ${prettyDate(p.date)}`)\n          ]),\n          h('p', p.description)\n        ])\n\n      ])))\n     )\n])\n}\n\nexport const getStaticProps = async (ctx:any) =>{\n  let name = ctx.params.collection\n  let collection = collections[name as keyof typeof collections]\n  if(!collection) return {props:{notFound: true}} as const\n\n  let posts = fs.readdirSync('./pages/library').map((file)=>{\n    if(fs.lstatSync(path.join('./pages/library/', file)).isDirectory()) return\n    let content = fs.readFileSync('./pages/library/'+file)\n    let {data} = matter(content)\n    return {...data, path: '/library/'+file.slice(0, -4)} as Library\n  }).filter(p=>{\n    return p?.tags?.includes(name)\n  })\n\n  return {props: {collection, posts:posts as Library[], notFound: false}} as const\n}\n\nexport const getStaticPaths = async () => {\n  let paths = Object.keys(collections).map(name=>{\n    return {\n      params: {collection: name}\n    }\n  })\n  return {paths, fallback: false}\n}\n\n// pill to tag new posts - published in the last 7 days\nconst NewPill = styled(Pill)`\n    background-color: green;\n    color: white;\n`\n"]},"metadata":{},"sourceType":"module"}