{"ast":null,"code":"import { callPaystackPop } from './paystack-actions';\nexport default function usePaystackPayment(options) {\n  const {\n    publicKey,\n    firstname,\n    lastname,\n    phone,\n    email,\n    amount,\n    reference,\n    metadata = {},\n    currency = 'NGN',\n    channels,\n    label = '',\n    plan = '',\n    quantity = '',\n    subaccount = '',\n    transaction_charge = 0,\n    bearer = 'account',\n    split,\n    split_code\n  } = options;\n\n  function initializePayment(callback, onClose) {\n    const paystackArgs = {\n      callback: callback ? callback : () => null,\n      onClose: onClose ? onClose : () => null,\n      key: publicKey,\n      ref: reference,\n      email,\n      firstname,\n      lastname,\n      phone,\n      amount,\n      currency,\n      plan,\n      quantity,\n      'data-custom-button': options['data-custom-button'] || '',\n      channels,\n      subaccount,\n      transaction_charge,\n      bearer,\n      label,\n      metadata,\n      split,\n      split_code\n    };\n    callPaystackPop(paystackArgs);\n  }\n\n  return initializePayment;\n}","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/src/paystack/use-paystack.ts"],"names":["callPaystackPop","usePaystackPayment","options","publicKey","firstname","lastname","phone","email","amount","reference","metadata","currency","channels","label","plan","quantity","subaccount","transaction_charge","bearer","split","split_code","initializePayment","callback","onClose","paystackArgs","key","ref"],"mappings":"AACA,SAAQA,eAAR,QAA8B,oBAA9B;AAEA,eAAe,SAASC,kBAAT,CACbC,OADa,EAEsC;AACnD,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,QAAQ,GAAG,EARP;AASJC,IAAAA,QAAQ,GAAG,KATP;AAUJC,IAAAA,QAVI;AAWJC,IAAAA,KAAK,GAAG,EAXJ;AAYJC,IAAAA,IAAI,GAAG,EAZH;AAaJC,IAAAA,QAAQ,GAAG,EAbP;AAcJC,IAAAA,UAAU,GAAG,EAdT;AAeJC,IAAAA,kBAAkB,GAAG,CAfjB;AAgBJC,IAAAA,MAAM,GAAG,SAhBL;AAiBJC,IAAAA,KAjBI;AAkBJC,IAAAA;AAlBI,MAmBFlB,OAnBJ;;AAqBA,WAASmB,iBAAT,CAA2BC,QAA3B,EAAgDC,OAAhD,EAA0E;AACtE,UAAMC,YAAiC,GAAG;AACxCF,MAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAc,MAAW,IADH;AAExCC,MAAAA,OAAO,EAAEA,OAAO,GAAGA,OAAH,GAAa,MAAW,IAFA;AAGxCE,MAAAA,GAAG,EAAEtB,SAHmC;AAIxCuB,MAAAA,GAAG,EAAEjB,SAJmC;AAKxCF,MAAAA,KALwC;AAMxCH,MAAAA,SANwC;AAOxCC,MAAAA,QAPwC;AAQxCC,MAAAA,KARwC;AASxCE,MAAAA,MATwC;AAUxCG,MAAAA,QAVwC;AAWxCG,MAAAA,IAXwC;AAYxCC,MAAAA,QAZwC;AAaxC,4BAAsBb,OAAO,CAAC,oBAAD,CAAP,IAAiC,EAbf;AAcxCU,MAAAA,QAdwC;AAexCI,MAAAA,UAfwC;AAgBxCC,MAAAA,kBAhBwC;AAiBxCC,MAAAA,MAjBwC;AAkBxCL,MAAAA,KAlBwC;AAmBxCH,MAAAA,QAnBwC;AAoBxCS,MAAAA,KApBwC;AAqBxCC,MAAAA;AArBwC,KAA1C;AAuBApB,IAAAA,eAAe,CAACwB,YAAD,CAAf;AACH;;AAED,SAAOH,iBAAP;AACD","sourcesContent":["import {PaystackProps} from './types';\nimport {callPaystackPop} from './paystack-actions';\n\nexport default function usePaystackPayment(\n  options: PaystackProps,\n): (callback?: Function, onClose?: Function) => void {\n  const {\n    publicKey,\n    firstname,\n    lastname,\n    phone,\n    email,\n    amount,\n    reference,\n    metadata = {},\n    currency = 'NGN',\n    channels,\n    label = '',\n    plan = '',\n    quantity = '',\n    subaccount = '',\n    transaction_charge = 0,\n    bearer = 'account',\n    split,\n    split_code,\n  } = options;\n\n  function initializePayment(callback?: Function, onClose?: Function): void {\n      const paystackArgs: Record<string, any> = {\n        callback: callback ? callback : (): any => null,\n        onClose: onClose ? onClose : (): any => null,\n        key: publicKey,\n        ref: reference,\n        email,\n        firstname,\n        lastname,\n        phone,\n        amount,\n        currency,\n        plan,\n        quantity,\n        'data-custom-button': options['data-custom-button'] || '',\n        channels,\n        subaccount,\n        transaction_charge,\n        bearer,\n        label,\n        metadata,\n        split,\n        split_code,\n      };\n      callPaystackPop(paystackArgs);\n  }\n\n  return initializePayment;\n}\n"]},"metadata":{},"sourceType":"module"}