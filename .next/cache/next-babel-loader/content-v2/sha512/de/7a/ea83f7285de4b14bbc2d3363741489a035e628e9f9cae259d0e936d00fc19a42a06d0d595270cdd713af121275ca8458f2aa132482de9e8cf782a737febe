{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport h from 'react-hyperscript';\nimport { useRouter } from 'next/router';\nimport { Error } from 'components/Form';\nimport Loader from 'components/Loader';\nimport { Box } from 'components/Layout';\nimport { useProfileData } from 'src/data';\nimport { colors } from 'components/Tokens';\nimport ErrorPage from 'pages/404';\nimport Text from 'components/Text';\nimport { profileDataQuery } from 'pages/api/people/[id]';\n\nconst ProfilePage = props => props.notFound ? h(ErrorPage) : h(Profile, props);\n\nexport default ProfilePage;\n\nconst Profile = props => {\n  var _link;\n\n  let router = useRouter();\n  let username = router.query.username;\n  let {\n    data: person\n  } = useProfileData(username, props || undefined);\n  if (person === undefined) return h(Loader);\n  if (person === false) return h(Error, 'No user found :(');\n  let link = person.link;\n  if (!((_link = link) !== null && _link !== void 0 && _link.startsWith('http'))) link = '//' + link;\n  return h(Box, {\n    gap: 32\n  }, [h(Box, {\n    gap: 8\n  }, [h('h1', [person.display_name || username]), h('div', [h('b', {\n    style: {\n      color: colors.textSecondary\n    }\n  }, `@${username}`), person.pronouns ? h('span.textSecondary', ` (${person.pronouns})`) : null]), !person.link ? null : h('a', {\n    href: link\n  }, h('b', person.link))]), !person.bio ? null : h(Box, {\n    width: 640\n  }, h(Text, {\n    source: person.bio\n  }))]);\n};\n\nexport const getStaticProps = async ctx => {\n  var _ctx$params;\n\n  let username = (_ctx$params = ctx.params) === null || _ctx$params === void 0 ? void 0 : _ctx$params.username;\n  let data = await profileDataQuery(username, false);\n  if (!data) return {\n    props: {\n      notFound: true\n    }\n  };\n  return {\n    props: _objectSpread({\n      notFound: false\n    }, data),\n    revalidate: 1\n  };\n};\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: true\n  };\n};","map":{"version":3,"sources":["/Users/ayooluwaalfonso/code/krakeneduapp/pages/people/[username].ts"],"names":["h","useRouter","Error","Loader","Box","useProfileData","colors","ErrorPage","Text","profileDataQuery","ProfilePage","props","notFound","Profile","router","username","query","data","person","undefined","link","startsWith","gap","display_name","style","color","textSecondary","pronouns","href","bio","width","source","getStaticProps","ctx","params","revalidate","getStaticPaths","paths","fallback"],"mappings":"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","sourcesContent":["import h from 'react-hyperscript'\nimport { useRouter } from 'next/router'\nimport { InferGetStaticPropsType } from 'next'\n\nimport { Error } from 'components/Form'\nimport Loader from 'components/Loader'\nimport { Box } from 'components/Layout'\n\nimport { useProfileData } from 'src/data'\nimport { colors } from 'components/Tokens'\nimport ErrorPage from 'pages/404'\nimport Text from 'components/Text'\nimport { profileDataQuery } from 'pages/api/people/[id]'\n\ntype Props = InferGetStaticPropsType<typeof getStaticProps>\n\nconst ProfilePage = (props: Props)=> props.notFound ? h(ErrorPage) : h(Profile, props)\nexport default ProfilePage\n\nconst Profile= (props: Extract<Props, {notFound: false}>)=>{\n  let router = useRouter()\n  let username = router.query.username as string\n  let {data: person} = useProfileData(username, props || undefined)\n  if(person === undefined) return h(Loader)\n  if(person === false) return h(Error, 'No user found :(')\n\n  let link = person.link\n  if(!link?.startsWith('http')) link = '//'+link\n\n  return h(Box, {gap: 32}, [\n    h(Box, {gap: 8}, [\n      h('h1', [\n        person.display_name || username,\n      ]),\n      h('div', [\n        h('b', {style: {color: colors.textSecondary}}, `@${username}`),\n        person.pronouns ? h('span.textSecondary', ` (${person.pronouns})`) : null\n      ]),\n      !person.link ? null : h('a', {href: link}, h('b', person.link)),\n    ]),\n    !person.bio ? null : h(Box, {width: 640}, h(Text, {source: person.bio}))\n  ])\n}\n\nexport const getStaticProps = async (ctx:any)=>{\n  let username = ctx.params?.username as string\n  let data = await profileDataQuery(username, false)\n\n  if(!data) return {props: {notFound: true}} as const\n\n  return {props: {notFound: false, ...data}, revalidate:1} as const\n}\n\nexport const getStaticPaths = async ()=>{\n  return {paths:[], fallback: true}\n}\n"]},"metadata":{},"sourceType":"module"}