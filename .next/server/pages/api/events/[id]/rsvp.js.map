{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/apiHelpers.ts","webpack:///external \"ical.js\"","webpack:///external \"@prisma/client\"","webpack:///./lib/prisma.ts","webpack:///./src/calendar.ts","webpack:///./emails/index.ts","webpack:///external \"@sentry/node\"","webpack:///external \"swr\"","webpack:///external \"react\"","webpack:///./pages/api/events//rsvp.ts","webpack:///external \"postmark\"","webpack:///./src/token.ts","webpack:///external \"cookie\"","webpack:///external \"stripe\"","webpack:///./src/stripe.ts"],"names":["APIHandler","handler","process","env","NEXT_PUBLIC_SENTRY_DSN","Sentry","dsn","req","res","result","method","methodHandler","status","end","e","contexts","headers","console","log","header","Object","keys","setHeader","send","json","multiRouteHandler","query","handlers","route","callApi","endpoint","msg","fetch","body","JSON","stringify","get","includes","text","useApi","deps","successCallback","state","setState","useState","useEffect","call","path","useApiData","initialData","useSWR","globalAny","global","prisma","APP_ENV","PrismaClient","createEventInvite","props","calendar","ICAL","Component","updatePropertyWithValue","vevent","calEvent","Event","uid","id","description","summary","location","startDate","Time","fromJSDate","Date","start_date","endDate","end_date","addSubcomponent","client","postmark","POSTMARK_TOKEN","sendResetPasswordEmail","sendEmail","resetPasswordMetadata","sendVerificationEmail","verifiyEmailMetadata","sendCohortEnrollmentEmail","cohortEnrollmentMetadata","sendEventRSVPEmail","eventRSVPMetadata","sendEventRSVPNoAccountEmail","eventRSVPNoAccountMetadata","sendEventUpdateNoAccountEmail","sendBatchEmail","eventUpdateNoAccount","sendInviteToCourseEmail","inviteToCourseMetadata","sendEnrollNotificationEmaill","enrollNotificationMetada","sendWatchingNotificationEmail","watchingNotificationMetadata","sendUnenrollEmail","unenrollMetadata","meta","email","vars","data","NODE_ENVIRONMENT","sendEmailWithTemplate","From","To","TemplateAlias","Alias","TemplateModel","error","msgs","sendEmailBatchWithTemplates","filter","x","undefined","map","MessageStream","POSTEventRSVP","user","getToken","eventId","parseInt","Number","isNaN","event","standalone_events","findUnique","where","select","cost","max_attendees","events","name","people_in_events","no_account_rsvps","length","find","enrolled","Content","Buffer","from","toString","Promise","all","event_page_url","window","origin","event_name","Attachments","Name","ContentType","ContentID","create","connect","person","display_name","username","people","metadata","type","userId","URL","referer","session","stripe","checkout","sessions","payment_method_types","payment_intent_data","transfer_group","line_items","amount","currency","quantity","cancel_url","success_url","sessionId","setTokenHeader","token","cookie","serialize","expires","now","httpOnly","sameSite","cookies","loginToken","parse","removeToken","Stripe","STRIPE_SECRET","apiVersion"],"mappings":"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","file":"pages/api/events/[id]/rsvp.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","import { NextApiRequest, NextApiResponse} from 'next'\nimport * as Sentry from '@sentry/node'\nimport { useState, useEffect} from 'react'\nimport useSWR from 'swr'\n\nexport type ResultType<T extends (...args:any)=> any> = PromiseReturn<ReturnType<T>>\nexport type Request = NextApiRequest\nexport type Success<T extends Result> = Extract<T, {status: 200}>['result']\nexport type Errors<T extends Result> = Exclude<T, {status: 200}>\n\ntype Handler = (req:Request) => Promise<Result>\ntype PromiseReturn<T> = T extends PromiseLike<infer U> ? U : T\n\ntype Result = {\n  status: number,\n  result: string | object | null | boolean\n  headers?: {\n    [key: string]: string | number | string[]\n  }\n}\n\ntype Methods = \"POST\" | \"GET\" | \"PUT\" | \"DELETE\"\n\nexport const APIHandler = (handler: Handler | Partial<{POST: Handler, GET: Handler, PUT: Handler, DELETE: Handler}>) => {\n  if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n    Sentry.init({ dsn: process.env.NEXT_PUBLIC_SENTRY_DSN});\n  }\n  return async (req:NextApiRequest, res: NextApiResponse) => {\n    let result\n    try {\n      if(typeof handler === 'object') {\n        let method = req.method as Methods\n        let methodHandler = handler[method]\n        if(!methodHandler) {\n          res.status(404).end()\n          return\n        }\n        result = await methodHandler(req)\n      }\n      else {\n        result = await handler(req)\n      }\n    }\n    catch(e) {\n      if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n        Sentry.captureException(e, {contexts: {headers: req.headers}})\n        await Sentry.flush(2000)\n      }\n      console.log(e)\n      return res.status(500).end()\n    }\n\n    if(result.headers) {\n      for(let header of Object.keys(result.headers)) {\n        res.setHeader(header, result.headers[header])\n      }\n    }\n    if(result.status!==200) console.log(result.result)\n    if(typeof result.result !== 'object') return res.status(result.status).send(result.result)\n    return res.status(result.status).json(result.result)\n  }\n}\n\nexport const multiRouteHandler = (query:string, handlers:{[key:string]: Handler}) => {\n  return APIHandler(async (req) => {\n    let route = (typeof req.query[query] === 'string')\n                 ? req.query[query] as string\n                 : req.query[query][0]\n    return handlers[route](req)\n  })\n}\n\nexport async function callApi<Msg extends object | string | null, R extends Omit<Result, 'headers'>> (endpoint:string, msg?: Msg, method?: Methods){\n    let result = await fetch(endpoint, {\n      method: method ? method : msg ? \"POST\" : \"GET\",\n      headers: {\n        'Content-type': (typeof msg === 'object') ? 'application/json' : 'text/html'\n      },\n      body: (typeof msg === 'string') ? msg : JSON.stringify(msg)\n    })\n\n    return {\n      status: result.status,\n      result: result.headers.get('Content-type')?.includes('application/json')\n        ? await result.json()\n        : await result.text()\n    } as R\n}\n\nexport type Status = 'normal' | 'error' | 'loading' | 'success'\nexport function useApi<Msg extends object | string | null, R extends Omit<Result, 'headers'>>(deps: any[], successCallback?: (result: Extract<R, {status:200}>['result'])=> any) {\n  let [state, setState] = useState<Status>('normal')\n  useEffect(()=> setState('normal'), deps)\n  let call= async (path: string, msg?: Msg, method?: Methods) => {\n    setState('loading')\n    let res = await callApi<Msg, R>(path, msg, method)\n    if(res.status === 200) {\n      if(successCallback) await successCallback(res.result)\n      setState('success')\n    }\n    else setState('error')\n    return res\n  }\n  return [state, call, setState] as const\n}\n\nexport function useApiData<R extends Omit<Result, 'headers'>>(path?: string, initialData?:R) {\n  return useSWR<Success<R>, Errors<R>>(path ? path : null, async (path)=>{\n    let res = await callApi<null, R>(path)\n    if(res.status = 200) return res.result\n    return res\n  }, {initialData})\n}\n","module.exports = require(\"ical.js\");","module.exports = require(\"@prisma/client\");","const globalAny:any = global;\nimport { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\nif (process.env.APP_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!globalAny.prisma) {\n    globalAny.prisma = new PrismaClient();\n  }\n  prisma = globalAny.prisma;\n}\n\nexport default prisma;","import ICAL from 'ical.js'\nexport const createEventInvite = (props:{\n  id:number | string,\n  description: string,\n  summary: string,\n  start_date: string,\n  location: string,\n  end_date: string,\n})=> {\n\n  let calendar = new ICAL.Component(['vcalendar',[],[]])\n  calendar.updatePropertyWithValue('version', '2.0');\n  calendar.updatePropertyWithValue('prodid', 'app.krakenedu.com');\n  calendar.updatePropertyWithValue('method', \"REQUEST\")\n  calendar.updatePropertyWithValue('name', 'KrakenEdu Calendar')\n  calendar.updatePropertyWithValue('x-wr-calname', 'KrakenEdu Calendar')\n\n  let vevent = new ICAL.Component('vevent')\n  let calEvent = new ICAL.Event(vevent)\n  calEvent.uid = 'krakenedu-'+props.id\n  calEvent.description = props.description\n  calEvent.summary = props.summary\n  calEvent.location = props.location\n  calEvent.startDate = ICAL.Time.fromJSDate(new Date(props.start_date), true)\n  calEvent.endDate = ICAL.Time.fromJSDate(new Date(props.end_date), true)\n\n  calendar.addSubcomponent(vevent)\n  return calendar\n}\n","import * as postmark from 'postmark'\nimport cohortEnrollmentMetadata from './templates/cohort-enrollment/meta.json'\nimport verifiyEmailMetadata from './templates/welcome/meta.json'\nimport resetPasswordMetadata from './templates/password-reset/meta.json'\nimport inviteToCourseMetadata from './templates/invite-to-course/meta.json'\nimport enrollNotificationMetada from './templates/enroll-notification/meta.json'\nimport unenrollMetadata from './templates/cohort-unenroll/meta.json'\nimport watchingNotificationMetadata from './templates/watching-notification/meta.json'\nimport eventRSVPMetadata from './templates/event-rsvp/meta.json'\nimport eventRSVPNoAccountMetadata from './templates/event-rsvp-no-account/meta.json'\nimport eventUpdateNoAccount from './templates/event-update-no-account/meta.json'\n\nimport { Hash } from 'postmark/dist/client/models/client/SupportingTypes'\n\nvar client = new postmark.ServerClient(process.env.POSTMARK_TOKEN || '');\n\nexport const sendResetPasswordEmail = sendEmail(resetPasswordMetadata)\nexport const sendVerificationEmail = sendEmail(verifiyEmailMetadata)\nexport const sendCohortEnrollmentEmail = sendEmail(cohortEnrollmentMetadata)\nexport const sendEventRSVPEmail = sendEmail(eventRSVPMetadata)\nexport const sendEventRSVPNoAccountEmail = sendEmail(eventRSVPNoAccountMetadata)\nexport const sendEventUpdateNoAccountEmail = sendBatchEmail(eventUpdateNoAccount)\nexport const sendInviteToCourseEmail = sendEmail(inviteToCourseMetadata)\nexport const sendEnrollNotificationEmaill = sendEmail(enrollNotificationMetada)\nexport const sendWatchingNotificationEmail = sendBatchEmail(watchingNotificationMetadata)\nexport const sendUnenrollEmail = sendEmail(unenrollMetadata)\n\ntype EmailMetadata = {\n  Alias: string,\n  TestRenderModel: object\n}\nexport function sendEmail<T extends EmailMetadata>(meta:T) {\n  return async function(\n    email: string,\n    vars?: T[\"TestRenderModel\"], data?: Partial<{Metadata?:Hash<string>, Attachments: Array<{Name: string, Content: string, ContentType: string, ContentID: string | null}>}>) {\n    if(process.env.NODE_ENVIRONMENT === 'production') {\n      try {\n          return client.sendEmailWithTemplate({\n                  From: `wecare@krakenedu.com`,\n                  To: email,\n                  TemplateAlias: meta.Alias,\n                  TemplateModel: vars,\n                  ...data\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n}\nexport function sendBatchEmail<T extends EmailMetadata>(meta:T) {\n  return (msgs:Array<{email: string, vars: T[\"TestRenderModel\"],data?: Partial<{Metadata?:Hash<string>, Attachments: Array<{Name: string, Content: string, ContentType: string, ContentID: string | null}>}>} | undefined>) => {\n    if(process.env.NODE_ENVIRONMENT === 'production') return client.sendEmailBatchWithTemplates(msgs.filter(x=>x!== undefined).map(msg=>{\n      return {\n         From: `wecare@krakenedu.com`,\n        To: msg?.email || '',\n        TemplateAlias: meta.Alias,\n        TemplateModel: msg?.vars || {},\n        MessageStream: \"notifications\",\n        ...msg?.data\n      }\n    }))\n  }\n}\n","module.exports = require(\"@sentry/node\");","module.exports = require(\"swr\");","module.exports = require(\"react\");","import { sendEventRSVPEmail, sendEventRSVPNoAccountEmail } from 'emails'\nimport { APIHandler, Request, ResultType } from \"src/apiHelpers\"\nimport { stripe, StripePaymentMetaData } from 'src/stripe'\nimport { getToken } from \"src/token\"\nimport { createEventInvite } from 'src/calendar'\nimport prisma from \"lib/prisma\";\n\nexport default APIHandler(POSTEventRSVP)\n\nexport type EventRSVPMessage = {\n  email: string,\n  name: string\n} | null\n\nexport type EventRSVPResult = ResultType<typeof POSTEventRSVP>\nasync function POSTEventRSVP(req:Request){\n  let user = getToken(req)\n  let msg  = req.body as EventRSVPMessage\n\n  let eventId = parseInt(req.query.id as string)\n  if(Number.isNaN(eventId)) return {status: 400, result: \"ERROR: event id is not a number\"} as const\n  let event = await prisma.standalone_events.findUnique({where:{event: eventId}, select:{\n    cost: true,\n    max_attendees: true,\n    events:{\n      select:{\n        name: true,\n        description: true,\n        id: true,\n        location: true,\n        start_date: true,\n        end_date: true,\n        people_in_events: true,\n        no_account_rsvps: true\n      }\n    }\n  }})\n  if(!event) return {status:404, result: \"ERROR: no event found\"} as const\n  if(event.max_attendees\n    && (event.events.people_in_events.length + event.events.no_account_rsvps.length) >= event.max_attendees) {\n    return {status: 400, result: \"ERROR: event is full\"} as const\n  }\n\n  if(!user) {\n    if(!msg?.email || !msg?.name) return {status:400, result:\"ERROR: no user logged in\"} as const\n    if(event.cost !== 0) return {status: 401, result: \"ERROR: must be logged in to RSVP to paid event\"} as const\n    if(event.events.no_account_rsvps.find(x=>x.email=== msg?.email)) {\n      return {status: 200, result: {enrolled: true}} as const\n    }\n\n    let Content = Buffer.from(createEventInvite({\n      id: event.events.id,\n      description: event.events.description,\n      start_date: event.events.start_date,\n      end_date: event.events.end_date,\n      summary: event.events.name,\n      location: event.events.location\n    }).toString()).toString('base64')\n\n    await Promise.all([\n      sendEventRSVPNoAccountEmail(msg.email, {\n        name: msg.name,\n        event_page_url: `https://${window.location.origin}/events/${event.events.id}`,\n        event_name: event.events.name\n      }, {Attachments: [\n        {Name: \"event.ics\", ContentType: \"text/calender\", ContentID: null, Content}\n      ]}),\n      prisma.no_account_rsvps.create({\n       data: {\n          events: {connect:{id: event.events.id}},\n          email: msg.email,\n          name: msg.name\n        }\n      })\n    ])\n\n    return {status: 200, result: {enrolled: true}} as const\n  }\n\n  if(event.events.people_in_events.find(x=>x.person === user?.id)) {\n    return {status:400, result: \"ERROR: user is already enrolled\"} as const\n  }\n\n  if(event.cost == 0) {\n    await Promise.all([\n      sendEventRSVPEmail(user.email, {\n        name: user.display_name || user.username,\n        event_page_url: `https://${window.location.origin}/events/${event.events.id}`,\n        event_name: event.events.name\n      }),\n      prisma.people_in_events.create({\n        data: {\n          events: {connect:{id: event.events.id}},\n          people: {connect:{id: user.id}}\n        }\n      })\n    ])\n    return {status: 200, result: {enrolled: true}} as const\n  }\n\n  let metadata: StripePaymentMetaData = {\n    type: 'event',\n    eventId: eventId.toString(),\n    userId: user.id,\n  }\n\n\n  let origin = (new URL(req.headers.referer || '')).origin\n  let session = await stripe.checkout.sessions.create({\n    metadata,\n    payment_method_types: ['card'],\n    payment_intent_data: {\n      transfer_group: 'event-'+eventId.toString()\n    },\n    line_items: [{\n      name: event.events.name,\n      amount: event.cost * 100,\n      currency: \"usd\",\n      quantity: 1\n    }],\n    cancel_url: `${origin}/events/${eventId}`,\n    success_url: `${origin}/events/${eventId}/?success`,\n  })\n\n  return {\n    status: 200,\n    result: {sessionId: session.id}\n  } as const\n\n\n}\n","module.exports = require(\"postmark\");","import { ServerResponse, IncomingMessage } from \"http\";\nimport cookie from 'cookie'\n\nexport type Token = {\n  email: string,\n  id: string,\n  username: string,\n  display_name?: string | null,\n  link?: string | null\n  bio?: string | null\n  admin?: boolean\n}\n\nexport function setTokenHeader(token:Token)  {\n  return {\n    'Set-Cookie':cookie.serialize('loginToken', JSON.stringify(token), {\n      path: '/',\n      expires: new Date(Date.now() + 1000 * 60 * 60 * 24 * 30), // 30 days\n      httpOnly: true,\n      sameSite: \"lax\"\n    })\n  }\n}\n\nexport function getToken(req:IncomingMessage) {\n  const cookies = req.headers.cookie\n  if (!cookies) return;\n\n  const { loginToken } = cookie.parse(cookies);\n  if(loginToken) return JSON.parse(loginToken) as Token;\n  return\n}\n\nexport function removeToken(res:ServerResponse) {\n  res.setHeader(\n      'Set-Cookie',\n      cookie.serialize('loginToken', '', {\n        path: '/',\n        expires: new Date(Date.now() - 1000),\n        httpOnly: false\n      })\n    );\n}\n","module.exports = require(\"cookie\");","module.exports = require(\"stripe\");","import Stripe from 'stripe'\nexport type StripePaymentMetaData = {\n  type: 'cohort'\n  cohortId:string,\n  userId:string,\n  discount: string | null\n} | {\n  type: 'event',\n  eventId: string,\n  userId: string\n}\n\nexport const stripe = new Stripe(process.env.STRIPE_SECRET || '', {apiVersion:'2020-08-27'});\n"],"sourceRoot":""}