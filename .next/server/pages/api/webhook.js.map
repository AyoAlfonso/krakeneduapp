{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/discourse.ts","webpack:///external \"@prisma/client\"","webpack:///./lib/prisma.ts","webpack:///external \"@stripe/stripe-js/pure\"","webpack:///external \"querystring\"","webpack:///./pages/api/webhook.ts","webpack:///external \"crypto\"","webpack:///./emails/index.ts","webpack:///./src/utils.ts","webpack:///./src/constants.ts","webpack:///external \"postmark\"","webpack:///external \"stripe\""],"names":["headers","process","env","DISCOURSE_API_KEY","DISCOURSE_API_USERNAME","fetchWithBackoff","url","options","exponent","result","fetch","status","value","Promise","resolve","backoff","Math","min","floor","random","setTimeout","createGroup","group","console","log","owner_usernames","join","DISCOURSE_URL","method","body","JSON","stringify","text","json","updateTopic","topic","input","username","tags","title","topicData","postID","post_stream","posts","id","post","raw","post_ids","createTopic","asUser","createCategory","name","color","text_color","category","updateGroup","prisma","discourse_groups","update","where","data","updateCategory","getCategory","path","res","getUsername","userId","user","getGroupId","groupName","undefined","addMember","groupId","usernames","getTaggedPost","c","tag","topic_list","topics","topicID","find","includes","topicRequest","makeSSOPayload","params","payload","Buffer","from","querystring","toString","sig","crypto","createHmac","DISCOURSE_SECRET","sso","digest","syncSSO","createPost","globalAny","global","APP_ENV","PrismaClient","stripe","Stripe","STRIPE_SECRET","apiVersion","config","api","bodyParser","req","send","event","chunks","on","chunk","push","concat","webhooks","constructEvent","STRIPE_WEBHOOK","err","message","type","metadata","amount_total","payment_intent","customer","object","cohortId","parseInt","person","people","findUnique","cohort","discount","all","course_cohorts","include","cohort_facilitators","select","email","courses","course_groupTodiscourse_groups","category_id","slug","people_in_cohorts","course_discounts","code","length","gettingStarted","stripe_customer_id","redeems","increment","create","amount_paid","connect","sendCohortEnrollmentEmail","display_name","course_start_date","prettyDate","start_date","course_name","cohort_page_url","window","location","origin","course","cohort_forum_url","get_started_topic_url","map","f","sendEnrollNotificationEmaill","learner","eventId","standalone_events","events","sendEventRSVPEmail","event_page_url","event_name","people_in_events","details_submitted","payouts_enabled","stripe_connected_accounts","stripe_account","connected","end","client","postmark","POSTMARK_TOKEN","sendResetPasswordEmail","sendEmail","resetPasswordMetadata","sendVerificationEmail","verifiyEmailMetadata","cohortEnrollmentMetadata","eventRSVPMetadata","sendEventRSVPNoAccountEmail","eventRSVPNoAccountMetadata","sendEventUpdateNoAccountEmail","sendBatchEmail","eventUpdateNoAccount","sendInviteToCourseEmail","inviteToCourseMetadata","enrollNotificationMetada","sendWatchingNotificationEmail","watchingNotificationMetadata","sendUnenrollEmail","unenrollMetadata","meta","vars","NODE_ENVIRONMENT","sendEmailWithTemplate","From","To","TemplateAlias","Alias","TemplateModel","error","msgs","sendEmailBatchWithTemplates","filter","x","msg","MessageStream","str","date","Date","today","getDate","getMonth","getFullYear","toLocaleDateString","month","day","year","dateFromDateAndTimeInputs","time","dateParts","split","timeParts","slugify","specials","trim","replace","toLowerCase","usernameValidate","s","test","getTimeBetween","d1","d2","getTime","toFixed","stripePromise","getStripe","loadStripe","sortByDateAndName","a","b","cohortName","isNaN","formHelper","state","setState","Object","keys","reduce","acc","key","onChange","e","currentTarget"],"mappings":"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","file":"pages/api/webhook.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","import crypto from 'crypto'\nimport querystring from 'querystring'\nimport {DISCOURSE_URL} from 'src/constants'\nimport prisma from \"lib/prisma\";\nlet headers = {\n      \"Api-Key\": process.env.DISCOURSE_API_KEY || '',\n      \"Api-Username\": process.env.DISCOURSE_API_USERNAME || '',\n    }\n\nlet fetchWithBackoff = async (url: Parameters<typeof fetch>[0], options:Parameters<typeof fetch>[1], exponent: number = 1):ReturnType<typeof fetch> => {\n  let result = await fetch(url, options)\n  if(result.status === 429) {\n    let value = 1000 * (2**exponent)\n    await new Promise<void>((resolve)=>{\n      let backoff = Math.min(value + Math.floor(Math.random()*value), 64000)\n      setTimeout(()=>resolve(), backoff)\n    })\n    return fetchWithBackoff(url, options, exponent+1)\n  }\n  return result\n}\n\nexport type Category = {\n  topic_list: {\n    topics: Array<{\n      category_id: number\n      id: string\n      pinned: boolean\n      tags: string[]\n    }>\n  }\n}\n\nexport async function createGroup(group:{\n  name: string,\n  visibility_level: number,\n  owner_usernames: string | string[],\n  mentionable_level?: number,\n  messageable_level?: number\n}) {\n  console.log(group, \"grouphere\")\n  if(typeof group.owner_usernames !== 'string') group.owner_usernames = group.owner_usernames.join(',')\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/admin/groups`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({group})\n  })\n\n   console.log(result, \"grouphereafter\")\n\n  if(result.status !== 200) {\n    console.log(await result.text())\n    return false\n  }\n  return await result.json() as {basic_group: {id: number}}\n}\n\nexport async function updateTopic(topic:string, input: {category_id: number, title: string, raw: string, tags: string[]}, username?: string) {\n  await fetch (`${DISCOURSE_URL}${topic}`, {\n    method: \"PUT\",\n    headers:{\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({\n      tags: input.tags,\n      title: input.title\n    })\n  })\n\n  // Update the content\n  let topicData = await (await fetchWithBackoff(`${DISCOURSE_URL}${topic}.json`, {headers})).json()\n  let postID = topicData.post_stream.posts[0].id\n  await fetch (`${DISCOURSE_URL}/posts/${postID}`, {\n    method: \"PUT\",\n    headers:{\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({\n      post: {\n        raw: input.raw\n      }\n    })\n  })\n\n  // Update the owner\n  if(username) await fetchWithBackoff(`${DISCOURSE_URL}/t/${topicData.id}/change-owner`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({post_ids: [postID], username})\n  })\n}\n\nexport async function createTopic(input:{title: string, category: number | string, raw: string, tags?: string[]}, asUser?: string) {\n  console.log(asUser, \"asUser\")\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/posts.json`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers,\n      \"Api-Username\": headers[\"Api-Username\"]\n    },\n    body: JSON.stringify(input)\n  })\n  if(result.status !== 200) {\n    console.log(await result.text())\n  }\n  if(result.status === 200)  return await result.json() as {id: string, topic_id: number}\n}\n\nexport const createCategory = async (name: string, options?: {\n  slug?: string,\n  permissions?: {[key:string]:number},\n  parent_category_id?: number,\n  show_subcategory_list?: boolean,\n  subcategory_list_style?: \"rows_with_featured_topics\",\n  default_list_filter?:\"none\"\n}) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/categories.json`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({name, color: '0088CC', text_color: 'FFFFFF', ...options})\n  })\n  if(result.status === 200) return (await result.json()).category as {id: number, topic_url: string}\n  console.log(await result.text())\n  return false as const\n}\n\nexport async function updateGroup(id: number, name: string) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/g/${id}.json`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({name})\n  })\n  if(result.status !== 200) console.log(await result.text())\n  else {\n    \n    await prisma.discourse_groups.update({where:{id}, data:{name}})\n    return true\n  }\n}\n\nexport async function updateCategory (id: string | number, options: {permissions?: {[key:string]: number}, name: string, slug?: string}) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/categories/${id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({...options, color: '0088CC', text_color: 'FFFFFF'})\n  })\n  if(result.status !== 200) console.log(await result.text())\n  else return true\n}\nexport async function getCategory(path: string | number){\n  let res = await fetchWithBackoff(`${DISCOURSE_URL}/c/${path}.json`, {\n    method: 'GET',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n  })\n  if(res.status === 200){\n    let category = await res.json() as Category\n    return category\n  }\n  else console.log(await res.text())\n}\n\nexport const getUsername = async (userId:string):Promise<string | undefined> => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/u/by-external/${userId}.json`, {\n    method: \"GET\",\n    headers\n  })\n\n  if(result.status === 200) {\n    return (await result.json()).user.username as string\n  }\n  else return\n}\n\nexport const getGroupId = async (groupName:string) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/groups/${groupName}.json`, {\n    method: \"GET\",\n    headers\n  })\n  if(result.status === 200) return (await result.json()).group.id\n  return undefined\n}\n\nexport const addMember = async (groupId:number, username: string) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/groups/${groupId}/members.json`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({\n      usernames: username\n    })\n  })\n  return result.status  === 200\n}\n\nexport const getTaggedPost = async (c: string | number, tag: string) => {\n\n\n  let res = await fetchWithBackoff(`${DISCOURSE_URL}/c/${c}.json`, {\n    method: 'GET',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n  })\n\n  if(res.status !== 200) console.log(await res.text())\n  let category = await res.json() as Category\n  console.log(category.topic_list.topics, tag , \"category\")\n  let topicID = category.topic_list.topics.find((topic) => topic.tags && topic.tags.includes(tag))?.id\n  if(!topicID) return {text: '', id: ''}\n  let topicRequest = await fetchWithBackoff(`${DISCOURSE_URL}/raw/${topicID}`, {headers})\n  return {text: await topicRequest.text(), id: topicID}\n}\n\nexport const makeSSOPayload = (params: {[key:string]: string}) => {\n  let payload = (Buffer.from(querystring.stringify(params))).toString('base64')\n  const sig = crypto.createHmac('sha256', process.env.DISCOURSE_SECRET || '');\n  sig.update(payload)\n\n  let result = querystring.stringify({\n    sso:payload,\n    sig: sig.digest('hex')\n  })\n  return result\n}\n\nexport const syncSSO = async (params: {[key:string]: string})=>{\n  let payload = (Buffer.from(querystring.stringify(params))).toString('base64')\n  const sig = crypto.createHmac('sha256', process.env.DISCOURSE_SECRET || '');\n\n  sig.update(payload)\n  return fetchWithBackoff(`${DISCOURSE_URL}/admin/users/sync_sso`, {\n    method: \"POST\",\n    headers: {\n      \"Api-Key\": process.env.DISCOURSE_API_KEY || '',\n      \"Api-Username\": 'system',\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({\n      sso: payload,\n      sig: sig.digest('hex')\n    })\n  })\n}\n\nexport async function createPost(params:{topic_id: number,raw:string}) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/posts.json`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers,\n      \"Api-Username\":'system'\n    },\n    body: JSON.stringify(params)\n  })\n  console.log(result)\n}\n","module.exports = require(\"@prisma/client\");","const globalAny:any = global;\nimport { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\nif (process.env.APP_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!globalAny.prisma) {\n    globalAny.prisma = new PrismaClient();\n  }\n  prisma = globalAny.prisma;\n}\n\nexport default prisma;","module.exports = require(\"@stripe/stripe-js/pure\");","module.exports = require(\"querystring\");","import { NextApiRequest, NextApiResponse} from 'next'\nimport Stripe from 'stripe'\nimport { getUsername, addMember, getTaggedPost, } from 'src/discourse'\nimport {DISCOURSE_URL} from 'src/constants'\nimport { sendCohortEnrollmentEmail, sendEnrollNotificationEmaill, sendEventRSVPEmail } from 'emails';\nimport { prettyDate } from '../../src/utils';\nimport { StripePaymentMetaData } from 'src/stripe';\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET || '', {apiVersion:'2020-08-27'});\n\nimport prisma from \"lib/prisma\";\n\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\n\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n  const sig = req.headers['stripe-signature'];\n  if(!sig) return res.status(400).send(`Webhook Error: No signature!`);\n  let event\n  try {\n    let body:string = await new Promise(resolve => {\n      let chunks: Uint8Array[] = []\n      req.on('data', (chunk) => {\n        chunks.push(chunk);\n      }).on('end', () => {\n        resolve(Buffer.concat(chunks).toString());\n      });\n    })\n    event = stripe.webhooks.constructEvent(body, sig, process.env.STRIPE_WEBHOOK as string);\n  } catch (err) {\n    return res.status(400).send(`Webhook Error: ${err.message}`);\n  }\n\n  // Handle the checkout.session.completed event\n  if (event.type === 'checkout.session.completed') {\n\n    const {metadata, amount_total, payment_intent, customer} = event.data.object as Stripe.Checkout.Session & {metadata: StripePaymentMetaData};\n    if(!amount_total ||!payment_intent || !customer ||\n      typeof payment_intent !== 'string' ||typeof customer !== 'string') return {status: 400, result: \"ERROR: missing expected parameters, amount_total, payment_intent, or customer\"}\n\n    switch(metadata.type) {\n        case 'cohort': {\n          let cohortId = parseInt(metadata.cohortId)\n          let person = await prisma.people.findUnique({where: {id: metadata.userId}})\n          if(!person) return {status: 400, result: \"ERROR: cannot find user with id: \" + metadata.userId} as const\n\n          let [cohort, discount] = await Promise.all([\n            prisma.course_cohorts.findUnique({\n              where: {id: cohortId},\n              include: {\n                discourse_groups: true,\n                cohort_facilitators: {select:{people:{select:{email:true}}}},\n                courses: {\n                  select: {\n                    course_groupTodiscourse_groups: true,\n                    category_id: true,\n                    slug: true,\n                    name: true\n                  }\n                },\n                people_in_cohorts: {\n                  where: {\n                    person: person.id\n                  }\n                }\n              }\n            }),\n            metadata.discount ? prisma.course_discounts.findUnique({where:{code:metadata.discount}}) : null\n          ])\n\n          if(!cohort) return {status: 400, result: \"ERROR: no cohort with id: \" + metadata.cohortId}\n          if(cohort.people_in_cohorts.length > 0) return {status:200, result: \"User is already enrolled\"}\n\n          let username = await getUsername(metadata.userId)\n\n          if(!username) return res.status(400).send('ERROR: Cannot find user: ' + metadata.userId)\n\n          let gettingStarted = await getTaggedPost(cohort.category_id, 'getting-started')\n\n          await Promise.all([\n            !person.stripe_customer_id ? prisma.people.update({where:{id: person.id}, data:{stripe_customer_id: customer}}) : null,\n            discount ? prisma.course_discounts.update({\n              where: {code: discount.code},\n              data: {\n                redeems: {\n                  increment: 1\n                }\n              }}) : null,\n            prisma.people_in_cohorts.create({data: {\n              payment_intent,\n              amount_paid: amount_total/100,\n              people: {connect: {id: metadata.userId}},\n              course_cohorts: {connect: {id: cohortId}},\n              course_discounts: discount ? {connect:{code: discount.code}} : undefined\n            }}),\n\n            addMember(cohort.discourse_groups.id, username),\n            addMember(cohort.courses.course_groupTodiscourse_groups.id, username),\n            sendCohortEnrollmentEmail(person.email, {\n              name: person.display_name || person.username,\n              course_start_date: prettyDate(cohort.start_date),\n              course_name: cohort.courses.name,\n              cohort_page_url: `https://${window.location.origin}/courses/${cohort.courses.slug}/${cohort.course}/cohorts/${cohort.id}`,\n              cohort_forum_url: `${DISCOURSE_URL}/session/sso?return_path=/c/${cohort.category_id}`,\n              get_started_topic_url: `${DISCOURSE_URL}/t/${gettingStarted.id}`\n            }),\n            Promise.all([cohort.cohort_facilitators.map(async (f) => person && cohort && sendEnrollNotificationEmaill(f.people.email, {\n              learner: person.display_name || person.username,\n              course: cohort.courses.name,\n              cohort_page_url: `https://${window.location.origin}/courses/${cohort.courses.slug}/${cohort.course}/cohorts/${cohort.id}`,\n              cohort_forum_url: `${DISCOURSE_URL}/session/sso?return_path=/c/${cohort.category_id}`,\n            }))])\n          ])\n          break\n        }\n        case 'event': {\n          let eventId = parseInt(metadata.eventId)\n          let [person, event] = await Promise.all([\n            prisma.people.findUnique({where: {id: metadata.userId}}),\n            prisma.standalone_events.findUnique({where: {event: eventId}, select:{events: true}})\n          ])\n          if(!person) return {status: 400, result: \"ERROR: cannot find user with id: \" + metadata.userId} as const\n          if(!event) return {status:400, result: \"ERROR: cannot find event with id: \"+eventId}\n\n          await Promise.all([\n            sendEventRSVPEmail(person.email, {\n              name: person.display_name || person.username,\n              event_page_url: `https://${window.location.origin}/events/${event.events.id}`,\n              event_name: event.events.name\n            }),\n            prisma.people_in_events.create({data:{\n              events:{connect:{id: event.events.id}},\n              people:{connect:{id:person.id}}\n            }})\n          ])\n          break\n        }\n    }\n  }\n  if (event.type === 'account.updated') {\n    const {details_submitted, payouts_enabled, id} = event.data.object as {id: string, details_submitted: boolean, payouts_enabled: boolean, metadata: Stripe.Metadata} ;\n    if(details_submitted) await prisma.stripe_connected_accounts.update({\n      where:{stripe_account:id},\n      data:{\n        connected: true,\n        payouts_enabled\n      }\n    })\n\n  }\n\n  res.status(200).end()\n}\n","module.exports = require(\"crypto\");","import * as postmark from 'postmark'\nimport cohortEnrollmentMetadata from './templates/cohort-enrollment/meta.json'\nimport verifiyEmailMetadata from './templates/welcome/meta.json'\nimport resetPasswordMetadata from './templates/password-reset/meta.json'\nimport inviteToCourseMetadata from './templates/invite-to-course/meta.json'\nimport enrollNotificationMetada from './templates/enroll-notification/meta.json'\nimport unenrollMetadata from './templates/cohort-unenroll/meta.json'\nimport watchingNotificationMetadata from './templates/watching-notification/meta.json'\nimport eventRSVPMetadata from './templates/event-rsvp/meta.json'\nimport eventRSVPNoAccountMetadata from './templates/event-rsvp-no-account/meta.json'\nimport eventUpdateNoAccount from './templates/event-update-no-account/meta.json'\n\nimport { Hash } from 'postmark/dist/client/models/client/SupportingTypes'\n\nvar client = new postmark.ServerClient(process.env.POSTMARK_TOKEN || '');\n\nexport const sendResetPasswordEmail = sendEmail(resetPasswordMetadata)\nexport const sendVerificationEmail = sendEmail(verifiyEmailMetadata)\nexport const sendCohortEnrollmentEmail = sendEmail(cohortEnrollmentMetadata)\nexport const sendEventRSVPEmail = sendEmail(eventRSVPMetadata)\nexport const sendEventRSVPNoAccountEmail = sendEmail(eventRSVPNoAccountMetadata)\nexport const sendEventUpdateNoAccountEmail = sendBatchEmail(eventUpdateNoAccount)\nexport const sendInviteToCourseEmail = sendEmail(inviteToCourseMetadata)\nexport const sendEnrollNotificationEmaill = sendEmail(enrollNotificationMetada)\nexport const sendWatchingNotificationEmail = sendBatchEmail(watchingNotificationMetadata)\nexport const sendUnenrollEmail = sendEmail(unenrollMetadata)\n\ntype EmailMetadata = {\n  Alias: string,\n  TestRenderModel: object\n}\nexport function sendEmail<T extends EmailMetadata>(meta:T) {\n  return async function(\n    email: string,\n    vars?: T[\"TestRenderModel\"], data?: Partial<{Metadata?:Hash<string>, Attachments: Array<{Name: string, Content: string, ContentType: string, ContentID: string | null}>}>) {\n    if(process.env.NODE_ENVIRONMENT === 'production') {\n      try {\n          return client.sendEmailWithTemplate({\n                  From: `wecare@krakenedu.com`,\n                  To: email,\n                  TemplateAlias: meta.Alias,\n                  TemplateModel: vars,\n                  ...data\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n}\nexport function sendBatchEmail<T extends EmailMetadata>(meta:T) {\n  return (msgs:Array<{email: string, vars: T[\"TestRenderModel\"],data?: Partial<{Metadata?:Hash<string>, Attachments: Array<{Name: string, Content: string, ContentType: string, ContentID: string | null}>}>} | undefined>) => {\n    if(process.env.NODE_ENVIRONMENT === 'production') return client.sendEmailBatchWithTemplates(msgs.filter(x=>x!== undefined).map(msg=>{\n      return {\n         From: `wecare@krakenedu.com`,\n        To: msg?.email || '',\n        TemplateAlias: meta.Alias,\n        TemplateModel: msg?.vars || {},\n        MessageStream: \"notifications\",\n        ...msg?.data\n      }\n    }))\n  }\n}\n","import { loadStripe } from '@stripe/stripe-js/pure'\n\nexport const prettyDate = (str: string) =>  {\n  let date = new Date(str)\n  let today = new Date()\n  if(date.getDate()===today.getDate() &&\n    date.getMonth()===today.getMonth() &&\n    date.getFullYear()===today.getFullYear()) return \"Today\"\n  return date.toLocaleDateString(undefined, {month: 'short', day: 'numeric', year: 'numeric'})\n}\n\nexport function dateFromDateAndTimeInputs(date: string, time: string){\n  let dateParts = date.split('-').map(x=>parseInt(x))\n  let timeParts = time.split(':').map(x=>parseInt(x))\n  return new Date(dateParts[0], dateParts[1] -1, dateParts[2], timeParts[0], timeParts[1])\n}\n\nexport const slugify = (str:string) => {\n  var specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~’]/g\n  return str.trim()\n    .replace(specials, '')\n    .replace(/\\s/g, '-')\n    .toLowerCase()\n}\n\nexport const usernameValidate = (s:string) => /^[a-zA-Z0-9_.\\-]{3,15}$/.test(s)\n\nexport function getTimeBetween(d1: Date, d2:Date) {\n  return ((d2.getTime() - d1.getTime()) / (1000 * 60 * 60)).toFixed(1)\n}\n\n\nlet stripePromise:ReturnType<typeof loadStripe>\nexport const getStripe = () => {\n  if (!stripePromise) {\n    stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY!)\n  }\n  return stripePromise\n}\n\nexport const sortByDateAndName = (a:{start_date: string, name: string}, b:{start_date:string, name: string}) => {\n  if(a.start_date === b.start_date) return a.name > b.name ? 1 : -1\n  return a.start_date > b.start_date ? 1 : -1\n}\n\nexport const cohortName = (name: string)=>isNaN(parseInt(name)) ? name  :`Cohort #${name}`\n\nexport function formHelper<S>(state:S, setState:(s:S)=>void) {\n  return Object.keys(state).reduce((acc, key)=> {\n    let value =state[key as keyof S]\n    acc[key as keyof S] = {\n      value,\n      onChange: (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>setState({\n        ...state,\n        [key]: typeof value === 'number' ? parseInt(e.currentTarget.value) : e.currentTarget.value\n      })\n    }\n    return acc\n  },  {} as {[k in keyof S]: {value: S[k], onChange: (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>void}})\n}\n","export let DISCOURSE_URL = 'https://forum.krakenedu.com'\n","module.exports = require(\"postmark\");","module.exports = require(\"stripe\");"],"sourceRoot":""}