{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/discourse.ts","webpack:///./src/apiHelpers.ts","webpack:///external \"@prisma/client\"","webpack:///./lib/prisma.ts","webpack:///external \"@stripe/stripe-js/pure\"","webpack:///external \"querystring\"","webpack:///./pages/api/cohorts/[cohortId]/enroll.ts","webpack:///external \"crypto\"","webpack:///./emails/index.ts","webpack:///external \"runtypes\"","webpack:///external \"@sentry/node\"","webpack:///external \"swr\"","webpack:///external \"react\"","webpack:///./src/utils.ts","webpack:///./src/constants.ts","webpack:///external \"postmark\"","webpack:///./src/token.ts","webpack:///external \"cookie\"","webpack:///external \"stripe\"","webpack:///./src/stripe.ts"],"names":["headers","process","env","DISCOURSE_API_KEY","DISCOURSE_API_USERNAME","fetchWithBackoff","url","options","exponent","result","fetch","status","value","Promise","resolve","backoff","Math","min","floor","random","setTimeout","createGroup","group","console","log","owner_usernames","join","DISCOURSE_URL","method","body","JSON","stringify","text","json","updateTopic","topic","input","username","tags","title","topicData","postID","post_stream","posts","id","post","raw","post_ids","createTopic","asUser","createCategory","name","color","text_color","category","updateGroup","prisma","discourse_groups","update","where","data","updateCategory","getCategory","path","res","getUsername","userId","user","getGroupId","groupName","undefined","addMember","groupId","usernames","getTaggedPost","c","tag","topic_list","topics","topicID","find","includes","topicRequest","makeSSOPayload","params","payload","Buffer","from","querystring","toString","sig","crypto","createHmac","DISCOURSE_SECRET","sso","digest","syncSSO","createPost","APIHandler","handler","NEXT_PUBLIC_SENTRY_DSN","Sentry","dsn","req","methodHandler","end","e","contexts","header","Object","keys","setHeader","send","multiRouteHandler","query","handlers","route","callApi","endpoint","msg","get","useApi","deps","successCallback","state","setState","useState","useEffect","call","useApiData","initialData","useSWR","globalAny","global","APP_ENV","PrismaClient","POST","enroll","DELETE","unenroll","EnrollMsgValidator","rt","discount","paystack","UnEnrollMsgValidator","person","String","cohortId","parseInt","Number","isNaN","getToken","check","cohort","all","course_cohorts","findUnique","include","cohort_facilitators","select","people","email","courses","course_groupTodiscourse_groups","invite_only","category_id","cost","slug","course_invites","course_discounts","code","deleted","max_redeems","redeems","message","length","origin","URL","referer","price","type","amount","gettingStarted","increment","people_in_cohorts","create","amount_paid","connect","sendCohortEnrollmentEmail","display_name","course_start_date","prettyDate","start_date","course_name","cohort_page_url","course","cohort_forum_url","get_started_topic_url","map","f","sendEnrollNotificationEmaill","learner","zeroCost","metadata","session","stripe","checkout","sessions","payment_method_types","customer","stripe_customer_id","customer_email","payment_intent_data","transfer_group","line_items","currency","quantity","cancel_url","success_url","sessionId","payment_intent","facilitator","p","sendUnenrollEmail","paid","delete","person_cohort","refunds","cohort_refunds","client","postmark","POSTMARK_TOKEN","sendResetPasswordEmail","sendEmail","resetPasswordMetadata","sendVerificationEmail","verifiyEmailMetadata","cohortEnrollmentMetadata","sendEventRSVPEmail","eventRSVPMetadata","sendEventRSVPNoAccountEmail","eventRSVPNoAccountMetadata","sendEventUpdateNoAccountEmail","sendBatchEmail","eventUpdateNoAccount","sendInviteToCourseEmail","inviteToCourseMetadata","enrollNotificationMetada","sendWatchingNotificationEmail","watchingNotificationMetadata","unenrollMetadata","meta","vars","NODE_ENVIRONMENT","sendEmailWithTemplate","From","To","TemplateAlias","Alias","TemplateModel","error","msgs","sendEmailBatchWithTemplates","filter","x","MessageStream","str","date","Date","today","getDate","getMonth","getFullYear","toLocaleDateString","month","day","year","dateFromDateAndTimeInputs","time","dateParts","split","timeParts","slugify","specials","trim","replace","toLowerCase","usernameValidate","s","test","getTimeBetween","d1","d2","getTime","toFixed","stripePromise","getStripe","loadStripe","sortByDateAndName","a","b","cohortName","formHelper","reduce","acc","key","onChange","currentTarget","setTokenHeader","token","cookie","serialize","expires","now","httpOnly","sameSite","cookies","loginToken","parse","removeToken","Stripe","STRIPE_SECRET","apiVersion"],"mappings":"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","file":"pages/api/cohorts/[cohortId]/enroll.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import crypto from 'crypto'\nimport querystring from 'querystring'\nimport {DISCOURSE_URL} from 'src/constants'\nimport prisma from \"lib/prisma\";\nlet headers = {\n      \"Api-Key\": process.env.DISCOURSE_API_KEY || '',\n      \"Api-Username\": process.env.DISCOURSE_API_USERNAME || '',\n    }\n\nlet fetchWithBackoff = async (url: Parameters<typeof fetch>[0], options:Parameters<typeof fetch>[1], exponent: number = 1):ReturnType<typeof fetch> => {\n  let result = await fetch(url, options)\n  if(result.status === 429) {\n    let value = 1000 * (2**exponent)\n    await new Promise<void>((resolve)=>{\n      let backoff = Math.min(value + Math.floor(Math.random()*value), 64000)\n      setTimeout(()=>resolve(), backoff)\n    })\n    return fetchWithBackoff(url, options, exponent+1)\n  }\n  return result\n}\n\nexport type Category = {\n  topic_list: {\n    topics: Array<{\n      category_id: number\n      id: string\n      pinned: boolean\n      tags: string[]\n    }>\n  }\n}\n\nexport async function createGroup(group:{\n  name: string,\n  visibility_level: number,\n  owner_usernames: string | string[],\n  mentionable_level?: number,\n  messageable_level?: number\n}) {\n  console.log(group, \"grouphere\")\n  if(typeof group.owner_usernames !== 'string') group.owner_usernames = group.owner_usernames.join(',')\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/admin/groups`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({group})\n  })\n\n   console.log(result, \"grouphereafter\")\n\n  if(result.status !== 200) {\n    console.log(await result.text())\n    return false\n  }\n  return await result.json() as {basic_group: {id: number}}\n}\n\nexport async function updateTopic(topic:string, input: {category_id: number, title: string, raw: string, tags: string[]}, username?: string) {\n  await fetch (`${DISCOURSE_URL}${topic}`, {\n    method: \"PUT\",\n    headers:{\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({\n      tags: input.tags,\n      title: input.title\n    })\n  })\n\n  // Update the content\n  let topicData = await (await fetchWithBackoff(`${DISCOURSE_URL}${topic}.json`, {headers})).json()\n  let postID = topicData.post_stream.posts[0].id\n  await fetch (`${DISCOURSE_URL}/posts/${postID}`, {\n    method: \"PUT\",\n    headers:{\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({\n      post: {\n        raw: input.raw\n      }\n    })\n  })\n\n  // Update the owner\n  if(username) await fetchWithBackoff(`${DISCOURSE_URL}/t/${topicData.id}/change-owner`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({post_ids: [postID], username})\n  })\n}\n\nexport async function createTopic(input:{title: string, category: number | string, raw: string, tags?: string[]}, asUser?: string) {\n  console.log(asUser, \"asUser\")\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/posts.json`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers,\n      \"Api-Username\": headers[\"Api-Username\"]\n    },\n    body: JSON.stringify(input)\n  })\n  if(result.status !== 200) {\n    console.log(await result.text())\n  }\n  if(result.status === 200)  return await result.json() as {id: string, topic_id: number}\n}\n\nexport const createCategory = async (name: string, options?: {\n  slug?: string,\n  permissions?: {[key:string]:number},\n  parent_category_id?: number,\n  show_subcategory_list?: boolean,\n  subcategory_list_style?: \"rows_with_featured_topics\",\n  default_list_filter?:\"none\"\n}) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/categories.json`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({name, color: '0088CC', text_color: 'FFFFFF', ...options})\n  })\n  if(result.status === 200) return (await result.json()).category as {id: number, topic_url: string}\n  console.log(await result.text())\n  return false as const\n}\n\nexport async function updateGroup(id: number, name: string) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/g/${id}.json`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({name})\n  })\n  if(result.status !== 200) console.log(await result.text())\n  else {\n    \n    await prisma.discourse_groups.update({where:{id}, data:{name}})\n    return true\n  }\n}\n\nexport async function updateCategory (id: string | number, options: {permissions?: {[key:string]: number}, name: string, slug?: string}) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/categories/${id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({...options, color: '0088CC', text_color: 'FFFFFF'})\n  })\n  if(result.status !== 200) console.log(await result.text())\n  else return true\n}\nexport async function getCategory(path: string | number){\n  let res = await fetchWithBackoff(`${DISCOURSE_URL}/c/${path}.json`, {\n    method: 'GET',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n  })\n  if(res.status === 200){\n    let category = await res.json() as Category\n    return category\n  }\n  else console.log(await res.text())\n}\n\nexport const getUsername = async (userId:string):Promise<string | undefined> => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/u/by-external/${userId}.json`, {\n    method: \"GET\",\n    headers\n  })\n\n  if(result.status === 200) {\n    return (await result.json()).user.username as string\n  }\n  else return\n}\n\nexport const getGroupId = async (groupName:string) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/groups/${groupName}.json`, {\n    method: \"GET\",\n    headers\n  })\n  if(result.status === 200) return (await result.json()).group.id\n  return undefined\n}\n\nexport const addMember = async (groupId:number, username: string) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/groups/${groupId}/members.json`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({\n      usernames: username\n    })\n  })\n  return result.status  === 200\n}\n\nexport const getTaggedPost = async (c: string | number, tag: string) => {\n\n\n  let res = await fetchWithBackoff(`${DISCOURSE_URL}/c/${c}.json`, {\n    method: 'GET',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n  })\n\n  if(res.status !== 200) console.log(await res.text())\n  let category = await res.json() as Category\n  console.log(category.topic_list.topics, tag , \"category\")\n  let topicID = category.topic_list.topics.find((topic) => topic.tags && topic.tags.includes(tag))?.id\n  if(!topicID) return {text: '', id: ''}\n  let topicRequest = await fetchWithBackoff(`${DISCOURSE_URL}/raw/${topicID}`, {headers})\n  return {text: await topicRequest.text(), id: topicID}\n}\n\nexport const makeSSOPayload = (params: {[key:string]: string}) => {\n  let payload = (Buffer.from(querystring.stringify(params))).toString('base64')\n  const sig = crypto.createHmac('sha256', process.env.DISCOURSE_SECRET || '');\n  sig.update(payload)\n\n  let result = querystring.stringify({\n    sso:payload,\n    sig: sig.digest('hex')\n  })\n  return result\n}\n\nexport const syncSSO = async (params: {[key:string]: string})=>{\n  let payload = (Buffer.from(querystring.stringify(params))).toString('base64')\n  const sig = crypto.createHmac('sha256', process.env.DISCOURSE_SECRET || '');\n\n  sig.update(payload)\n  return fetchWithBackoff(`${DISCOURSE_URL}/admin/users/sync_sso`, {\n    method: \"POST\",\n    headers: {\n      \"Api-Key\": process.env.DISCOURSE_API_KEY || '',\n      \"Api-Username\": 'system',\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({\n      sso: payload,\n      sig: sig.digest('hex')\n    })\n  })\n}\n\nexport async function createPost(params:{topic_id: number,raw:string}) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/posts.json`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers,\n      \"Api-Username\":'system'\n    },\n    body: JSON.stringify(params)\n  })\n  console.log(result)\n}\n","import { NextApiRequest, NextApiResponse} from 'next'\nimport * as Sentry from '@sentry/node'\nimport { useState, useEffect} from 'react'\nimport useSWR from 'swr'\n\nexport type ResultType<T extends (...args:any)=> any> = PromiseReturn<ReturnType<T>>\nexport type Request = NextApiRequest\nexport type Success<T extends Result> = Extract<T, {status: 200}>['result']\nexport type Errors<T extends Result> = Exclude<T, {status: 200}>\n\ntype Handler = (req:Request) => Promise<Result>\ntype PromiseReturn<T> = T extends PromiseLike<infer U> ? U : T\n\ntype Result = {\n  status: number,\n  result: string | object | null | boolean\n  headers?: {\n    [key: string]: string | number | string[]\n  }\n}\n\ntype Methods = \"POST\" | \"GET\" | \"PUT\" | \"DELETE\"\n\nexport const APIHandler = (handler: Handler | Partial<{POST: Handler, GET: Handler, PUT: Handler, DELETE: Handler}>) => {\n  if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n    Sentry.init({ dsn: process.env.NEXT_PUBLIC_SENTRY_DSN});\n  }\n  return async (req:NextApiRequest, res: NextApiResponse) => {\n    let result\n    try {\n      if(typeof handler === 'object') {\n        let method = req.method as Methods\n        let methodHandler = handler[method]\n        if(!methodHandler) {\n          res.status(404).end()\n          return\n        }\n        result = await methodHandler(req)\n      }\n      else {\n        result = await handler(req)\n      }\n    }\n    catch(e) {\n      if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n        Sentry.captureException(e, {contexts: {headers: req.headers}})\n        await Sentry.flush(2000)\n      }\n      console.log(e)\n      return res.status(500).end()\n    }\n\n    if(result.headers) {\n      for(let header of Object.keys(result.headers)) {\n        res.setHeader(header, result.headers[header])\n      }\n    }\n    if(result.status!==200) console.log(result.result)\n    if(typeof result.result !== 'object') return res.status(result.status).send(result.result)\n    return res.status(result.status).json(result.result)\n  }\n}\n\nexport const multiRouteHandler = (query:string, handlers:{[key:string]: Handler}) => {\n  return APIHandler(async (req) => {\n    let route = (typeof req.query[query] === 'string')\n                 ? req.query[query] as string\n                 : req.query[query][0]\n    return handlers[route](req)\n  })\n}\n\nexport async function callApi<Msg extends object | string | null, R extends Omit<Result, 'headers'>> (endpoint:string, msg?: Msg, method?: Methods){\n    let result = await fetch(endpoint, {\n      method: method ? method : msg ? \"POST\" : \"GET\",\n      headers: {\n        'Content-type': (typeof msg === 'object') ? 'application/json' : 'text/html'\n      },\n      body: (typeof msg === 'string') ? msg : JSON.stringify(msg)\n    })\n\n    return {\n      status: result.status,\n      result: result.headers.get('Content-type')?.includes('application/json')\n        ? await result.json()\n        : await result.text()\n    } as R\n}\n\nexport type Status = 'normal' | 'error' | 'loading' | 'success'\nexport function useApi<Msg extends object | string | null, R extends Omit<Result, 'headers'>>(deps: any[], successCallback?: (result: Extract<R, {status:200}>['result'])=> any) {\n  let [state, setState] = useState<Status>('normal')\n  useEffect(()=> setState('normal'), deps)\n  let call= async (path: string, msg?: Msg, method?: Methods) => {\n    setState('loading')\n    let res = await callApi<Msg, R>(path, msg, method)\n    if(res.status === 200) {\n      if(successCallback) await successCallback(res.result)\n      setState('success')\n    }\n    else setState('error')\n    return res\n  }\n  return [state, call, setState] as const\n}\n\nexport function useApiData<R extends Omit<Result, 'headers'>>(path?: string, initialData?:R) {\n  return useSWR<Success<R>, Errors<R>>(path ? path : null, async (path)=>{\n    let res = await callApi<null, R>(path)\n    if(res.status = 200) return res.result\n    return res\n  }, {initialData})\n}\n","module.exports = require(\"@prisma/client\");","const globalAny:any = global;\nimport { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\nif (process.env.APP_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!globalAny.prisma) {\n    globalAny.prisma = new PrismaClient();\n  }\n  prisma = globalAny.prisma;\n}\n\nexport default prisma;","module.exports = require(\"@stripe/stripe-js/pure\");","module.exports = require(\"querystring\");","import * as rt from \"runtypes\";\nimport { ResultType, APIHandler, Request } from \"src/apiHelpers\";\nimport { StripePaymentMetaData, stripe } from \"src/stripe\";\nimport {\n  sendCohortEnrollmentEmail,\n  sendEnrollNotificationEmaill,\n  sendUnenrollEmail,\n} from \"emails\";\nimport { getToken } from \"src/token\";\nimport { addMember, getTaggedPost } from \"src/discourse\";\nimport { DISCOURSE_URL } from \"src/constants\";\nimport { prettyDate } from \"src/utils\";\nimport prisma from \"lib/prisma\";\n\nexport type EnrollResponse = ResultType<typeof enroll>;\nexport type EnrollMsg = rt.Static<typeof EnrollMsgValidator>;\nexport type UnEnrollMsg = rt.Static<typeof UnEnrollMsgValidator>;\nexport type UnEnrollResponse = ResultType<typeof unenroll>;\n\nexport default APIHandler({\n  POST: enroll,\n  DELETE: unenroll,\n});\n\nlet EnrollMsgValidator = rt.Record({\n  discount: rt.Union(rt.Undefined, rt.String),\n  paystack: rt.Union(rt.Undefined, rt.Boolean),\n});\n\nlet UnEnrollMsgValidator = rt.Record({\n  person: rt.String,\n});\n\nasync function enroll(req: Request) {\n  let cohortId = parseInt(req.query.cohortId as string);\n  if (Number.isNaN(cohortId))\n    return { status: 400, result: \"ERROR: Cohort id is not a number\" } as const;\n  let user = getToken(req);\n  if (!user)\n    return { status: 401, result: \"Error: no user logged in\" } as const;\n  let msg;\n  try {\n    msg = EnrollMsgValidator.check(req.body);\n  } catch (e) {\n    return { status: 400, result: e.toString() } as const;\n  }\n  let { paystack } = msg;\n  let [cohort, person, discount] = await Promise.all([\n    prisma.course_cohorts.findUnique({\n      where: { id: cohortId },\n      include: {\n        discourse_groups: true,\n        cohort_facilitators: {\n          select: { people: { select: { email: true } } },\n        },\n        courses: {\n          select: {\n            course_groupTodiscourse_groups: true,\n            invite_only: true,\n            category_id: true,\n            cost: true,\n            slug: true,\n            name: true,\n            course_invites: {\n              where: {\n                email: user.email,\n              },\n            },\n          },\n        },\n      },\n    }),\n    prisma.people.findUnique({ where: { id: user.id } }),\n    msg.discount\n      ? prisma.course_discounts.findUnique({ where: { code: msg.discount } })\n      : null,\n  ]);\n\n  if (!cohort || cohort.courses.cost === undefined)\n    return {\n      status: 400,\n      result: \"Error: no cohort with id \" + cohortId + \" found\",\n    } as const;\n  if (msg.discount && (!discount || discount.deleted))\n    return { status: 404, result: { discount: msg.discount } } as const;\n  if (\n    discount &&\n    discount.max_redeems !== 0 &&\n    discount.max_redeems <= discount.redeems\n  )\n    return {\n      status: 403,\n      result: {\n        message: \"ERROR: Discount code has no uses left\",\n        discount: msg.discount,\n      },\n    } as const;\n\n  if (\n    cohort.courses.invite_only &&\n    cohort.courses.course_invites.length === 0\n  ) {\n    return {\n      status: 401,\n      result: \"ERROR: Course is invite_only and user is not invited\",\n    } as const;\n  }\n\n  let origin = new URL(req.headers.referer || \"\").origin;\n  let price = cohort.courses.cost;\n  if (discount) {\n    if (discount.type === \"absolute\") price = price - discount.amount;\n    else price = price - Math.floor((discount.amount / 100) * price);\n  }\n  if (price === 0) {\n    let gettingStarted = await getTaggedPost(\n      cohort.category_id,\n      \"getting-started\"\n    );\n    await Promise.all([\n      discount\n        ? prisma.course_discounts.update({\n            where: { code: discount.code },\n            data: { redeems: { increment: 1 } },\n          })\n        : null,\n      prisma.people_in_cohorts.create({\n        data: {\n          amount_paid: 0,\n          people: { connect: { id: user.id } },\n          course_cohorts: { connect: { id: cohortId } },\n          course_discounts: discount\n            ? { connect: { code: discount.code } }\n            : undefined,\n        },\n      }),\n      addMember(cohort.discourse_groups.id, user.username),\n      addMember(\n        cohort.courses.course_groupTodiscourse_groups.id,\n        user.username\n      ),\n      sendCohortEnrollmentEmail(user.email, {\n        name: user.display_name || user.username,\n        course_start_date: prettyDate(cohort.start_date),\n        course_name: cohort.courses.name,\n        cohort_page_url: `${origin}/courses/${cohort.courses.slug}/${cohort.course}/cohorts/${cohort.id}`,\n        cohort_forum_url: `${DISCOURSE_URL}/session/sso?return_path=/c/${cohort.category_id}`,\n        get_started_topic_url: `${DISCOURSE_URL}/t/${gettingStarted.id}`,\n      }),\n      Promise.all([\n        cohort.cohort_facilitators.map(\n          async (f) =>\n            person &&\n            cohort &&\n            sendEnrollNotificationEmaill(f.people.email, {\n              learner: person.display_name || person.username,\n              course: cohort.courses.name,\n              cohort_page_url: `${origin}/courses/${cohort.courses.slug}/${cohort.course}/cohorts/${cohort.id}`,\n              cohort_forum_url: `${DISCOURSE_URL}/session/sso?return_path=/c/${cohort.category_id}`,\n            })\n        ),\n      ]),\n    ]);\n    return {\n      status: 200,\n      result: { zeroCost: true } as const,\n    };\n  }\n  //TO DO: get the price of naira per hour and save in separate mongo db\n  let metadata: StripePaymentMetaData = {\n    type: \"cohort\",\n    cohortId: cohort.id.toString(),\n    userId: user.id,\n    discount: discount?.code || null,\n  };\n\n  if (paystack) {\n    return {\n      status: 200,\n      result: {\n        amount: price * 400 * 100,\n        email: user.email,\n        metadata,\n      } as const,\n    };\n  }\n\n  const session = await stripe.checkout.sessions.create({\n    payment_method_types: [\"card\"],\n    customer: person?.stripe_customer_id || undefined,\n    customer_email: person?.stripe_customer_id ? undefined : user.email,\n    payment_intent_data: {\n      transfer_group: cohort.id.toString(),\n    },\n    line_items: [\n      {\n        name:\n          cohort.courses.name +\n          (discount\n            ? `, ${\n                discount?.type === \"absolute\"\n                  ? \"$\" + discount?.amount\n                  : discount?.amount + \"%\"\n              } Off`\n            : \"\"),\n        amount: price * 100,\n        currency: \"usd\",\n        quantity: 1,\n        //TO DO: Add discount\n      },\n    ],\n    cancel_url: `${origin}/courses/${cohort.courses.slug}/${cohort.course}/cohorts/${cohort.id}`,\n    success_url: `${origin}/courses/${cohort.courses.slug}/${cohort.course}/cohorts/${cohort.id}?welcome`,\n    metadata,\n  });\n\n  return {\n    status: 200,\n    result: { sessionId: session.id },\n  } as const;\n}\nasync function unenroll(req: Request) {\n  let cohortId = parseInt(req.query.cohortId as string);\n  if (Number.isNaN(cohortId))\n    return { status: 400, result: \"ERROR: Cohort id is not a number\" } as const;\n  let user = getToken(req);\n  if (!user)\n    return { status: 401, result: \"Error: no user logged in\" } as const;\n\n  let msg: UnEnrollMsg;\n  try {\n    msg = UnEnrollMsgValidator.check(req.body);\n  } catch (e) {\n    return { status: 400, result: e.toString() } as const;\n  }\n\n  let [cohort] = await Promise.all([\n    prisma.course_cohorts.findUnique({\n      where: { id: cohortId },\n      select: {\n        cohort_facilitators: true,\n        courses: {\n          select: {\n            name: true,\n          },\n        },\n        discourse_groups: true,\n        people: {\n          select: { email: true },\n        },\n        people_in_cohorts: {\n          select: {\n            person: true,\n            payment_intent: true,\n            amount_paid: true,\n            people: {\n              select: { display_name: true, email: true, username: true },\n            },\n          },\n        },\n      },\n    }),\n  ]);\n  if (!cohort)\n    return {\n      status: 404,\n      result: \"ERROR: no cohort found with id: \" + cohortId,\n    } as const;\n  if (\n    !cohort.cohort_facilitators.find((f) => user && f.facilitator === user.id)\n  )\n    return {\n      status: 401,\n      result: `ERROR: User is not facilitator of cohort`,\n    } as const;\n\n  let person = cohort.people_in_cohorts.find((p) => p.person === msg.person);\n  if (!person)\n    return { status: 404, result: \"ERROR: User is not in cohort\" } as const;\n  if (!person.payment_intent && person.amount_paid !== 0)\n    return {\n      status: 500,\n      result:\n        \"ERROR: Amount paid is greater than zero but there is not payment information\",\n    } as const;\n  // TO DO check what payment_intent is\n\n  await Promise.all([\n    sendUnenrollEmail(person.people.email, {\n      name: person.people.display_name || person.people.username,\n      course_name: cohort.courses.name,\n      paid: person.amount_paid > 0 ? \"true\" : \"\",\n    }),\n    prisma.people_in_cohorts.delete({\n      where: {\n        person_cohort: {\n          person: msg.person,\n          cohort: cohortId,\n        },\n      },\n    }),\n    !person.payment_intent\n      ? undefined\n      : prisma.refunds.create({\n          data: {\n            payment_intent: person.payment_intent,\n            amount: person.amount_paid,\n            cohort_refunds: {\n              create: {\n                course_cohorts: {\n                  connect: {\n                    id: cohortId,\n                  },\n                },\n                people: {\n                  connect: { id: person.person },\n                },\n              },\n            },\n          },\n        }),\n    !person.payment_intent\n      ? undefined\n      : stripe.refunds.create({ payment_intent: person.payment_intent }),\n  ]);\n\n  return {\n    status: 200,\n    result: { payment_intent: person.payment_intent, person: person.person },\n  } as const;\n}\n","module.exports = require(\"crypto\");","import * as postmark from 'postmark'\nimport cohortEnrollmentMetadata from './templates/cohort-enrollment/meta.json'\nimport verifiyEmailMetadata from './templates/welcome/meta.json'\nimport resetPasswordMetadata from './templates/password-reset/meta.json'\nimport inviteToCourseMetadata from './templates/invite-to-course/meta.json'\nimport enrollNotificationMetada from './templates/enroll-notification/meta.json'\nimport unenrollMetadata from './templates/cohort-unenroll/meta.json'\nimport watchingNotificationMetadata from './templates/watching-notification/meta.json'\nimport eventRSVPMetadata from './templates/event-rsvp/meta.json'\nimport eventRSVPNoAccountMetadata from './templates/event-rsvp-no-account/meta.json'\nimport eventUpdateNoAccount from './templates/event-update-no-account/meta.json'\n\nimport { Hash } from 'postmark/dist/client/models/client/SupportingTypes'\n\nvar client = new postmark.ServerClient(process.env.POSTMARK_TOKEN || '');\n\nexport const sendResetPasswordEmail = sendEmail(resetPasswordMetadata)\nexport const sendVerificationEmail = sendEmail(verifiyEmailMetadata)\nexport const sendCohortEnrollmentEmail = sendEmail(cohortEnrollmentMetadata)\nexport const sendEventRSVPEmail = sendEmail(eventRSVPMetadata)\nexport const sendEventRSVPNoAccountEmail = sendEmail(eventRSVPNoAccountMetadata)\nexport const sendEventUpdateNoAccountEmail = sendBatchEmail(eventUpdateNoAccount)\nexport const sendInviteToCourseEmail = sendEmail(inviteToCourseMetadata)\nexport const sendEnrollNotificationEmaill = sendEmail(enrollNotificationMetada)\nexport const sendWatchingNotificationEmail = sendBatchEmail(watchingNotificationMetadata)\nexport const sendUnenrollEmail = sendEmail(unenrollMetadata)\n\ntype EmailMetadata = {\n  Alias: string,\n  TestRenderModel: object\n}\nexport function sendEmail<T extends EmailMetadata>(meta:T) {\n  return async function(\n    email: string,\n    vars?: T[\"TestRenderModel\"], data?: Partial<{Metadata?:Hash<string>, Attachments: Array<{Name: string, Content: string, ContentType: string, ContentID: string | null}>}>) {\n    if(process.env.NODE_ENVIRONMENT === 'production') {\n      try {\n          return client.sendEmailWithTemplate({\n                  From: `wecare@krakenedu.com`,\n                  To: email,\n                  TemplateAlias: meta.Alias,\n                  TemplateModel: vars,\n                  ...data\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n}\nexport function sendBatchEmail<T extends EmailMetadata>(meta:T) {\n  return (msgs:Array<{email: string, vars: T[\"TestRenderModel\"],data?: Partial<{Metadata?:Hash<string>, Attachments: Array<{Name: string, Content: string, ContentType: string, ContentID: string | null}>}>} | undefined>) => {\n    if(process.env.NODE_ENVIRONMENT === 'production') return client.sendEmailBatchWithTemplates(msgs.filter(x=>x!== undefined).map(msg=>{\n      return {\n         From: `wecare@krakenedu.com`,\n        To: msg?.email || '',\n        TemplateAlias: meta.Alias,\n        TemplateModel: msg?.vars || {},\n        MessageStream: \"notifications\",\n        ...msg?.data\n      }\n    }))\n  }\n}\n","module.exports = require(\"runtypes\");","module.exports = require(\"@sentry/node\");","module.exports = require(\"swr\");","module.exports = require(\"react\");","import { loadStripe } from '@stripe/stripe-js/pure'\n\nexport const prettyDate = (str: string) =>  {\n  let date = new Date(str)\n  let today = new Date()\n  if(date.getDate()===today.getDate() &&\n    date.getMonth()===today.getMonth() &&\n    date.getFullYear()===today.getFullYear()) return \"Today\"\n  return date.toLocaleDateString(undefined, {month: 'short', day: 'numeric', year: 'numeric'})\n}\n\nexport function dateFromDateAndTimeInputs(date: string, time: string){\n  let dateParts = date.split('-').map(x=>parseInt(x))\n  let timeParts = time.split(':').map(x=>parseInt(x))\n  return new Date(dateParts[0], dateParts[1] -1, dateParts[2], timeParts[0], timeParts[1])\n}\n\nexport const slugify = (str:string) => {\n  var specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~’]/g\n  return str.trim()\n    .replace(specials, '')\n    .replace(/\\s/g, '-')\n    .toLowerCase()\n}\n\nexport const usernameValidate = (s:string) => /^[a-zA-Z0-9_.\\-]{3,15}$/.test(s)\n\nexport function getTimeBetween(d1: Date, d2:Date) {\n  return ((d2.getTime() - d1.getTime()) / (1000 * 60 * 60)).toFixed(1)\n}\n\n\nlet stripePromise:ReturnType<typeof loadStripe>\nexport const getStripe = () => {\n  if (!stripePromise) {\n    stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY!)\n  }\n  return stripePromise\n}\n\nexport const sortByDateAndName = (a:{start_date: string, name: string}, b:{start_date:string, name: string}) => {\n  if(a.start_date === b.start_date) return a.name > b.name ? 1 : -1\n  return a.start_date > b.start_date ? 1 : -1\n}\n\nexport const cohortName = (name: string)=>isNaN(parseInt(name)) ? name  :`Cohort #${name}`\n\nexport function formHelper<S>(state:S, setState:(s:S)=>void) {\n  return Object.keys(state).reduce((acc, key)=> {\n    let value =state[key as keyof S]\n    acc[key as keyof S] = {\n      value,\n      onChange: (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>setState({\n        ...state,\n        [key]: typeof value === 'number' ? parseInt(e.currentTarget.value) : e.currentTarget.value\n      })\n    }\n    return acc\n  },  {} as {[k in keyof S]: {value: S[k], onChange: (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>void}})\n}\n","export let DISCOURSE_URL = 'https://forum.krakenedu.com'\n","module.exports = require(\"postmark\");","import { ServerResponse, IncomingMessage } from \"http\";\nimport cookie from 'cookie'\n\nexport type Token = {\n  email: string,\n  id: string,\n  username: string,\n  display_name?: string | null,\n  link?: string | null\n  bio?: string | null\n  admin?: boolean\n}\n\nexport function setTokenHeader(token:Token)  {\n  return {\n    'Set-Cookie':cookie.serialize('loginToken', JSON.stringify(token), {\n      path: '/',\n      expires: new Date(Date.now() + 1000 * 60 * 60 * 24 * 30), // 30 days\n      httpOnly: true,\n      sameSite: \"lax\"\n    })\n  }\n}\n\nexport function getToken(req:IncomingMessage) {\n  const cookies = req.headers.cookie\n  if (!cookies) return;\n\n  const { loginToken } = cookie.parse(cookies);\n  if(loginToken) return JSON.parse(loginToken) as Token;\n  return\n}\n\nexport function removeToken(res:ServerResponse) {\n  res.setHeader(\n      'Set-Cookie',\n      cookie.serialize('loginToken', '', {\n        path: '/',\n        expires: new Date(Date.now() - 1000),\n        httpOnly: false\n      })\n    );\n}\n","module.exports = require(\"cookie\");","module.exports = require(\"stripe\");","import Stripe from 'stripe'\nexport type StripePaymentMetaData = {\n  type: 'cohort'\n  cohortId:string,\n  userId:string,\n  discount: string | null\n} | {\n  type: 'event',\n  eventId: string,\n  userId: string\n}\n\nexport const stripe = new Stripe(process.env.STRIPE_SECRET || '', {apiVersion:'2020-08-27'});\n"],"sourceRoot":""}