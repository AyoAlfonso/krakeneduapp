{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/discourse.ts","webpack:///./src/apiHelpers.ts","webpack:///external \"@prisma/client\"","webpack:///./lib/prisma.ts","webpack:///external \"@stripe/stripe-js/pure\"","webpack:///external \"querystring\"","webpack:///external \"crypto\"","webpack:///./emails/index.ts","webpack:///./pages/api/cohorts/[cohortId]/index.ts","webpack:///external \"immer\"","webpack:///external \"@sentry/node\"","webpack:///external \"swr\"","webpack:///external \"react\"","webpack:///./src/utils.ts","webpack:///./src/constants.ts","webpack:///external \"postmark\"","webpack:///./src/token.ts","webpack:///external \"cookie\""],"names":["headers","process","env","DISCOURSE_API_KEY","DISCOURSE_API_USERNAME","fetchWithBackoff","url","options","exponent","result","fetch","status","value","Promise","resolve","backoff","Math","min","floor","random","setTimeout","createGroup","group","console","log","owner_usernames","join","DISCOURSE_URL","method","body","JSON","stringify","text","json","updateTopic","topic","input","username","tags","title","topicData","postID","post_stream","posts","id","post","raw","post_ids","createTopic","asUser","createCategory","name","color","text_color","category","updateGroup","prisma","discourse_groups","update","where","data","updateCategory","getCategory","path","res","getUsername","userId","user","getGroupId","groupName","undefined","addMember","groupId","usernames","getTaggedPost","c","tag","topic_list","topics","topicID","find","includes","topicRequest","makeSSOPayload","params","payload","Buffer","from","querystring","toString","sig","crypto","createHmac","DISCOURSE_SECRET","sso","digest","syncSSO","createPost","APIHandler","handler","NEXT_PUBLIC_SENTRY_DSN","Sentry","dsn","req","methodHandler","end","e","contexts","header","Object","keys","setHeader","send","multiRouteHandler","query","handlers","route","callApi","endpoint","msg","get","useApi","deps","successCallback","state","setState","useState","useEffect","call","useApiData","initialData","useSWR","globalAny","global","APP_ENV","PrismaClient","client","postmark","POSTMARK_TOKEN","sendResetPasswordEmail","sendEmail","resetPasswordMetadata","sendVerificationEmail","verifiyEmailMetadata","sendCohortEnrollmentEmail","cohortEnrollmentMetadata","sendEventRSVPEmail","eventRSVPMetadata","sendEventRSVPNoAccountEmail","eventRSVPNoAccountMetadata","sendEventUpdateNoAccountEmail","sendBatchEmail","eventUpdateNoAccount","sendInviteToCourseEmail","inviteToCourseMetadata","sendEnrollNotificationEmaill","enrollNotificationMetada","sendWatchingNotificationEmail","watchingNotificationMetadata","sendUnenrollEmail","unenrollMetadata","meta","email","vars","NODE_ENVIRONMENT","sendEmailWithTemplate","From","To","TemplateAlias","Alias","TemplateModel","error","msgs","sendEmailBatchWithTemplates","filter","x","map","MessageStream","POST","updateCohort","GET","getCohortData","cohortId","parseInt","Number","isNaN","getToken","cohort","course_cohorts","findUnique","select","cohort_facilitators","completed","live","start_date","course","category_id","courses","slug","description","f","facilitator","Date","toISOString","all","watchers","watching_courses","findMany","watcher","Metadata","type","course_name","cohort_page_url","cohort_start_date","prettyDate","course_description","newData","cohortDataQuery","people","display_name","bio","pronouns","cohort_events","include","events","people_in_events","card_image","cohort_max_size","cost","duration","people_in_cohorts","enrolled","person","isFacilitator","everyone","p","event","produce","location","str","date","today","getDate","getMonth","getFullYear","toLocaleDateString","month","day","year","dateFromDateAndTimeInputs","time","dateParts","split","timeParts","slugify","specials","trim","replace","toLowerCase","usernameValidate","s","test","getTimeBetween","d1","d2","getTime","toFixed","stripePromise","getStripe","loadStripe","sortByDateAndName","a","b","cohortName","formHelper","reduce","acc","key","onChange","currentTarget","setTokenHeader","token","cookie","serialize","expires","now","httpOnly","sameSite","cookies","loginToken","parse","removeToken"],"mappings":"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","file":"pages/api/cohorts/[cohortId].js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import crypto from 'crypto'\nimport querystring from 'querystring'\nimport {DISCOURSE_URL} from 'src/constants'\nimport prisma from \"lib/prisma\";\nlet headers = {\n      \"Api-Key\": process.env.DISCOURSE_API_KEY || '',\n      \"Api-Username\": process.env.DISCOURSE_API_USERNAME || '',\n    }\n\nlet fetchWithBackoff = async (url: Parameters<typeof fetch>[0], options:Parameters<typeof fetch>[1], exponent: number = 1):ReturnType<typeof fetch> => {\n  let result = await fetch(url, options)\n  if(result.status === 429) {\n    let value = 1000 * (2**exponent)\n    await new Promise<void>((resolve)=>{\n      let backoff = Math.min(value + Math.floor(Math.random()*value), 64000)\n      setTimeout(()=>resolve(), backoff)\n    })\n    return fetchWithBackoff(url, options, exponent+1)\n  }\n  return result\n}\n\nexport type Category = {\n  topic_list: {\n    topics: Array<{\n      category_id: number\n      id: string\n      pinned: boolean\n      tags: string[]\n    }>\n  }\n}\n\nexport async function createGroup(group:{\n  name: string,\n  visibility_level: number,\n  owner_usernames: string | string[],\n  mentionable_level?: number,\n  messageable_level?: number\n}) {\n  console.log(group, \"grouphere\")\n  if(typeof group.owner_usernames !== 'string') group.owner_usernames = group.owner_usernames.join(',')\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/admin/groups`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({group})\n  })\n\n   console.log(result, \"grouphereafter\")\n\n  if(result.status !== 200) {\n    console.log(await result.text())\n    return false\n  }\n  return await result.json() as {basic_group: {id: number}}\n}\n\nexport async function updateTopic(topic:string, input: {category_id: number, title: string, raw: string, tags: string[]}, username?: string) {\n  await fetch (`${DISCOURSE_URL}${topic}`, {\n    method: \"PUT\",\n    headers:{\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({\n      tags: input.tags,\n      title: input.title\n    })\n  })\n\n  // Update the content\n  let topicData = await (await fetchWithBackoff(`${DISCOURSE_URL}${topic}.json`, {headers})).json()\n  let postID = topicData.post_stream.posts[0].id\n  await fetch (`${DISCOURSE_URL}/posts/${postID}`, {\n    method: \"PUT\",\n    headers:{\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({\n      post: {\n        raw: input.raw\n      }\n    })\n  })\n\n  // Update the owner\n  if(username) await fetchWithBackoff(`${DISCOURSE_URL}/t/${topicData.id}/change-owner`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({post_ids: [postID], username})\n  })\n}\n\nexport async function createTopic(input:{title: string, category: number | string, raw: string, tags?: string[]}, asUser?: string) {\n  console.log(asUser, \"asUser\")\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/posts.json`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers,\n      \"Api-Username\": headers[\"Api-Username\"]\n    },\n    body: JSON.stringify(input)\n  })\n  if(result.status !== 200) {\n    console.log(await result.text())\n  }\n  if(result.status === 200)  return await result.json() as {id: string, topic_id: number}\n}\n\nexport const createCategory = async (name: string, options?: {\n  slug?: string,\n  permissions?: {[key:string]:number},\n  parent_category_id?: number,\n  show_subcategory_list?: boolean,\n  subcategory_list_style?: \"rows_with_featured_topics\",\n  default_list_filter?:\"none\"\n}) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/categories.json`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({name, color: '0088CC', text_color: 'FFFFFF', ...options})\n  })\n  if(result.status === 200) return (await result.json()).category as {id: number, topic_url: string}\n  console.log(await result.text())\n  return false as const\n}\n\nexport async function updateGroup(id: number, name: string) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/g/${id}.json`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({name})\n  })\n  if(result.status !== 200) console.log(await result.text())\n  else {\n    \n    await prisma.discourse_groups.update({where:{id}, data:{name}})\n    return true\n  }\n}\n\nexport async function updateCategory (id: string | number, options: {permissions?: {[key:string]: number}, name: string, slug?: string}) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/categories/${id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({...options, color: '0088CC', text_color: 'FFFFFF'})\n  })\n  if(result.status !== 200) console.log(await result.text())\n  else return true\n}\nexport async function getCategory(path: string | number){\n  let res = await fetchWithBackoff(`${DISCOURSE_URL}/c/${path}.json`, {\n    method: 'GET',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n  })\n  if(res.status === 200){\n    let category = await res.json() as Category\n    return category\n  }\n  else console.log(await res.text())\n}\n\nexport const getUsername = async (userId:string):Promise<string | undefined> => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/u/by-external/${userId}.json`, {\n    method: \"GET\",\n    headers\n  })\n\n  if(result.status === 200) {\n    return (await result.json()).user.username as string\n  }\n  else return\n}\n\nexport const getGroupId = async (groupName:string) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/groups/${groupName}.json`, {\n    method: \"GET\",\n    headers\n  })\n  if(result.status === 200) return (await result.json()).group.id\n  return undefined\n}\n\nexport const addMember = async (groupId:number, username: string) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/groups/${groupId}/members.json`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({\n      usernames: username\n    })\n  })\n  return result.status  === 200\n}\n\nexport const getTaggedPost = async (c: string | number, tag: string) => {\n\n\n  let res = await fetchWithBackoff(`${DISCOURSE_URL}/c/${c}.json`, {\n    method: 'GET',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n  })\n\n  if(res.status !== 200) console.log(await res.text())\n  let category = await res.json() as Category\n  console.log(category.topic_list.topics, tag , \"category\")\n  let topicID = category.topic_list.topics.find((topic) => topic.tags && topic.tags.includes(tag))?.id\n  if(!topicID) return {text: '', id: ''}\n  let topicRequest = await fetchWithBackoff(`${DISCOURSE_URL}/raw/${topicID}`, {headers})\n  return {text: await topicRequest.text(), id: topicID}\n}\n\nexport const makeSSOPayload = (params: {[key:string]: string}) => {\n  let payload = (Buffer.from(querystring.stringify(params))).toString('base64')\n  const sig = crypto.createHmac('sha256', process.env.DISCOURSE_SECRET || '');\n  sig.update(payload)\n\n  let result = querystring.stringify({\n    sso:payload,\n    sig: sig.digest('hex')\n  })\n  return result\n}\n\nexport const syncSSO = async (params: {[key:string]: string})=>{\n  let payload = (Buffer.from(querystring.stringify(params))).toString('base64')\n  const sig = crypto.createHmac('sha256', process.env.DISCOURSE_SECRET || '');\n\n  sig.update(payload)\n  return fetchWithBackoff(`${DISCOURSE_URL}/admin/users/sync_sso`, {\n    method: \"POST\",\n    headers: {\n      \"Api-Key\": process.env.DISCOURSE_API_KEY || '',\n      \"Api-Username\": 'system',\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({\n      sso: payload,\n      sig: sig.digest('hex')\n    })\n  })\n}\n\nexport async function createPost(params:{topic_id: number,raw:string}) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/posts.json`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers,\n      \"Api-Username\":'system'\n    },\n    body: JSON.stringify(params)\n  })\n  console.log(result)\n}\n","import { NextApiRequest, NextApiResponse} from 'next'\nimport * as Sentry from '@sentry/node'\nimport { useState, useEffect} from 'react'\nimport useSWR from 'swr'\n\nexport type ResultType<T extends (...args:any)=> any> = PromiseReturn<ReturnType<T>>\nexport type Request = NextApiRequest\nexport type Success<T extends Result> = Extract<T, {status: 200}>['result']\nexport type Errors<T extends Result> = Exclude<T, {status: 200}>\n\ntype Handler = (req:Request) => Promise<Result>\ntype PromiseReturn<T> = T extends PromiseLike<infer U> ? U : T\n\ntype Result = {\n  status: number,\n  result: string | object | null | boolean\n  headers?: {\n    [key: string]: string | number | string[]\n  }\n}\n\ntype Methods = \"POST\" | \"GET\" | \"PUT\" | \"DELETE\"\n\nexport const APIHandler = (handler: Handler | Partial<{POST: Handler, GET: Handler, PUT: Handler, DELETE: Handler}>) => {\n  if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n    Sentry.init({ dsn: process.env.NEXT_PUBLIC_SENTRY_DSN});\n  }\n  return async (req:NextApiRequest, res: NextApiResponse) => {\n    let result\n    try {\n      if(typeof handler === 'object') {\n        let method = req.method as Methods\n        let methodHandler = handler[method]\n        if(!methodHandler) {\n          res.status(404).end()\n          return\n        }\n        result = await methodHandler(req)\n      }\n      else {\n        result = await handler(req)\n      }\n    }\n    catch(e) {\n      if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n        Sentry.captureException(e, {contexts: {headers: req.headers}})\n        await Sentry.flush(2000)\n      }\n      console.log(e)\n      return res.status(500).end()\n    }\n\n    if(result.headers) {\n      for(let header of Object.keys(result.headers)) {\n        res.setHeader(header, result.headers[header])\n      }\n    }\n    if(result.status!==200) console.log(result.result)\n    if(typeof result.result !== 'object') return res.status(result.status).send(result.result)\n    return res.status(result.status).json(result.result)\n  }\n}\n\nexport const multiRouteHandler = (query:string, handlers:{[key:string]: Handler}) => {\n  return APIHandler(async (req) => {\n    let route = (typeof req.query[query] === 'string')\n                 ? req.query[query] as string\n                 : req.query[query][0]\n    return handlers[route](req)\n  })\n}\n\nexport async function callApi<Msg extends object | string | null, R extends Omit<Result, 'headers'>> (endpoint:string, msg?: Msg, method?: Methods){\n    let result = await fetch(endpoint, {\n      method: method ? method : msg ? \"POST\" : \"GET\",\n      headers: {\n        'Content-type': (typeof msg === 'object') ? 'application/json' : 'text/html'\n      },\n      body: (typeof msg === 'string') ? msg : JSON.stringify(msg)\n    })\n\n    return {\n      status: result.status,\n      result: result.headers.get('Content-type')?.includes('application/json')\n        ? await result.json()\n        : await result.text()\n    } as R\n}\n\nexport type Status = 'normal' | 'error' | 'loading' | 'success'\nexport function useApi<Msg extends object | string | null, R extends Omit<Result, 'headers'>>(deps: any[], successCallback?: (result: Extract<R, {status:200}>['result'])=> any) {\n  let [state, setState] = useState<Status>('normal')\n  useEffect(()=> setState('normal'), deps)\n  let call= async (path: string, msg?: Msg, method?: Methods) => {\n    setState('loading')\n    let res = await callApi<Msg, R>(path, msg, method)\n    if(res.status === 200) {\n      if(successCallback) await successCallback(res.result)\n      setState('success')\n    }\n    else setState('error')\n    return res\n  }\n  return [state, call, setState] as const\n}\n\nexport function useApiData<R extends Omit<Result, 'headers'>>(path?: string, initialData?:R) {\n  return useSWR<Success<R>, Errors<R>>(path ? path : null, async (path)=>{\n    let res = await callApi<null, R>(path)\n    if(res.status = 200) return res.result\n    return res\n  }, {initialData})\n}\n","module.exports = require(\"@prisma/client\");","const globalAny:any = global;\nimport { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\nif (process.env.APP_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!globalAny.prisma) {\n    globalAny.prisma = new PrismaClient();\n  }\n  prisma = globalAny.prisma;\n}\n\nexport default prisma;","module.exports = require(\"@stripe/stripe-js/pure\");","module.exports = require(\"querystring\");","module.exports = require(\"crypto\");","import * as postmark from 'postmark'\nimport cohortEnrollmentMetadata from './templates/cohort-enrollment/meta.json'\nimport verifiyEmailMetadata from './templates/welcome/meta.json'\nimport resetPasswordMetadata from './templates/password-reset/meta.json'\nimport inviteToCourseMetadata from './templates/invite-to-course/meta.json'\nimport enrollNotificationMetada from './templates/enroll-notification/meta.json'\nimport unenrollMetadata from './templates/cohort-unenroll/meta.json'\nimport watchingNotificationMetadata from './templates/watching-notification/meta.json'\nimport eventRSVPMetadata from './templates/event-rsvp/meta.json'\nimport eventRSVPNoAccountMetadata from './templates/event-rsvp-no-account/meta.json'\nimport eventUpdateNoAccount from './templates/event-update-no-account/meta.json'\n\nimport { Hash } from 'postmark/dist/client/models/client/SupportingTypes'\n\nvar client = new postmark.ServerClient(process.env.POSTMARK_TOKEN || '');\n\nexport const sendResetPasswordEmail = sendEmail(resetPasswordMetadata)\nexport const sendVerificationEmail = sendEmail(verifiyEmailMetadata)\nexport const sendCohortEnrollmentEmail = sendEmail(cohortEnrollmentMetadata)\nexport const sendEventRSVPEmail = sendEmail(eventRSVPMetadata)\nexport const sendEventRSVPNoAccountEmail = sendEmail(eventRSVPNoAccountMetadata)\nexport const sendEventUpdateNoAccountEmail = sendBatchEmail(eventUpdateNoAccount)\nexport const sendInviteToCourseEmail = sendEmail(inviteToCourseMetadata)\nexport const sendEnrollNotificationEmaill = sendEmail(enrollNotificationMetada)\nexport const sendWatchingNotificationEmail = sendBatchEmail(watchingNotificationMetadata)\nexport const sendUnenrollEmail = sendEmail(unenrollMetadata)\n\ntype EmailMetadata = {\n  Alias: string,\n  TestRenderModel: object\n}\nexport function sendEmail<T extends EmailMetadata>(meta:T) {\n  return async function(\n    email: string,\n    vars?: T[\"TestRenderModel\"], data?: Partial<{Metadata?:Hash<string>, Attachments: Array<{Name: string, Content: string, ContentType: string, ContentID: string | null}>}>) {\n    if(process.env.NODE_ENVIRONMENT === 'production') {\n      try {\n          return client.sendEmailWithTemplate({\n                  From: `wecare@krakenedu.com`,\n                  To: email,\n                  TemplateAlias: meta.Alias,\n                  TemplateModel: vars,\n                  ...data\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n}\nexport function sendBatchEmail<T extends EmailMetadata>(meta:T) {\n  return (msgs:Array<{email: string, vars: T[\"TestRenderModel\"],data?: Partial<{Metadata?:Hash<string>, Attachments: Array<{Name: string, Content: string, ContentType: string, ContentID: string | null}>}>} | undefined>) => {\n    if(process.env.NODE_ENVIRONMENT === 'production') return client.sendEmailBatchWithTemplates(msgs.filter(x=>x!== undefined).map(msg=>{\n      return {\n         From: `wecare@krakenedu.com`,\n        To: msg?.email || '',\n        TemplateAlias: meta.Alias,\n        TemplateModel: msg?.vars || {},\n        MessageStream: \"notifications\",\n        ...msg?.data\n      }\n    }))\n  }\n}\n","import { ResultType, APIHandler, Request } from \"src/apiHelpers\"\nimport { getToken } from \"src/token\"\nimport { sendWatchingNotificationEmail } from \"emails\"\nimport { prettyDate } from \"src/utils\"\nimport produce from \"immer\"\nimport { updateCategory, updateGroup } from \"src/discourse\"\nimport prisma from \"lib/prisma\";\n\nexport type UpdateCohortMsg = {\n  data: Partial<{\n    completed: true\n    live: boolean\n    start_date: string,\n    name: string,\n    description: string\n  }>\n}\n\nexport type UpdateCohortResponse = ResultType<typeof updateCohort>\nexport type CohortResult = ResultType<typeof getCohortData>\n\nexport default APIHandler({POST: updateCohort, GET: getCohortData})\nasync function updateCohort(req:Request) {\n  let msg = req.body as Partial<UpdateCohortMsg>\n  let cohortId = parseInt(req.query.cohortId as string)\n  if(Number.isNaN(cohortId)) return {status: 400, result: \"ERROR: Cohort id is not a number\"} as const\n\n  if(!msg.data) return {status: 400, result: \"Error: invalid request, missing data\"} as const\n\n  let user = getToken(req)\n  if(!user) return {status: 400, result: \"ERROR: no user logged in'\"} as const\n  let cohort = await prisma.course_cohorts.findUnique({\n    where:{id:cohortId},\n    select: {\n      name: true,\n      cohort_facilitators: true,\n      completed: true,\n      live: true,\n      start_date: true,\n      course: true,\n      category_id: true,\n      discourse_groups: true,\n      courses: {\n        select: {\n          name: true,\n          slug: true,\n          description: true\n        }\n      }\n    }})\n  if(!cohort) return {status: 404, result: `No cohort with id ${cohortId} found`} as const\n  if(!cohort.cohort_facilitators.find(f=>user&&f.facilitator===user.id)) return {status:401, result:`ERROR: User is not facilitator of cohort`} as const\n\n  let completed\n  if(msg.data.completed && !cohort.completed) {\n    completed = (new Date()).toISOString()\n  }\n\n  if(msg.data.name && cohort.name !== msg.data.name) {\n    await Promise.all([\n      updateGroup(cohort.discourse_groups.id, cohort.courses.slug+'-'+msg.data.name),\n      updateCategory(cohort.category_id, {name: cohort.courses.slug+'-'+msg.data.name})\n    ])\n  }\n\n  if(cohort.live === false && msg.data.live === true) {\n    // If we're toggling a cohort live, notify those watching\n    let watchers = await prisma.watching_courses.findMany({\n      where: {course: cohort.course},\n      select: {email: true}\n    })\n    await sendWatchingNotificationEmail(watchers.map(watcher => {\n      if(!cohort) return\n      return {\n        email: watcher.email,\n        Metadata: {\n          type: \"course-watching-notification\",\n          course: cohort.course.toString(),\n        },\n        vars: {\n          course_name: cohort.courses.name,\n          cohort_page_url: `https://app.krakenedu.com/courses/${cohort.courses.slug}/${cohort.course}/cohorts/${cohortId}`,\n          cohort_start_date: prettyDate(cohort.start_date),\n          course_description: cohort.courses.description,\n        },\n      };\n    }))\n  }\n\n\n  let newData = await prisma.course_cohorts.update({\n    where: {id: cohortId},\n    data: {\n      live: msg.data.live,\n      completed,\n      name: msg.data.name,\n      start_date: msg.data.start_date,\n      description: msg.data.description\n    }\n  })\n  if(!newData) return {status: 404, result: `No cohort with id ${cohortId} found`} as const\n  return {status: 200, result: newData} as const\n}\n\nexport const cohortDataQuery = async (id: number, userId?: string)=>{\n  let data = await prisma.course_cohorts.findUnique({\n    where: {id},\n    select: {\n      description: true,\n      name: true,\n      category_id: true,\n      start_date: true,\n      id: true,\n      live: true,\n      completed: true,\n      cohort_facilitators: {\n        select:{facilitator: true, people:{select:{display_name: true, username: true, bio: true, pronouns: true}}}\n      },\n      people: {\n        select: {display_name: true, username: true, bio: true, pronouns: true}\n      },\n      cohort_events: {\n        include: {\n          events: {\n            include: {\n              people_in_events: {select:{people:{select:{username: true, display_name: true, id: true}}}},\n            }\n          }\n        }\n      },\n      courses: {\n        select: {\n          name: true,\n          card_image: true,\n          cohort_max_size: true,\n          id: true,\n          type: true,\n          slug: true,\n          cost: true,\n          duration: true,\n          description: true,\n          category_id: true\n        }\n      },\n      people_in_cohorts: {\n        include: {\n          people: {\n            select: {\n              display_name: true,\n              pronouns: true,\n              username: true,\n              email: true,\n            }\n          }\n        },\n      }\n    },\n  })\n  if(!data) return\n\n  let enrolled = data.people_in_cohorts.find(x=>x.person === userId)\n  let isFacilitator = data.cohort_facilitators.find(f=>f.facilitator === userId)\n\n  let cohort_events = data.cohort_events\n    .filter(c=> c.everyone ||\n      isFacilitator ||\n      (enrolled  && c.events.people_in_events.find(p=>p.people.id === userId)))\n    .map(event => produce(event, (e)=>{if(!enrolled && !isFacilitator) e.events.location = ''}))\n  let people_in_cohorts = data.people_in_cohorts.map(person => produce(person, (p)=>{if(!isFacilitator)p.people.email = ''}))\n  return {...data, cohort_events, people_in_cohorts}\n}\n\nasync function getCohortData(req: Request) {\n  let cohortId = parseInt(req.query.cohortId as string)\n  if(Number.isNaN(cohortId)) return {status: 400, result: \"ERROR: Cohort id is not a number\"} as const\n  let user = getToken(req)\n\n  let data = await cohortDataQuery(cohortId, user?.id)\n  if(!data) return {status: 404, result: `Error: no cohort with id ${cohortId} found`} as const\n\n  return {status: 200, result: data} as const\n}\n","module.exports = require(\"immer\");","module.exports = require(\"@sentry/node\");","module.exports = require(\"swr\");","module.exports = require(\"react\");","import { loadStripe } from '@stripe/stripe-js/pure'\n\nexport const prettyDate = (str: string) =>  {\n  let date = new Date(str)\n  let today = new Date()\n  if(date.getDate()===today.getDate() &&\n    date.getMonth()===today.getMonth() &&\n    date.getFullYear()===today.getFullYear()) return \"Today\"\n  return date.toLocaleDateString(undefined, {month: 'short', day: 'numeric', year: 'numeric'})\n}\n\nexport function dateFromDateAndTimeInputs(date: string, time: string){\n  let dateParts = date.split('-').map(x=>parseInt(x))\n  let timeParts = time.split(':').map(x=>parseInt(x))\n  return new Date(dateParts[0], dateParts[1] -1, dateParts[2], timeParts[0], timeParts[1])\n}\n\nexport const slugify = (str:string) => {\n  var specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~’]/g\n  return str.trim()\n    .replace(specials, '')\n    .replace(/\\s/g, '-')\n    .toLowerCase()\n}\n\nexport const usernameValidate = (s:string) => /^[a-zA-Z0-9_.\\-]{3,15}$/.test(s)\n\nexport function getTimeBetween(d1: Date, d2:Date) {\n  return ((d2.getTime() - d1.getTime()) / (1000 * 60 * 60)).toFixed(1)\n}\n\n\nlet stripePromise:ReturnType<typeof loadStripe>\nexport const getStripe = () => {\n  if (!stripePromise) {\n    stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY!)\n  }\n  return stripePromise\n}\n\nexport const sortByDateAndName = (a:{start_date: string, name: string}, b:{start_date:string, name: string}) => {\n  if(a.start_date === b.start_date) return a.name > b.name ? 1 : -1\n  return a.start_date > b.start_date ? 1 : -1\n}\n\nexport const cohortName = (name: string)=>isNaN(parseInt(name)) ? name  :`Cohort #${name}`\n\nexport function formHelper<S>(state:S, setState:(s:S)=>void) {\n  return Object.keys(state).reduce((acc, key)=> {\n    let value =state[key as keyof S]\n    acc[key as keyof S] = {\n      value,\n      onChange: (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>setState({\n        ...state,\n        [key]: typeof value === 'number' ? parseInt(e.currentTarget.value) : e.currentTarget.value\n      })\n    }\n    return acc\n  },  {} as {[k in keyof S]: {value: S[k], onChange: (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>void}})\n}\n","export let DISCOURSE_URL = 'https://forum.krakenedu.com'\n","module.exports = require(\"postmark\");","import { ServerResponse, IncomingMessage } from \"http\";\nimport cookie from 'cookie'\n\nexport type Token = {\n  email: string,\n  id: string,\n  username: string,\n  display_name?: string | null,\n  link?: string | null\n  bio?: string | null\n  admin?: boolean\n}\n\nexport function setTokenHeader(token:Token)  {\n  return {\n    'Set-Cookie':cookie.serialize('loginToken', JSON.stringify(token), {\n      path: '/',\n      expires: new Date(Date.now() + 1000 * 60 * 60 * 24 * 30), // 30 days\n      httpOnly: true,\n      sameSite: \"lax\"\n    })\n  }\n}\n\nexport function getToken(req:IncomingMessage) {\n  const cookies = req.headers.cookie\n  if (!cookies) return;\n\n  const { loginToken } = cookie.parse(cookies);\n  if(loginToken) return JSON.parse(loginToken) as Token;\n  return\n}\n\nexport function removeToken(res:ServerResponse) {\n  res.setHeader(\n      'Set-Cookie',\n      cookie.serialize('loginToken', '', {\n        path: '/',\n        expires: new Date(Date.now() - 1000),\n        httpOnly: false\n      })\n    );\n}\n","module.exports = require(\"cookie\");"],"sourceRoot":""}