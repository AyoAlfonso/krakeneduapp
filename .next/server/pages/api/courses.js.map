{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/discourse.ts","webpack:///./src/apiHelpers.ts","webpack:///external \"@prisma/client\"","webpack:///./lib/prisma.ts","webpack:///external \"@stripe/stripe-js/pure\"","webpack:///external \"querystring\"","webpack:///./writing/TemplateCourseDescription.txt","webpack:///./writing/TemplateClubDescription.txt","webpack:///./writing/TemplateCohortGettingStarted.txt","webpack:///./writing/TemplateCohortNotes.txt","webpack:///./writing/TemplateCohortArtifact.txt","webpack:///./writing/TemplateCohortAssignment.txt","webpack:///./writing/TemplateCohortEvent.txt","webpack:///./writing/TemplateCohortPrompt.txt","webpack:///./writing/TemplateCohortRetrospective.txt","webpack:///./pages/api/courses/index.ts","webpack:///external \"crypto\"","webpack:///external \"runtypes\"","webpack:///external \"@sentry/node\"","webpack:///external \"swr\"","webpack:///external \"react\"","webpack:///./src/utils.ts","webpack:///./src/constants.ts","webpack:///./src/token.ts","webpack:///external \"cookie\""],"names":["headers","process","env","DISCOURSE_API_KEY","DISCOURSE_API_USERNAME","fetchWithBackoff","url","options","exponent","result","fetch","status","value","Promise","resolve","backoff","Math","min","floor","random","setTimeout","createGroup","group","console","log","owner_usernames","join","DISCOURSE_URL","method","body","JSON","stringify","text","json","updateTopic","topic","input","username","tags","title","topicData","postID","post_stream","posts","id","post","raw","post_ids","createTopic","asUser","createCategory","name","color","text_color","category","updateGroup","prisma","discourse_groups","update","where","data","updateCategory","getCategory","path","res","getUsername","userId","user","getGroupId","groupName","undefined","addMember","groupId","usernames","getTaggedPost","c","tag","topic_list","topics","topicID","find","includes","topicRequest","makeSSOPayload","params","payload","Buffer","from","querystring","toString","sig","crypto","createHmac","DISCOURSE_SECRET","sso","digest","syncSSO","createPost","APIHandler","handler","NEXT_PUBLIC_SENTRY_DSN","Sentry","dsn","req","methodHandler","end","e","contexts","header","Object","keys","setHeader","send","multiRouteHandler","query","handlers","route","callApi","endpoint","msg","get","useApi","deps","successCallback","state","setState","useState","useEffect","call","useApiData","initialData","useSWR","globalAny","global","APP_ENV","PrismaClient","CreateCourseMsgValidator","t","type","description","cost","duration","prerequisites","maintainers","POST","createCourse","GET","getCourses","coursesQuery","courses","findMany","include","course_cohorts","AND","live","start_date","gt","Date","toISOString","select","people_in_cohorts","cohort","orderBy","check","getToken","isAdmin","admins","findUnique","person","people","email","in","mode","slug","slugify","length","maintainerGroupName","maintainerGroup","courseGroup","all","visibility_level","map","m","messageable_level","mentionable_level","permissions","show_subcategory_list","subcategory_list_style","default_list_filter","topic_url","category_id","TemplateClubDescription","TemplateCourseDescription","create","maintainer_groupTodiscourse_groups","basic_group","course_groupTodiscourse_groups","card_image","course_maintainers","connect","course_templates","content","TemplateCohortGettingStarted","required","TemplateCohortNotes","TemplateCohortArtifact","TemplateCohortAssignment","TemplateCohortEvent","TemplateCohortPrompt","TemplateCohortRetrospective","prettyDate","str","date","today","getDate","getMonth","getFullYear","toLocaleDateString","month","day","year","dateFromDateAndTimeInputs","time","dateParts","split","x","parseInt","timeParts","specials","trim","replace","toLowerCase","usernameValidate","s","test","getTimeBetween","d1","d2","getTime","toFixed","stripePromise","getStripe","loadStripe","sortByDateAndName","a","b","cohortName","isNaN","formHelper","reduce","acc","key","onChange","currentTarget","setTokenHeader","token","cookie","serialize","expires","now","httpOnly","sameSite","cookies","loginToken","parse","removeToken"],"mappings":"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","file":"pages/api/courses.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","import crypto from 'crypto'\nimport querystring from 'querystring'\nimport {DISCOURSE_URL} from 'src/constants'\nimport prisma from \"lib/prisma\";\nlet headers = {\n      \"Api-Key\": process.env.DISCOURSE_API_KEY || '',\n      \"Api-Username\": process.env.DISCOURSE_API_USERNAME || '',\n    }\n\nlet fetchWithBackoff = async (url: Parameters<typeof fetch>[0], options:Parameters<typeof fetch>[1], exponent: number = 1):ReturnType<typeof fetch> => {\n  let result = await fetch(url, options)\n  if(result.status === 429) {\n    let value = 1000 * (2**exponent)\n    await new Promise<void>((resolve)=>{\n      let backoff = Math.min(value + Math.floor(Math.random()*value), 64000)\n      setTimeout(()=>resolve(), backoff)\n    })\n    return fetchWithBackoff(url, options, exponent+1)\n  }\n  return result\n}\n\nexport type Category = {\n  topic_list: {\n    topics: Array<{\n      category_id: number\n      id: string\n      pinned: boolean\n      tags: string[]\n    }>\n  }\n}\n\nexport async function createGroup(group:{\n  name: string,\n  visibility_level: number,\n  owner_usernames: string | string[],\n  mentionable_level?: number,\n  messageable_level?: number\n}) {\n  console.log(group, \"grouphere\")\n  if(typeof group.owner_usernames !== 'string') group.owner_usernames = group.owner_usernames.join(',')\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/admin/groups`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({group})\n  })\n\n   console.log(result, \"grouphereafter\")\n\n  if(result.status !== 200) {\n    console.log(await result.text())\n    return false\n  }\n  return await result.json() as {basic_group: {id: number}}\n}\n\nexport async function updateTopic(topic:string, input: {category_id: number, title: string, raw: string, tags: string[]}, username?: string) {\n  await fetch (`${DISCOURSE_URL}${topic}`, {\n    method: \"PUT\",\n    headers:{\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({\n      tags: input.tags,\n      title: input.title\n    })\n  })\n\n  // Update the content\n  let topicData = await (await fetchWithBackoff(`${DISCOURSE_URL}${topic}.json`, {headers})).json()\n  let postID = topicData.post_stream.posts[0].id\n  await fetch (`${DISCOURSE_URL}/posts/${postID}`, {\n    method: \"PUT\",\n    headers:{\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({\n      post: {\n        raw: input.raw\n      }\n    })\n  })\n\n  // Update the owner\n  if(username) await fetchWithBackoff(`${DISCOURSE_URL}/t/${topicData.id}/change-owner`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers\n    },\n    body: JSON.stringify({post_ids: [postID], username})\n  })\n}\n\nexport async function createTopic(input:{title: string, category: number | string, raw: string, tags?: string[]}, asUser?: string) {\n  console.log(asUser, \"asUser\")\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/posts.json`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers,\n      \"Api-Username\": headers[\"Api-Username\"]\n    },\n    body: JSON.stringify(input)\n  })\n  if(result.status !== 200) {\n    console.log(await result.text())\n  }\n  if(result.status === 200)  return await result.json() as {id: string, topic_id: number}\n}\n\nexport const createCategory = async (name: string, options?: {\n  slug?: string,\n  permissions?: {[key:string]:number},\n  parent_category_id?: number,\n  show_subcategory_list?: boolean,\n  subcategory_list_style?: \"rows_with_featured_topics\",\n  default_list_filter?:\"none\"\n}) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/categories.json`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({name, color: '0088CC', text_color: 'FFFFFF', ...options})\n  })\n  if(result.status === 200) return (await result.json()).category as {id: number, topic_url: string}\n  console.log(await result.text())\n  return false as const\n}\n\nexport async function updateGroup(id: number, name: string) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/g/${id}.json`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({name})\n  })\n  if(result.status !== 200) console.log(await result.text())\n  else {\n    \n    await prisma.discourse_groups.update({where:{id}, data:{name}})\n    return true\n  }\n}\n\nexport async function updateCategory (id: string | number, options: {permissions?: {[key:string]: number}, name: string, slug?: string}) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/categories/${id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({...options, color: '0088CC', text_color: 'FFFFFF'})\n  })\n  if(result.status !== 200) console.log(await result.text())\n  else return true\n}\nexport async function getCategory(path: string | number){\n  let res = await fetchWithBackoff(`${DISCOURSE_URL}/c/${path}.json`, {\n    method: 'GET',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n  })\n  if(res.status === 200){\n    let category = await res.json() as Category\n    return category\n  }\n  else console.log(await res.text())\n}\n\nexport const getUsername = async (userId:string):Promise<string | undefined> => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/u/by-external/${userId}.json`, {\n    method: \"GET\",\n    headers\n  })\n\n  if(result.status === 200) {\n    return (await result.json()).user.username as string\n  }\n  else return\n}\n\nexport const getGroupId = async (groupName:string) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/groups/${groupName}.json`, {\n    method: \"GET\",\n    headers\n  })\n  if(result.status === 200) return (await result.json()).group.id\n  return undefined\n}\n\nexport const addMember = async (groupId:number, username: string) => {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/groups/${groupId}/members.json`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({\n      usernames: username\n    })\n  })\n  return result.status  === 200\n}\n\nexport const getTaggedPost = async (c: string | number, tag: string) => {\n\n\n  let res = await fetchWithBackoff(`${DISCOURSE_URL}/c/${c}.json`, {\n    method: 'GET',\n    headers: {\n      ...headers,\n      \"Content-Type\": 'application/json; charset=utf-8',\n    },\n  })\n\n  if(res.status !== 200) console.log(await res.text())\n  let category = await res.json() as Category\n  console.log(category.topic_list.topics, tag , \"category\")\n  let topicID = category.topic_list.topics.find((topic) => topic.tags && topic.tags.includes(tag))?.id\n  if(!topicID) return {text: '', id: ''}\n  let topicRequest = await fetchWithBackoff(`${DISCOURSE_URL}/raw/${topicID}`, {headers})\n  return {text: await topicRequest.text(), id: topicID}\n}\n\nexport const makeSSOPayload = (params: {[key:string]: string}) => {\n  let payload = (Buffer.from(querystring.stringify(params))).toString('base64')\n  const sig = crypto.createHmac('sha256', process.env.DISCOURSE_SECRET || '');\n  sig.update(payload)\n\n  let result = querystring.stringify({\n    sso:payload,\n    sig: sig.digest('hex')\n  })\n  return result\n}\n\nexport const syncSSO = async (params: {[key:string]: string})=>{\n  let payload = (Buffer.from(querystring.stringify(params))).toString('base64')\n  const sig = crypto.createHmac('sha256', process.env.DISCOURSE_SECRET || '');\n\n  sig.update(payload)\n  return fetchWithBackoff(`${DISCOURSE_URL}/admin/users/sync_sso`, {\n    method: \"POST\",\n    headers: {\n      \"Api-Key\": process.env.DISCOURSE_API_KEY || '',\n      \"Api-Username\": 'system',\n      \"Content-Type\": 'application/json; charset=utf-8'\n    },\n    body: JSON.stringify({\n      sso: payload,\n      sig: sig.digest('hex')\n    })\n  })\n}\n\nexport async function createPost(params:{topic_id: number,raw:string}) {\n  let result = await fetchWithBackoff(`${DISCOURSE_URL}/posts.json`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json; charset=utf-8',\n      ...headers,\n      \"Api-Username\":'system'\n    },\n    body: JSON.stringify(params)\n  })\n  console.log(result)\n}\n","import { NextApiRequest, NextApiResponse} from 'next'\nimport * as Sentry from '@sentry/node'\nimport { useState, useEffect} from 'react'\nimport useSWR from 'swr'\n\nexport type ResultType<T extends (...args:any)=> any> = PromiseReturn<ReturnType<T>>\nexport type Request = NextApiRequest\nexport type Success<T extends Result> = Extract<T, {status: 200}>['result']\nexport type Errors<T extends Result> = Exclude<T, {status: 200}>\n\ntype Handler = (req:Request) => Promise<Result>\ntype PromiseReturn<T> = T extends PromiseLike<infer U> ? U : T\n\ntype Result = {\n  status: number,\n  result: string | object | null | boolean\n  headers?: {\n    [key: string]: string | number | string[]\n  }\n}\n\ntype Methods = \"POST\" | \"GET\" | \"PUT\" | \"DELETE\"\n\nexport const APIHandler = (handler: Handler | Partial<{POST: Handler, GET: Handler, PUT: Handler, DELETE: Handler}>) => {\n  if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n    Sentry.init({ dsn: process.env.NEXT_PUBLIC_SENTRY_DSN});\n  }\n  return async (req:NextApiRequest, res: NextApiResponse) => {\n    let result\n    try {\n      if(typeof handler === 'object') {\n        let method = req.method as Methods\n        let methodHandler = handler[method]\n        if(!methodHandler) {\n          res.status(404).end()\n          return\n        }\n        result = await methodHandler(req)\n      }\n      else {\n        result = await handler(req)\n      }\n    }\n    catch(e) {\n      if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n        Sentry.captureException(e, {contexts: {headers: req.headers}})\n        await Sentry.flush(2000)\n      }\n      console.log(e)\n      return res.status(500).end()\n    }\n\n    if(result.headers) {\n      for(let header of Object.keys(result.headers)) {\n        res.setHeader(header, result.headers[header])\n      }\n    }\n    if(result.status!==200) console.log(result.result)\n    if(typeof result.result !== 'object') return res.status(result.status).send(result.result)\n    return res.status(result.status).json(result.result)\n  }\n}\n\nexport const multiRouteHandler = (query:string, handlers:{[key:string]: Handler}) => {\n  return APIHandler(async (req) => {\n    let route = (typeof req.query[query] === 'string')\n                 ? req.query[query] as string\n                 : req.query[query][0]\n    return handlers[route](req)\n  })\n}\n\nexport async function callApi<Msg extends object | string | null, R extends Omit<Result, 'headers'>> (endpoint:string, msg?: Msg, method?: Methods){\n    let result = await fetch(endpoint, {\n      method: method ? method : msg ? \"POST\" : \"GET\",\n      headers: {\n        'Content-type': (typeof msg === 'object') ? 'application/json' : 'text/html'\n      },\n      body: (typeof msg === 'string') ? msg : JSON.stringify(msg)\n    })\n\n    return {\n      status: result.status,\n      result: result.headers.get('Content-type')?.includes('application/json')\n        ? await result.json()\n        : await result.text()\n    } as R\n}\n\nexport type Status = 'normal' | 'error' | 'loading' | 'success'\nexport function useApi<Msg extends object | string | null, R extends Omit<Result, 'headers'>>(deps: any[], successCallback?: (result: Extract<R, {status:200}>['result'])=> any) {\n  let [state, setState] = useState<Status>('normal')\n  useEffect(()=> setState('normal'), deps)\n  let call= async (path: string, msg?: Msg, method?: Methods) => {\n    setState('loading')\n    let res = await callApi<Msg, R>(path, msg, method)\n    if(res.status === 200) {\n      if(successCallback) await successCallback(res.result)\n      setState('success')\n    }\n    else setState('error')\n    return res\n  }\n  return [state, call, setState] as const\n}\n\nexport function useApiData<R extends Omit<Result, 'headers'>>(path?: string, initialData?:R) {\n  return useSWR<Success<R>, Errors<R>>(path ? path : null, async (path)=>{\n    let res = await callApi<null, R>(path)\n    if(res.status = 200) return res.result\n    return res\n  }, {initialData})\n}\n","module.exports = require(\"@prisma/client\");","const globalAny:any = global;\nimport { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\nif (process.env.APP_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!globalAny.prisma) {\n    globalAny.prisma = new PrismaClient();\n  }\n  prisma = globalAny.prisma;\n}\n\nexport default prisma;","module.exports = require(\"@stripe/stripe-js/pure\");","module.exports = require(\"querystring\");","export default \"This is a template for a detailed description of this course — an overview of its entire curriculum. \\n\\nPlease edit this topic to include most or all of the elements listed below!\\n\\nNote that the following will be included on the course details page, and don't have to be added here:\\n\\n- Title (max 50 characters)\\n- Short description (max 200 characters)\\n- Cost\\n- Requirements (short prerequisites)\\n\\n## Course Goals\\n\\nReplace with: a brief overview of what material the course covers, and its overall learning goals.\\n\\n## Structure\\n\\nReplace with: summary of how many sessions, how often you meet, estimate of time required, etc. You don't need a detailed schedule — you'll create an \\\"event\\\" for each meeting, per cohort.\\n\\n## Syllabus / Schedule\\n\\nReplace with: an outline of what will be covered in each week of the course (or whatever cadence you choose).\\n\\nNote that this should be generalized e.g. \\\"Week 1, Week 2…\\\" — when the course is run, each cohort's schedule will include its specific dates and times.\\n\\n## Artifacts\\n\\nReplace with: tangible outcomes of the course — specific goals for final projects, evaluations, next steps, or any other specific output your course may produce.\\n\\n## Who Should Sign Up\\n\\nReplace with: further detail on prerequisites for the course, and description of its ideal participant — who would get the most out of this course? Who is it *not* for?\\n\\n## Anything Else…\\n\\nReplace with: anything else that you think is essential for participants to know! Feel free to rename this section or add additional ones as needed. Or if nothing comes to mind, simply remove this section.\";","export default \"This is a template for including details about this club.\\n\\nPlease edit this topic to include most or all of the elements listed below!\\n\\nNote that the following will be included on the club details page, and don't have to be added here:\\n\\n- Title (max 50 characters)\\n- Short description (max 200 characters)\\n- Cost\\n- Requirements (short prerequisites)\\n\\n## Learning Goals\\n\\nReplace with: a brief overview of what material the Club will cover, and its overall learning goals. Are there specific outcomes you're aiming for? Any concrete artifacts expected? Questions you're exploring?\\n\\n## Structure\\n\\nReplace with: summary of how many sessions, how often you meet, estimate of time required, etc. You don't need a detailed schedule — you'll create an \\\"event\\\" for each meeting.\\n\\n## Who Should Sign Up\\n\\nReplace with: description of the ideal participant — who would get the most out of this Club? Who is it *not* for?\\n\\n## Anything Else…\\n\\nReplace with: anything else that you think is essential for participants to know! Feel free to rename this section, remove, or add additional ones as needed.\";","export default \"This is a template for outlining a few simple steps for how participants in this cohort should get started.\\n\\nPlease edit this topic to include most or all of the following elements — or anything else you like!\\n\\n## Introductions\\n\\nReplace with: brief note encouraging participants to introduce themselves in this topic. Something like:\\n\\nPlease post a brief intro below! Let everyone know who you are, why you signed up, and what you hope to learn. And say hello to other participants; let's get to know each other!\\n\\n## Logistics\\n\\nReplace with: notes about any logistical details participants need to know. \\n\\nAny other tools / services participants will need to sign up for or download (e.g. Google Drive, Zoom, etc.)? Materials to prepare? Be sure to let everyone know any preliminary action items.\\n\\nThis topic contains details for this particular cohort. Right now you're in our private forum just for members of this cohort.\\n\\n## Start Learning!\\n\\nReplace with: any day-one action items that participants should complete prior to your first meeting. First reading(s) or assignment(s)? Share those here.\";","export default \"This is a template for adding additional information specific to this particular cohort of the course. \\n\\nPlease edit this topic to include most or all of the elements listed below!\\n\\n❗️**Important:** The contents of this post will automatically get published on the cohort page. That means it'll be publicly available for ANYONE, not just learners in this cohort, to see. Don't post anything you wouldn't want everyone to know (like links to video conference calls).\\n\\nAll *other* posts in this forum category are private to participants in this cohort. Note that each course also has its own forum space, parent to this one, that is publicly visible.\\n\\n## Schedule\\n\\nReplace with: brief outline of your schedule for this particular cohort, with any important meetings or deadlines.\\n\\nIf your meetings are regularly scheduled (for example, every Monday for six weeks), be sure to list any days when the course will deviate from the norm (rescheduling around holidays, for example).\\n\\n**Note:** You'll create a detailed schedule of all events on the cohort page, so this is best as a summary.\\n\\n## Amendments\\n\\nReplace with: anything changes to the curriculum specific to this cohort, that deviate from or override the main course description.\\n\\n## Anything Else…\\n\\nReplace with: anything else about this cohort that you think is essential for participants to know! For example any particular thematic focus or learning experiments you want to explore…\\n\\nFeel free to rename this section or add additional ones as needed. Or if nothing comes to mind, simply remove this section.\";","export default \"This is a template for collecting the artifact resulting from this cohort — a final, publicly viewable summary of what participants learned or created during the course.\\n\\n❗️**Important:** The contents of this post will appear on the cohort page, visible to everyone. Don't post anything you don't want to be publicly shared.\\n\\nPlease edit this topic with an artifact that makes sense for your course.\\n\\n## [Artifact Title]\\n\\nReplace with: summary description of what the cohort created or learned together.\\n\\nThis may be a final writeup, a summary of each participant's project, a link roundup to externally hosted  assignments — whatever makes sense for your course.\\n\\nNote that participants can reply to this post, but only this initial post of the topic will be published to the cohort page as its public artifact.\";","export default \"This is a template for an assignment you want to give participants in this cohort.\\n\\nPlease edit this topic with description, instructions, or anything else that makes sense for the assignment you'd like to share. The text below is just a starting point.\\n\\n## [Assignment Title]\\n\\nReplace with: summary description of the assignment. What are participants creating? What's the learning goal in the context of this course?\\n\\n## Instructions\\n\\nReplace with: details on the expected format or process for completing the assignment.\\n\\nExample (for a final writeup):\\n\\n- Please post a link to a Google Doc with 500 words on what you learned\\n- Make sure that sharing is turned on so others can comment\\n\\nExample (for a photography workshop)\\n\\n- Select your three favorite photos from the week's theme\\n- Upload them to a post here, each preceded with a one-paragraph description\";","export default \"This is a template for details / discussion related to a specific event in your cohort.\\n\\nPlease edit this topic to include most or all of the elements listed below!\\n\\n❗️**Important:** Please schedule each event from the main cohort page. This template is not the main way to create an event, but may be useful as a reminder, a way to share related details, or collaborate on event notes.\\n\\n## [Event Title]\\n\\nReplace with: short description of the event; any additional info beyond what you included in the event description on the cohort page.\\n\\n## Details / Instructions\\n\\nReplace with: further details about the event, if needed. How to join, anything participants need to do to prepare; etc.\";","export default \"This is a template for a prompt — a question or discussion topic you'd like participants to discuss or respond to.\\n\\nPlease edit this topic to include any details necessary to spark this discussion!\\n\\n## [Prompt Title]\\n\\nReplace with: the prompt itself, with as much detail as you need, and how you'd like participants to respond below.\";","export default \"This is a template for your cohort to run a retrospective — collecting valuable feedback from participants that will help the course improve over time.\\n\\nPlease edit this topic to include most or all of the following elements — or anything else you like!\\n\\n## Questions\\n\\nReplace with: particular questions you'd like students to answer at the end of the cohort, aimed at helping your course improve.\\n\\nThe questions below are just examples. You'll get better feedback if you ask targeted questions about specific aspects of your course. Tweak these questions, or write your own!\\n\\n- What did you expect to get out of this course? Were those expectations met? If not, how do you feel about the progress you made in this course (if any)?\\n- What specific things (moments, techniques, conversations) did you feel were most useful to learning in this course?\\n- What do you wish we'd spent more time on? Anything you felt we should add?\\n- What's one thing you'd suggest we change or remove?\\n- Please share anything else you'd like us to know!\\n\\nParticipants: you can quote some or all of these questions to structure your replies below.\\n\\n## Sharing the Retro\\n\\nReplace with: how the info from this retrospective will be used to improve the course. For example:\\n\\nThe maintainers of this course will review all feedback collected in this retrospective process. We'll think hard about how we can improve the course structure, specific processes, even particular assignments, questions, or readings.\\n\\nWe may follow up if we want to get more detail on anything mentioned below. \\n\\nThanks so much for taking the time to help us improve this course — we really appreciate it!\";","import * as t from \"runtypes\";\nimport { getUsername, createGroup, createCategory, updateTopic } from '../../../src/discourse'\nimport TemplateCourseDescription from '../../../writing/TemplateCourseDescription.txt'\nimport TemplateClubDescription from '../../../writing/TemplateClubDescription.txt'\nimport {getToken} from '../../../src/token'\nimport { ResultType, Request, APIHandler} from '../../../src/apiHelpers'\nimport TemplateCohortGettingStarted from 'writing/TemplateCohortGettingStarted.txt'\nimport TemplateCohortNotes from 'writing/TemplateCohortNotes.txt'\nimport TemplateCohortArtifact from 'writing/TemplateCohortArtifact.txt'\nimport TemplateCohortAssignment from 'writing/TemplateCohortAssignment.txt'\nimport TemplateCohortEvent from 'writing/TemplateCohortEvent.txt'\nimport TemplateCohortPrompt from 'writing/TemplateCohortPrompt.txt'\nimport TemplateCohortRetrospective from 'writing/TemplateCohortRetrospective.txt'\nimport {slugify} from 'src/utils'\n\nimport prisma from \"lib/prisma\";\n\nexport type CourseResult = ResultType<typeof getCourses>\nexport type CreateCourseMsg = t.Static<typeof CreateCourseMsgValidator>\nconst CreateCourseMsgValidator = t.Record({\n  type: t.Union(t.Literal('club'), t.Literal('course'), t.Undefined),\n  description: t.String,\n  name: t.String,\n  cost: t.Number,\n  duration: t.String,\n  prerequisites: t.String,\n  maintainers: t.Array(t.String)\n})\n\nexport type CreateCourseResponse = ResultType<typeof createCourse>\n\nexport default APIHandler({POST: createCourse, GET: getCourses})\n\nexport const coursesQuery = (options?:Partial<{type:'course' | 'club'}>) => prisma.courses.findMany({\n  where: {status: \"live\", type: options?.type || undefined},\n  include: {\n    course_cohorts: {\n      where: {AND: [{live:true}, {start_date: {gt: (new Date()).toISOString()}}]},\n      select: {name: true, start_date: true, id: true, people_in_cohorts: {select:{cohort: true}}},\n      orderBy: {start_date: \"desc\"},\n    }\n  }\n})\n\nasync function getCourses(req:Request) {\n  let courses = await coursesQuery(req.query)\n  return {status: 200, result: {courses}} as const\n}\n\n\nasync function createCourse(req: Request) {\n  let msg;\n  try {\n    msg = CreateCourseMsgValidator.check(req.body);\n  } catch (e) {\n    return { status: 400, result: e.toString() } as const;\n  }\n  \n\n  let user = getToken(req);\n  if (!user)\n    return { status: 403, result: \"ERROR: no user logged in\" } as const;\n\n  let isAdmin = await prisma.admins.findUnique({ where: { person: user.id } });\n  if (!isAdmin)\n    return { status: 403, result: \"ERROR: user is not an admin\" } as const;\n\n  let maintainers = await prisma.people.findMany({\n    where: { email: { in: msg.maintainers, mode: \"insensitive\" } },\n    select: { username: true, id: true },\n  });\n\n\n  let slug = slugify(msg.name);\n  if (maintainers.length === 0)\n    return {\n      status: 400,\n      result:\n        \"ERROR: No maintainers provided, or found with the emails provided\",\n    };\n\n  let maintainerGroupName = slug + \"-m\";\n  let [maintainerGroup, courseGroup] = await Promise.all([\n    createGroup({\n      name: maintainerGroupName,\n      visibility_level: 2,\n      owner_usernames: maintainers.map((m) => m.username),\n      messageable_level: 3,\n      mentionable_level: 99,\n    }),\n    createGroup({\n      name: slug,\n      visibility_level: 2,\n      owner_usernames: maintainers.map((m) => m.username),\n      messageable_level: 3,\n      mentionable_level: 3,\n    }),\n  ]);\n  if (!maintainerGroup || !courseGroup)\n    return {\n      status: 500,\n      result: \"ERROR: couldn't create course maintainers group\",\n    } as const;\n\n  let category = await createCategory(msg.name, {\n    slug,\n    permissions: { [maintainerGroupName]: 1 },\n    show_subcategory_list: true,\n    subcategory_list_style: \"rows_with_featured_topics\",\n    default_list_filter: \"none\",\n  });\n  if (!category)\n    return {\n      status: 500,\n      result: \"ERROR: couldn't create course category\",\n    } as const;\n  await updateTopic(\n    category.topic_url,\n    {\n      category_id: category.id,\n      title: `${msg.name} ${msg.type === \"club\" ? \"Details\" : \"Curriculum\"}`,\n      tags: [\"curriculum\"],\n      raw:\n        msg.type === \"club\"\n          ? TemplateClubDescription\n          : TemplateCourseDescription,\n    },\n    await getUsername(maintainers[0].id)\n  );\n\n  await prisma.courses.create({\n    data: {\n      maintainer_groupTodiscourse_groups: {\n        create: {\n          id: maintainerGroup.basic_group.id,\n          name: maintainerGroupName,\n        },\n      },\n      course_groupTodiscourse_groups: {\n        create: {\n          id: courseGroup.basic_group.id,\n          name: slug,\n        },\n      },\n      category_id: category.id,\n      slug: slugify(msg.name),\n      name: msg.name,\n      status: msg.type === \"club\" ? \"live\" : \"draft\",\n      card_image:\n        msg.type === \"club\"\n          ? \"https://hyperlink-data.nyc3.cdn.digitaloceanspaces.com/icons/EmojiSet/Sparkle.png,https://hyperlink-data.nyc3.cdn.digitaloceanspaces.com/icons/EmojiSet/Sparkle.png,https://hyperlink-data.nyc3.cdn.digitaloceanspaces.com/icons/EmojiSet/Sparkle.png\"\n          : undefined,\n      description: msg.description,\n      duration: msg.duration,\n      prerequisites: msg.prerequisites,\n      cost: msg.cost,\n      type: msg.type,\n      course_maintainers: {\n        create: msg.maintainers.map((email) => {\n          return {\n            people: {\n              connect: { email },\n            },\n          };\n        }),\n      },\n      course_templates: {\n        create: [\n          {\n            content: TemplateCohortGettingStarted,\n            name: \"Getting Started\",\n            title: \"Getting Started\",\n            type: \"prepopulated\",\n            required: true,\n          },\n          {\n            content: TemplateCohortNotes,\n            name: \"Notes\",\n            title: \"Notes\",\n            type: \"prepopulated\",\n            required: true,\n          },\n          {\n            content: TemplateCohortArtifact,\n            name: \"Artifact\",\n            title: \"Artifact\",\n            type: \"triggered\",\n            required: true,\n          },\n          {\n            content: TemplateCohortAssignment,\n            name: \"Assignment\",\n            title: \"Assignment\",\n            type: \"triggered\",\n            required: false,\n          },\n          {\n            content: TemplateCohortEvent,\n            name: \"Event\",\n            title: \"Event\",\n            type: \"triggered\",\n            required: false,\n          },\n          {\n            content: TemplateCohortPrompt,\n            name: \"Prompt\",\n            title: \"Prompt\",\n            type: \"triggered\",\n            required: false,\n          },\n          {\n            content: TemplateCohortRetrospective,\n            name: \"Retrospective\",\n            title: \"Retrospective\",\n            type: \"triggered\",\n            required: false,\n          },\n        ],\n      },\n    },\n  });\n  return { status: 200, result: \"Course created\" };\n}\n","module.exports = require(\"crypto\");","module.exports = require(\"runtypes\");","module.exports = require(\"@sentry/node\");","module.exports = require(\"swr\");","module.exports = require(\"react\");","import { loadStripe } from '@stripe/stripe-js/pure'\n\nexport const prettyDate = (str: string) =>  {\n  let date = new Date(str)\n  let today = new Date()\n  if(date.getDate()===today.getDate() &&\n    date.getMonth()===today.getMonth() &&\n    date.getFullYear()===today.getFullYear()) return \"Today\"\n  return date.toLocaleDateString(undefined, {month: 'short', day: 'numeric', year: 'numeric'})\n}\n\nexport function dateFromDateAndTimeInputs(date: string, time: string){\n  let dateParts = date.split('-').map(x=>parseInt(x))\n  let timeParts = time.split(':').map(x=>parseInt(x))\n  return new Date(dateParts[0], dateParts[1] -1, dateParts[2], timeParts[0], timeParts[1])\n}\n\nexport const slugify = (str:string) => {\n  var specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~’]/g\n  return str.trim()\n    .replace(specials, '')\n    .replace(/\\s/g, '-')\n    .toLowerCase()\n}\n\nexport const usernameValidate = (s:string) => /^[a-zA-Z0-9_.\\-]{3,15}$/.test(s)\n\nexport function getTimeBetween(d1: Date, d2:Date) {\n  return ((d2.getTime() - d1.getTime()) / (1000 * 60 * 60)).toFixed(1)\n}\n\n\nlet stripePromise:ReturnType<typeof loadStripe>\nexport const getStripe = () => {\n  if (!stripePromise) {\n    stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY!)\n  }\n  return stripePromise\n}\n\nexport const sortByDateAndName = (a:{start_date: string, name: string}, b:{start_date:string, name: string}) => {\n  if(a.start_date === b.start_date) return a.name > b.name ? 1 : -1\n  return a.start_date > b.start_date ? 1 : -1\n}\n\nexport const cohortName = (name: string)=>isNaN(parseInt(name)) ? name  :`Cohort #${name}`\n\nexport function formHelper<S>(state:S, setState:(s:S)=>void) {\n  return Object.keys(state).reduce((acc, key)=> {\n    let value =state[key as keyof S]\n    acc[key as keyof S] = {\n      value,\n      onChange: (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>setState({\n        ...state,\n        [key]: typeof value === 'number' ? parseInt(e.currentTarget.value) : e.currentTarget.value\n      })\n    }\n    return acc\n  },  {} as {[k in keyof S]: {value: S[k], onChange: (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>void}})\n}\n","export let DISCOURSE_URL = 'https://forum.krakenedu.com'\n","import { ServerResponse, IncomingMessage } from \"http\";\nimport cookie from 'cookie'\n\nexport type Token = {\n  email: string,\n  id: string,\n  username: string,\n  display_name?: string | null,\n  link?: string | null\n  bio?: string | null\n  admin?: boolean\n}\n\nexport function setTokenHeader(token:Token)  {\n  return {\n    'Set-Cookie':cookie.serialize('loginToken', JSON.stringify(token), {\n      path: '/',\n      expires: new Date(Date.now() + 1000 * 60 * 60 * 24 * 30), // 30 days\n      httpOnly: true,\n      sameSite: \"lax\"\n    })\n  }\n}\n\nexport function getToken(req:IncomingMessage) {\n  const cookies = req.headers.cookie\n  if (!cookies) return;\n\n  const { loginToken } = cookie.parse(cookies);\n  if(loginToken) return JSON.parse(loginToken) as Token;\n  return\n}\n\nexport function removeToken(res:ServerResponse) {\n  res.setHeader(\n      'Set-Cookie',\n      cookie.serialize('loginToken', '', {\n        path: '/',\n        expires: new Date(Date.now() - 1000),\n        httpOnly: false\n      })\n    );\n}\n","module.exports = require(\"cookie\");"],"sourceRoot":""}