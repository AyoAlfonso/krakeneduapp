{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/apiHelpers.ts","webpack:///external \"@prisma/client\"","webpack:///./lib/prisma.ts","webpack:///./src/hmac.ts","webpack:///./pages/api/user/resetPassword/[action].ts","webpack:///external \"crypto\"","webpack:///./emails/index.ts","webpack:///external \"@sentry/node\"","webpack:///external \"swr\"","webpack:///external \"react\"","webpack:///external \"postmark\"","webpack:///external \"uuid\"","webpack:///external \"bcryptjs\""],"names":["APIHandler","handler","process","env","NEXT_PUBLIC_SENTRY_DSN","Sentry","dsn","req","res","result","method","methodHandler","status","end","e","contexts","headers","console","log","header","Object","keys","setHeader","send","json","multiRouteHandler","query","handlers","route","callApi","endpoint","msg","fetch","body","JSON","stringify","get","includes","text","useApi","deps","successCallback","state","setState","useState","useEffect","call","path","useApiData","initialData","useSWR","globalAny","global","prisma","APP_ENV","PrismaClient","input","hmac","crypto","createHmac","update","digest","request","requestResetPassword","reset","resetPassword","email","user","findUser","key","createResetKey","origin","URL","referer","url","sendResetPasswordEmail","action_url","name","display_name","username","password","hash","resetKey","getResetKey","date","Date","created_time","now","getTime","updatePassword","password_reset_keys","findUnique","where","key_hash","uuidv4","create","data","toISOString","people","newPassword","password_hash","bcrypt","genSalt","delete","client","postmark","POSTMARK_TOKEN","sendEmail","resetPasswordMetadata","sendVerificationEmail","verifiyEmailMetadata","sendCohortEnrollmentEmail","cohortEnrollmentMetadata","sendEventRSVPEmail","eventRSVPMetadata","sendEventRSVPNoAccountEmail","eventRSVPNoAccountMetadata","sendEventUpdateNoAccountEmail","sendBatchEmail","eventUpdateNoAccount","sendInviteToCourseEmail","inviteToCourseMetadata","sendEnrollNotificationEmaill","enrollNotificationMetada","sendWatchingNotificationEmail","watchingNotificationMetadata","sendUnenrollEmail","unenrollMetadata","meta","vars","NODE_ENVIRONMENT","sendEmailWithTemplate","From","To","TemplateAlias","Alias","TemplateModel","error","msgs","sendEmailBatchWithTemplates","filter","x","undefined","map","MessageStream"],"mappings":"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","file":"pages/api/user/resetPassword/[action].js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","import { NextApiRequest, NextApiResponse} from 'next'\nimport * as Sentry from '@sentry/node'\nimport { useState, useEffect} from 'react'\nimport useSWR from 'swr'\n\nexport type ResultType<T extends (...args:any)=> any> = PromiseReturn<ReturnType<T>>\nexport type Request = NextApiRequest\nexport type Success<T extends Result> = Extract<T, {status: 200}>['result']\nexport type Errors<T extends Result> = Exclude<T, {status: 200}>\n\ntype Handler = (req:Request) => Promise<Result>\ntype PromiseReturn<T> = T extends PromiseLike<infer U> ? U : T\n\ntype Result = {\n  status: number,\n  result: string | object | null | boolean\n  headers?: {\n    [key: string]: string | number | string[]\n  }\n}\n\ntype Methods = \"POST\" | \"GET\" | \"PUT\" | \"DELETE\"\n\nexport const APIHandler = (handler: Handler | Partial<{POST: Handler, GET: Handler, PUT: Handler, DELETE: Handler}>) => {\n  if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n    Sentry.init({ dsn: process.env.NEXT_PUBLIC_SENTRY_DSN});\n  }\n  return async (req:NextApiRequest, res: NextApiResponse) => {\n    let result\n    try {\n      if(typeof handler === 'object') {\n        let method = req.method as Methods\n        let methodHandler = handler[method]\n        if(!methodHandler) {\n          res.status(404).end()\n          return\n        }\n        result = await methodHandler(req)\n      }\n      else {\n        result = await handler(req)\n      }\n    }\n    catch(e) {\n      if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n        Sentry.captureException(e, {contexts: {headers: req.headers}})\n        await Sentry.flush(2000)\n      }\n      console.log(e)\n      return res.status(500).end()\n    }\n\n    if(result.headers) {\n      for(let header of Object.keys(result.headers)) {\n        res.setHeader(header, result.headers[header])\n      }\n    }\n    if(result.status!==200) console.log(result.result)\n    if(typeof result.result !== 'object') return res.status(result.status).send(result.result)\n    return res.status(result.status).json(result.result)\n  }\n}\n\nexport const multiRouteHandler = (query:string, handlers:{[key:string]: Handler}) => {\n  return APIHandler(async (req) => {\n    let route = (typeof req.query[query] === 'string')\n                 ? req.query[query] as string\n                 : req.query[query][0]\n    return handlers[route](req)\n  })\n}\n\nexport async function callApi<Msg extends object | string | null, R extends Omit<Result, 'headers'>> (endpoint:string, msg?: Msg, method?: Methods){\n    let result = await fetch(endpoint, {\n      method: method ? method : msg ? \"POST\" : \"GET\",\n      headers: {\n        'Content-type': (typeof msg === 'object') ? 'application/json' : 'text/html'\n      },\n      body: (typeof msg === 'string') ? msg : JSON.stringify(msg)\n    })\n\n    return {\n      status: result.status,\n      result: result.headers.get('Content-type')?.includes('application/json')\n        ? await result.json()\n        : await result.text()\n    } as R\n}\n\nexport type Status = 'normal' | 'error' | 'loading' | 'success'\nexport function useApi<Msg extends object | string | null, R extends Omit<Result, 'headers'>>(deps: any[], successCallback?: (result: Extract<R, {status:200}>['result'])=> any) {\n  let [state, setState] = useState<Status>('normal')\n  useEffect(()=> setState('normal'), deps)\n  let call= async (path: string, msg?: Msg, method?: Methods) => {\n    setState('loading')\n    let res = await callApi<Msg, R>(path, msg, method)\n    if(res.status === 200) {\n      if(successCallback) await successCallback(res.result)\n      setState('success')\n    }\n    else setState('error')\n    return res\n  }\n  return [state, call, setState] as const\n}\n\nexport function useApiData<R extends Omit<Result, 'headers'>>(path?: string, initialData?:R) {\n  return useSWR<Success<R>, Errors<R>>(path ? path : null, async (path)=>{\n    let res = await callApi<null, R>(path)\n    if(res.status = 200) return res.result\n    return res\n  }, {initialData})\n}\n","module.exports = require(\"@prisma/client\");","const globalAny:any = global;\nimport { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\nif (process.env.APP_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!globalAny.prisma) {\n    globalAny.prisma = new PrismaClient();\n  }\n  prisma = globalAny.prisma;\n}\n\nexport default prisma;","import crypto from 'crypto'\nexport default (input:string) => {\n  const hmac = crypto.createHmac('sha256', '');\n  hmac.update(input)\n  return hmac.digest('hex')\n}\n","import {multiRouteHandler, ResultType, Request} from 'src/apiHelpers'\nimport hmac from 'src/hmac'\nimport { v4 as uuidv4 } from 'uuid';\nimport bcrypt from 'bcryptjs'\nimport {sendResetPasswordEmail} from 'emails'\nimport prisma from \"lib/prisma\";\n\nexport type RequestMsg = {\n  email: string\n}\n\nexport type ResetMsg = {\n  key: string\n  password: string\n}\n\nexport type RequestResult = ResultType<typeof requestResetPassword>\nexport type ResetResult = ResultType<typeof resetPassword>\n\nexport default multiRouteHandler('action', {\n  request: requestResetPassword,\n  reset: resetPassword\n})\n\nasync function requestResetPassword (req:Request) {\n  let msg = req.body as Partial<RequestMsg>\n  if(!msg.email) {\n    return {status: 403, result: \"Error: invalid request, missing email\"} as const\n  }\n\n  let user = await findUser(msg.email)\n  if(!user) {\n    return {status: 200, result: \"\"} as const\n  }\n\n  else {\n    let key = await createResetKey(msg.email)\n\n    let origin = (new URL(req.headers.referer || '')).origin\n    let url = `${origin}/resetPassword?&key=${key}`\n\n    await sendResetPasswordEmail(msg.email, {\n      action_url: url,\n      name: user.display_name || user.username\n    })\n    return {status: 200, result: \"\"} as const\n  }\n}\n\nasync function resetPassword (req:Request) {\n  let msg = req.body as Partial<ResetMsg>\n  if(!msg.key || !msg.password) {\n    return {\n      status: 400,\n      result: \"Error: invalid message, missing key or new password\"\n    } as const\n  }\n\n  let hash = hmac(msg.key)\n  let resetKey = await getResetKey(hash)\n  if(!resetKey) {\n    return {\n      status: 403,\n      result: \"Error: invalid reset key\"\n    } as const\n  }\n\n  let date = new Date(resetKey.created_time)\n\n  if((Date.now() - date.getTime())/(1000 * 60) > 30)  {\n    return {\n      status: 403,\n      result: \"Error: password reset key out of date\"\n    } as const\n  }\n\n  await updatePassword(resetKey.email, msg.password, hash)\n  return {status: 200, result:''}\n}\n\nasync function getResetKey(hash: string) {\n  return prisma.password_reset_keys.findUnique({where:{key_hash:hash}})\n}\n\n\nconst createResetKey = async (email: string) => {\n  let key = uuidv4()\n  await prisma.password_reset_keys.create({data:{\n      email,\n      created_time: new Date(Date.now()).toISOString(),\n      key_hash: hmac(key)\n  }})\n  return key\n}\n\nconst findUser = async (email:string) => {\n  return await prisma.people.findUnique({where: {email}})\n}\n\n\nexport async function updatePassword(email: string, newPassword: string, key_hash: string) {\n  let password_hash = await bcrypt.hash(newPassword, await bcrypt.genSalt())\n\n  await prisma.password_reset_keys.delete({where:{key_hash}})\n  return prisma.people.update({where:{email}, data:{password_hash}})\n}\n","module.exports = require(\"crypto\");","import * as postmark from 'postmark'\nimport cohortEnrollmentMetadata from './templates/cohort-enrollment/meta.json'\nimport verifiyEmailMetadata from './templates/welcome/meta.json'\nimport resetPasswordMetadata from './templates/password-reset/meta.json'\nimport inviteToCourseMetadata from './templates/invite-to-course/meta.json'\nimport enrollNotificationMetada from './templates/enroll-notification/meta.json'\nimport unenrollMetadata from './templates/cohort-unenroll/meta.json'\nimport watchingNotificationMetadata from './templates/watching-notification/meta.json'\nimport eventRSVPMetadata from './templates/event-rsvp/meta.json'\nimport eventRSVPNoAccountMetadata from './templates/event-rsvp-no-account/meta.json'\nimport eventUpdateNoAccount from './templates/event-update-no-account/meta.json'\n\nimport { Hash } from 'postmark/dist/client/models/client/SupportingTypes'\n\nvar client = new postmark.ServerClient(process.env.POSTMARK_TOKEN || '');\n\nexport const sendResetPasswordEmail = sendEmail(resetPasswordMetadata)\nexport const sendVerificationEmail = sendEmail(verifiyEmailMetadata)\nexport const sendCohortEnrollmentEmail = sendEmail(cohortEnrollmentMetadata)\nexport const sendEventRSVPEmail = sendEmail(eventRSVPMetadata)\nexport const sendEventRSVPNoAccountEmail = sendEmail(eventRSVPNoAccountMetadata)\nexport const sendEventUpdateNoAccountEmail = sendBatchEmail(eventUpdateNoAccount)\nexport const sendInviteToCourseEmail = sendEmail(inviteToCourseMetadata)\nexport const sendEnrollNotificationEmaill = sendEmail(enrollNotificationMetada)\nexport const sendWatchingNotificationEmail = sendBatchEmail(watchingNotificationMetadata)\nexport const sendUnenrollEmail = sendEmail(unenrollMetadata)\n\ntype EmailMetadata = {\n  Alias: string,\n  TestRenderModel: object\n}\nexport function sendEmail<T extends EmailMetadata>(meta:T) {\n  return async function(\n    email: string,\n    vars?: T[\"TestRenderModel\"], data?: Partial<{Metadata?:Hash<string>, Attachments: Array<{Name: string, Content: string, ContentType: string, ContentID: string | null}>}>) {\n    if(process.env.NODE_ENVIRONMENT === 'production') {\n      try {\n          return client.sendEmailWithTemplate({\n                  From: `wecare@krakenedu.com`,\n                  To: email,\n                  TemplateAlias: meta.Alias,\n                  TemplateModel: vars,\n                  ...data\n          })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n}\nexport function sendBatchEmail<T extends EmailMetadata>(meta:T) {\n  return (msgs:Array<{email: string, vars: T[\"TestRenderModel\"],data?: Partial<{Metadata?:Hash<string>, Attachments: Array<{Name: string, Content: string, ContentType: string, ContentID: string | null}>}>} | undefined>) => {\n    if(process.env.NODE_ENVIRONMENT === 'production') return client.sendEmailBatchWithTemplates(msgs.filter(x=>x!== undefined).map(msg=>{\n      return {\n         From: `wecare@krakenedu.com`,\n        To: msg?.email || '',\n        TemplateAlias: meta.Alias,\n        TemplateModel: msg?.vars || {},\n        MessageStream: \"notifications\",\n        ...msg?.data\n      }\n    }))\n  }\n}\n","module.exports = require(\"@sentry/node\");","module.exports = require(\"swr\");","module.exports = require(\"react\");","module.exports = require(\"postmark\");","module.exports = require(\"uuid\");","module.exports = require(\"bcryptjs\");"],"sourceRoot":""}