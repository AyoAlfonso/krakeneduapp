{"version":3,"sources":["webpack://_N_E/./components/Cards/index.ts","webpack://_N_E/./components/Cards/CohortCard.ts"],"names":["Card","colors","grey15","textPrimary","CourseCohortCard","props","h","Link","href","course","slug","id","passHref","Container","ImageContainer","src","card_image","Content","Box","gap","name","cohortName","description","cohortPrettyDate","start_date","completed","ShowSpotsLeft","cohort_max_size","people_in_cohorts","length","Mobile","ClubCohortCard","ClubCohortCardContainer","ClubCohortCardHeader","split","map","ClubCohortCardContent","accentLightBlue","prettyDate","Date","startDate","now"],"mappings":"mKAGaA,EAAO,YAAO,IAAP,sBAAH,2FAKDC,IAAOC,OALN,+BAQRD,IAAOE,YARC,uHAiBKF,IAAOC,OAjBZ,qB,kPCoBV,IAAME,EAAmB,SAACC,GAAgB,MAC/C,OAAOC,IAAEC,IAAK,CACZC,KAAI,mBAAaH,EAAMI,OAAOC,KAA1B,YAAkCL,EAAMI,OAAOE,GAA/C,oBAA6DN,EAAMM,IACvEC,UAAU,GACTN,IAAEO,EAAW,CACdP,IAAEQ,EAAgB,CAChBR,IAAE,MAAO,CAACS,IAAKV,EAAMI,OAAOO,eAE9BV,IAAEW,EAAS,CACTX,IAAEY,IAAK,CAACC,IAAK,GAAI,CACfb,IAAE,KAAMD,EAAMI,OAAOW,MACrBd,IAAE,mBAAoBe,YAAWhB,EAAMe,SAEzCd,IAAE,kBAAmBD,EAAMI,OAAOa,aAClChB,IAAE,OAAQ,CACRA,IAAE,IAAD,UAASiB,EAAiBlB,EAAMmB,WAAYnB,EAAMoB,aACnDnB,IAAEoB,EAAe,CAACC,gBAAgBtB,EAAMI,OAAOkB,gBAAiBC,mBAAkB,UAAAvB,EAAMuB,yBAAN,eAAyBC,SAAQ,EAAGL,WAAYnB,EAAMmB,qBAO5IP,EAAU,YAAO,MAAP,qBAAH,8IASPJ,EAAY,YAAOb,IAAP,qBAAH,iHAOX8B,IAPW,iCAYPhB,EAAiB,YAAO,MAAP,qBAAH,kFAMlBgB,IANkB,mBAWPC,EAAiB,SAAC1B,GAAiB,MAC9C,OAAOC,IAAEC,IAAM,CACbC,KAAM,YAAF,OAAcH,EAAMI,OAAOC,KAA3B,YAAmCL,EAAMI,OAAOE,GAAhD,oBAA8DN,EAAMM,IACxEC,UAAU,GACTN,IAAE0B,EAAyB,CAC1B1B,IAAE2B,EAAsB,CACtB3B,IAAEY,IAAK,CAACZ,GAAG,GAAOD,EAAMI,OAAOO,WAAWkB,MAAM,KAAKC,KAAI,SAAApB,GAAG,OAAGT,IAAE,MAAO,CAACS,YACzET,IAAEY,IAAI,CAACC,IAAI,GAAG,CACZb,IAAE,KAAMD,EAAMI,OAAOW,MACrBd,IAAE,mBAAoBe,YAAWhB,EAAMe,WAG3Cd,IAAE8B,EAAuB,CACvB9B,IAAE,IAAKD,EAAMI,OAAOa,aACpBhB,IAAE,MAAO,CACPA,IAAE,OAAQ,CACRA,IAAE,IAAD,UAASiB,EAAiBlB,EAAMmB,WAAYnB,EAAMoB,aACnDnB,IAAEoB,EAAe,CAACC,gBAAgBtB,EAAMI,OAAOkB,gBAAiBC,mBAAkB,UAAAvB,EAAMuB,yBAAN,eAAyBC,SAAQ,EAAGL,WAAYnB,EAAMmB,uBAU9IS,EAAuB,YAAO,MAAP,qBAAH,+CAGNhC,IAAOoC,gBAHD,gCAOxBP,IAPwB,kBAapBM,EAAwB,YAAO,MAAP,qBAAH,0IASrBJ,EAA0B,YAAO,IAAP,qBAAH,yHAMb/B,IAAOC,OANM,+BAQpBD,IAAOE,YARa,uHAiBLF,IAAOC,OAjBF,MAqBhBqB,EAAmB,SAACC,EAAoBC,GACnD,OAAGA,EAAkB,GAAP,OAAUa,YAAWd,GAArB,cAAsCc,YAAWb,GAAa,KACzE,IAAIc,KAAS,IAAIA,KAAKf,GAAoB,WAAP,OAAkBc,YAAWd,IACnE,iBAAiBc,YAAWd,KAGjBE,EAAgB,SAACrB,GAE5B,IAAImC,EAAY,IAAID,KAAKlC,EAAMmB,YAC3BiB,EAAM,IAAIF,KAEd,OAA8B,IAA1BlC,EAAMsB,iBAAyBa,EAAYC,EAAa,KACzDpC,EAAMsB,kBAAoBtB,EAAMuB,kBAA0BtB,IAAE,OAAQ,CACrEA,IAAE,gBAAiB,OACnBA,IAAE,qBAAsB,oBAEdA,IAAE,OAAQ,CACpBA,IAAE,gBAAiB,OACnBA,IAAE,qBAAD,UAA0BD,EAAMsB,gBAAkBtB,EAAMuB,kBAAxD","file":"static/chunks/02f834ec56967f9f7381cb1c7704e858952da7cb.cd21aa602b5cb4cd5b68.js","sourcesContent":["import styled from '@emotion/styled'\nimport {colors } from 'components/Tokens'\n\nexport const Card = styled('a')`\nbox-sizing: border-box;\npadding: 16px;\nbackground-color: white;\nborder: 1px solid;\nborder-color: ${colors.grey15};\ntext-decoration: none;\n\ncolor: ${colors.textPrimary};\n\n&:visited {\ncolor: inherit;\n}\n\n&:hover, &:active, &:focus {\ncursor: pointer;\ntransform: translate(-4px, -4px);\nbox-shadow: 4px 4px ${colors.grey15};\ncolor: inherit;\n}\n`\n","import h from 'react-hyperscript'\nimport Link from 'next/link'\nimport {Card} from '.'\nimport styled from '@emotion/styled'\nimport { colors, Mobile } from 'components/Tokens'\nimport {Box} from 'components/Layout'\nimport { cohortName, prettyDate} from 'src/utils'\n\ntype Props = {\n  id: number,\n  name: string,\n  start_date: string,\n  people_in_cohorts?: Array<object>,\n  completed?: string | null,\n  course:{\n    id: number,\n    slug: string,\n    name: string,\n    description: string\n    cohort_max_size: number,\n    card_image: string,\n  }\n}\nexport const CourseCohortCard = (props:Props) => {\n  return h(Link,{\n    href:`/courses/${props.course.slug}/${props.course.id}/cohorts/${props.id}`,\n    passHref: true,\n  }, h(Container, [\n    h(ImageContainer, [\n      h('img', {src: props.course.card_image}),\n    ]),\n    h(Content, [\n      h(Box, {gap: 4}, [\n        h('h3', props.course.name),\n        h('h4.textSecondary', cohortName(props.name) ),\n      ]),\n      h('p.textSecondary', props.course.description),\n      h('span', [\n        h('b', `${cohortPrettyDate(props.start_date, props.completed)}`),\n        h(ShowSpotsLeft, {cohort_max_size:props.course.cohort_max_size, people_in_cohorts:props.people_in_cohorts?.length||0, start_date: props.start_date})\n\n      ])\n    ])\n  ]))\n}\n\nlet Content = styled('div')`\ndisplay: grid;\npadding: 16px;\ngrid-gap: 16px;\ngrid-template-rows: min-content auto 22px;\nheight: 100%;\nbox-sizing: border-box;\n`\n\nlet Container = styled(Card)`\npadding: 0px;\ndisplay: grid;\nborder: 2px solid;\nborder-radius: 2px;\ngrid-template-columns: 132px auto;\nmax-height: 304px;\n${Mobile} {\ngrid-template-columns: auto;\n}\n`\n\nconst ImageContainer = styled('div')`\nwidth: auto;\nheight: 300px;\noverflow: hidden;\nobject-fit: none;\nborder-right: 2px solid;\n${Mobile} {\ndisplay: none;\n}\n`\n\nexport const ClubCohortCard = (props: Props) => {\n  return h(Link, {\n    href: `/courses/${props.course.slug}/${props.course.id}/cohorts/${props.id}`,\n    passHref: true\n  }, h(ClubCohortCardContainer, [\n      h(ClubCohortCardHeader, [\n        h(Box, {h: true}, props.course.card_image.split(',').map(src=> h('img', {src}))),\n        h(Box,{gap:4},[\n          h('h3', props.course.name),\n          h('h4.textSecondary', cohortName(props.name)),\n        ])\n      ]),\n      h(ClubCohortCardContent, [\n        h('p', props.course.description),\n        h('div', [\n          h('span', [\n            h('b', `${cohortPrettyDate(props.start_date, props.completed)}`),\n            h(ShowSpotsLeft, {cohort_max_size:props.course.cohort_max_size, people_in_cohorts:props.people_in_cohorts?.length||0, start_date: props.start_date})\n\n          ])\n        ])\n      ]),\n    ])\n  )\n}\n\n\nconst ClubCohortCardHeader = styled('div')`\ndisplay: grid;\ngrid-gap: 16px;\nbackground-color: ${colors.accentLightBlue};\npadding: 16px;\nheight: 8.25rem;\n\n${Mobile} {\n  height: auto;\n}\n\n`\n\nconst ClubCohortCardContent = styled('div')`\ndisplay: grid;\ngrid-template-rows: auto min-content;\nheight: 100%;\nbox-sizing: border-box;\ngrid-gap: 16px;\npadding: 16px;\n`\n\nconst ClubCohortCardContainer = styled('a')`\nmax-width: 320px;\nbackground-color: white;\nborder: 1px solid;\ndisplay: grid;\ngrid-template-rows: min-content auto;\nborder-color: ${colors.grey15};\ntext-decoration: none;\ncolor: ${colors.textPrimary};\n\n&:visited {\n  color: inherit;\n}\n\n&:hover, &:active, &:focus {\n  cursor: pointer;\n  transform: translate(-4px, -4px);\n  box-shadow: 4px 4px ${colors.grey15};\n}\n`\n\nexport const cohortPrettyDate = (start_date: string, completed?: string | null)=>{\n  if(completed) return `${prettyDate(start_date)} - ${prettyDate(completed || '')}`\n  if(new Date() > new Date(start_date)) return `Started ${prettyDate(start_date)}`\n  return `Starts ${prettyDate(start_date)}`\n}\n\nexport const ShowSpotsLeft = (props: {cohort_max_size:number, people_in_cohorts:number, start_date:string}) => {\n\n  let startDate = new Date(props.start_date)\n  let now = new Date()\n\n  if (props.cohort_max_size === 0 || startDate < now ) return null\n  if(props.cohort_max_size === props.people_in_cohorts) return h('span', [\n    h('b.textPrimary', ' | '), \n    h('span.textSecondary', 'Cohort full :(')\n  ])\n  else return h('span', [\n    h('b.textPrimary', ' | '),\n    h('span.accentSuccess', `${props.cohort_max_size - props.people_in_cohorts} spots left!`)\n  ])\n}\n"],"sourceRoot":""}