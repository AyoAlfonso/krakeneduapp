{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?0035","webpack://_N_E/./components/Tabs.ts","webpack://_N_E/./components/Cards/EventCard.ts","webpack://_N_E/./components/pages/dashboard/Settings.ts","webpack://_N_E/./components/pages/dashboard/EnrolledCohort.ts","webpack://_N_E/./pages/dashboard.ts"],"names":["window","__NEXT_P","push","Tabs","props","router","useRouter","tabs","Object","keys","filter","tab","selectedTab","query","h","Box","gap","StickyWrapper","Nav","map","Tab","active","onClick","route","URL","location","href","searchParams","set","replace","undefined","shallow","VerticalTabs","VerticalTab","selected","onChange","colors","appBackground","Mobile","p","withComponent","EventCard","start","Date","start_date","toLocaleTimeString","hour12","minute","hour","end","end_date","timeZoneName","Link","id","passHref","Container","EventCardHeader","padding","style","border","borderTop","borderRadius","name","prettyDate","Seperator","cost","accentLightBlue","Card","COPY","StripeSettings","useState","status","setStatus","country","setCountry","onSubmit","e","a","preventDefault","callApi","res","assign","result","url","FormBox","width","stripe_connected_accounts","Select","required","currentTarget","value","Primary","type","connected","payouts_enabled","Settings","useFormData","profile","state","changed","form","reset","useApi","callUpdatePerson","user","username","mutate","Info","email","LabelBox","Description","Input","display_name","pronouns","link","Textarea","bio","SubmitButtons","Destructive","disabled","facilitator","textSecondary","EnrolledCohort","events","cohort","cohort_events","event","sort","b","first_event","as","courses","slug","textDecoration","alignItems","cohortName","facilitating","Pill","borderOnly","live","red","Image","src","card_image","IconsImage","split","height","imageRendering","FirstEvent","gridAutoColumns","backgroundColor","color","textAlign","DateBox","date","paddingTop","alignContent","toLocaleDateString","weekday","toUpperCase","getTimeBetween","overflow","Secondary","textPrimary","overflowY","Text","source","description","slice","cohort_event","UpcomingEvent","UpcomingEventContent","justifySelf","DateBoxContainer","month","getDate","MoreLearningBanner","accentPeach","MoreLearningBannerButtons","EmptyImg","Dashboard","useUserData","data","enrolledThings","useUserCohorts","useProfileData","mutateProfile","userCourses","useUserCourses","useEffect","PageLoader","completedCohorts","course_cohorts","c","completed","activeCohorts","upcomingEvents","toISOString","maintaining_courses","reduce","acc","clubs","Active","length","WhiteContainer","maxWidth","margin","marginBottom","SmallLinkButton","background","grey95","Calendar","FlexGrid","min","mobileMin","ev","cohort_facilitators","find","f","ma","justifyItems","Completed","ClubCohortCard","course","CourseCohortCard","Maintaining","CourseListing","ClubListing","Profile"],"mappings":"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","file":"static/chunks/pages/dashboard-bcb78812e5fd7a746656.js","sourcesContent":["\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/dashboard\",\n        function () {\n          return require(\"private-next-pages/dashboard.ts\");\n        }\n      ]);\n    ","import { ReactElement} from 'react'\nimport h from 'react-hyperscript'\nimport styled from '@emotion/styled'\n\nimport {Box} from './Layout'\nimport { Mobile, colors } from './Tokens'\nimport { useRouter } from 'next/router'\n\ntype Props = {\n  tabs: {\n    [key: string]: ReactElement | null\n  }\n}\nexport const Tabs = (props:Props) => {\n  let router = useRouter()\n  let tabs = Object.keys(props.tabs).filter(tab => props.tabs[tab] !== null)\n  let selectedTab = typeof router.query.tab !== 'string' || !props.tabs[router.query.tab] ? tabs[0] : router.query.tab as string\n\n  return h(Box, {gap: 32}, [\n    h(StickyWrapper, [\n      h(Nav, tabs.map(tab => h(Tab, {\n        active: selectedTab === tab,\n        onClick: ()=> {\n          let route = new URL(window.location.href)\n          route.searchParams.set('tab', tab)\n          router.replace(route, undefined, {shallow: true})\n        }\n      }, tab))),\n    ]),\n    props.tabs[selectedTab]\n  ])\n}\n\nexport function VerticalTabs(props:{tabs: string[], selected: string, onChange: (tab: string)=>void}){\n  return h(Box, {}, props.tabs.map((tab) => {\n    return h(VerticalTab, {selected: props.selected === tab, onClick: ()=>props.onChange(tab)}, tab)\n  }))\n}\n\nexport const StickyWrapper = styled('div')`\nposition: sticky;\ntop: 0px;\nbackground-color: ${colors.appBackground};\nz-index: 1;\n\nmargin-top: -32px;\npadding-top: 32px;\n\n${Mobile} {\n  padding-top: 16px;\n  margin-top: -16px;\n}\n`\n\nconst Nav = styled('div')`\ndisplay: grid;\ngrid-gap: 32px;\ngrid-auto-columns: max-content;\ngrid-auto-flow: column;\ngrid-template-rows: auto;\nborder-bottom: 3px solid;\n\n${Mobile} {\n  grid-gap:16px;\n}\n`\n\nconst VerticalTab = styled('a')<{selected: boolean}>`\npadding-left: 12px;\nbox-sizing: border-box;\n&:hover {\ncursor: pointer;\n}\n${p=>p.selected ? `\ncolor: blue;\nfont-weight: bold;\nborder-collor: blue;\npadding-left: 8px;\nborder-left: solid 4px;\n` : \"\"}\n`\n\nconst Tab = styled('h4')<{active:boolean}>`\npadding-bottom: 4px;\nmargin-bottom: 2px;\nfont-weight: bold;\nz-index: 8;\n\n&:hover {\ncursor: pointer;\n}\n\n\n${props => props.active ? 'color: blue' : ''};\n${props => props.active ? 'border-bottom: 4px solid' : ''};\n`.withComponent('a')\n","import h from 'react-hyperscript'\nimport styled from '@emotion/styled'\nimport {Card} from '.'\nimport { colors } from 'components/Tokens'\nimport { Box, Seperator } from 'components/Layout'\nimport { prettyDate } from 'src/utils'\nimport Link from 'next/link'\n\nexport const EventCard = (props:{name: string, start_date: string, end_date: string, cost: number, id: number})=>{\n  let start = new Date(props.start_date).toLocaleTimeString([], {hour12: true, minute: '2-digit', hour:'numeric'})\n  let end = new Date(props.end_date).toLocaleTimeString([], {hour12: true, minute: '2-digit', hour:'numeric', timeZoneName: \"short\"})\n  return h(Link, {href:`/events/${props.id}`, passHref: true}, h(Container, [\n    h(EventCardHeader),\n    h(Box, {padding:16, style:{border: '1px solid', borderTop: 'none', borderRadius: '2px'}}, [\n      h(Box, {gap:8},[\n        h('h3', props.name),\n        h('span',  `${prettyDate(props.start_date)} @ ${start} - ${end}`),\n      ]),\n      new Date(props.start_date) < new Date() ? null : h(Box, {gap:8},[\n        h(Seperator),\n        h('span.textSecondary', `${props.cost === 0 ? \"FREE\" : '$'+props.cost}`)\n      ])\n    ]),\n  ]))\n}\n\nlet EventCardHeader = styled('div')`\nbackground-color: ${colors.accentLightBlue};\nheight:8px;\nborder: 1px solid;\nborder-radius: 2px 2px 0px 0px;\n`\n\nlet Container = styled(Card)`\nborder: none;\npadding: 0px;\n`\n","import h from 'react-hyperscript'\nimport styled from '@emotion/styled'\nimport { useState } from 'react'\n\nimport { Box, LabelBox, FormBox} from 'components/Layout'\nimport { Input, Textarea, Info, Select } from 'components/Form'\nimport { Primary, Destructive } from 'components/Button'\nimport { colors } from 'components/Tokens'\n\nimport { callApi, useApi } from 'src/apiHelpers'\nimport { UpdatePersonMsg, UpdatePersonResult } from 'pages/api/people/[id]'\nimport { GETConnectStripeResult } from 'pages/api/user/connectStripe'\nimport { useFormData } from 'src/hooks'\n\nconst COPY = {\n  usernameField: \"Username\",\n  emailField: \"Email\",\n  pronounsField: \"Your Pronouns\",\n  displayNameField: \"Nickname\",\n  displayNameDescription: \"This is displayed when you post on the forum or enroll in a course.\",\n  linkField: \"Link\",\n  linkDescription: \"Where you're hanging on the internet (your website, Twitter, etc.)\",\n  bioField: \"Bio\"\n}\n\ntype Profile = {\n  bio: string,\n  display_name: string,\n  pronouns: string,\n  link: string,\n  stripe_connected_accounts:{\n    stripe_account: string,\n    payouts_enabled: boolean,\n    connected: boolean\n  } | null\n}\nconst Settings = (props:{\n  user: {email: string, username: string}\n  facilitator: boolean,\n  profile: Profile\n  mutate: (p:Omit<Profile, 'stripe_connected_accounts'>)=>void\n}) => {\n  let {state, changed, form, reset} = useFormData(props.profile)\n  let [status, callUpdatePerson] = useApi<UpdatePersonMsg, UpdatePersonResult>([])\n\n  const onSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if(!changed) return\n    let res = await callUpdatePerson(`/api/people/${props.user.username}`, {profile:state})\n    if(res.status === 200) {\n      props.mutate(state)\n    }\n  }\n\n  return h(Box, {gap:64}, [\n    h(FormBox, {onSubmit, width: 400, gap: 32}, [\n      h(Box, {gap:8}, [h('h4', 'Username'), h(Info, props.user.username)]),\n      h(Box, {gap:8}, [h('h4', 'Email'), h(Info, props.user.email)]),\n      h(LabelBox, {gap:8}, [\n        h('div', [\n          h('h4', COPY.displayNameField),\n          h(Description, COPY.displayNameDescription)\n        ]),\n        h(Input,form.display_name)\n      ]),\n      h(LabelBox, {gap:8}, [\n        h('h4', COPY.pronounsField),\n        h(Input, form.pronouns)\n      ]),\n      h(LabelBox, {gap:8}, [\n        h(Box, {gap:4}, [\n          h('h4', COPY.linkField),\n          h(Description, COPY.linkDescription),\n        ]),\n        h(Input, form.link)\n      ]),\n      h(LabelBox, {gap:8}, [\n        h('h4', COPY.bioField),\n        h(Textarea, form.bio)\n      ]),\n    h(SubmitButtons, [\n      h(Destructive, {disabled: !changed, onClick: ()=>{\n        if(props.profile) reset()\n      }}, \"Discard Changes\"),\n      h(Primary, {status, type: 'submit', disabled: !changed}, 'Save Changes')\n    ])\n  ]),\n    !props.facilitator ? null : h(StripeSettings, {stripe_connected_accounts: props.profile.stripe_connected_accounts})\n  ])\n}\n\nconst StripeSettings = (props:{stripe_connected_accounts: {connected: boolean, payouts_enabled:boolean} | null}) => {\n  let [status, setStatus] = useState<'normal' | 'loading'>('normal')\n  let [country, setCountry] = useState('US')\n\n  let onSubmit = async (e:React.FormEvent)=>{\n    e.preventDefault()\n    setStatus('loading')\n    let res = await callApi<null, GETConnectStripeResult>('/api/user/connectStripe?country='+country)\n    if(res.status !== 200) return setStatus('normal')\n    window.location.assign(res.result.url)\n  }\n\n  return h(FormBox, {width: 400, onSubmit}, [\n    h('div',[\n      h('h3', {id:\"connect-stripe\"}, 'Stripe Account'),\n      h('p.textSecondary', 'We use Stripe to handle payments from learners and payouts to facilitators'),\n    ]),\n    props.stripe_connected_accounts ? null : h(Box, [\n      h('h4', \"Select Your Country\"),\n      h(Select, {\n        required: true,\n        onChange: e=>setCountry(e.currentTarget.value)\n      }, [\n        h('option', {value: \"US\"}, \"United States of America\"),\n        h('option', {value: \"CA\"}, \"Canada\")\n      ])\n    ]),\n    h(Primary, {status, type: 'submit'}, !props.stripe_connected_accounts?.connected\n      ? 'Connect to Stripe'\n      : props.stripe_connected_accounts.payouts_enabled ? 'Update your Stripe details' : \"Finish your Stripe onboarding\")\n  ])\n}\n\nexport default Settings\n\nconst Description = styled('p')`\nfont-size: 0.75rem;\nfont-weight: normal;\ncolor: ${colors.textSecondary};\n`\n\nconst SubmitButtons = styled('div')`\njustify-self: right;\ndisplay: grid;\ngrid-template-columns: auto auto;\ngrid-gap: 16px;\n`\n","import h from 'react-hyperscript'\nimport { Box } from 'components/Layout'\nimport Link from 'next/link'\nimport { Pill } from 'components/Pill'\nimport { cohortName, getTimeBetween } from 'src/utils'\nimport styled from '@emotion/styled'\nimport { Secondary } from 'components/Button'\nimport Text from 'components/Text'\nimport { colors } from 'components/Tokens'\n\ntype Props = {\n  cohort: {\n    live: boolean,\n    courses:{\n      name: string,\n      type: string,\n      slug: string,\n      id: number\n      card_image: string,\n    },\n    id: number\n    name: string\n    cohort_events: {events: {\n      start_date: string,\n      end_date: string,\n      location: string,\n      name: string,\n      description: string\n    }}[]\n  },\n  facilitating: boolean,\n}\n\nexport function EnrolledCohort(props: Props) {\n  let events = props.cohort.cohort_events\n    .filter((event)=> new Date() < new Date(event.events.end_date))\n    .sort((a, b) => new Date(a.events.start_date) > new Date(b.events.start_date) ? 1 : -1)\n  let first_event = events[0]?.events\n  return h(Box, {gap:16}, [\n    h(Box, {gap: 8}, [\n      //course name\n      h(Link, {\n        href: `/courses/[slug]/[id]/cohorts/[cohortId]`,\n        as: `/courses/${props.cohort.courses.slug}/${props.cohort.courses.id}/cohorts/${props.cohort.id}`\n      }, h('a', {style:{textDecoration: 'none'}}, h('h2', props.cohort.courses.name))),\n      //cohort number\n      h(Box, {h: true, gap:16, style:{alignItems: 'center'}}, [\n        h('h3.textSecondary', cohortName(props.cohort.name)),\n        props.facilitating ? h(Pill, {borderOnly: true}, 'facilitator') : null,\n        !props.cohort.live ? h(Pill, {red: true, borderOnly: true}, \"draft\") : null\n      ])\n    ]),\n    !first_event ? null :  h(Container, [\n      //course image\n      props.cohort.courses.type === 'course'\n        ? h(Image, {src: props.cohort.courses.card_image})\n        : h(IconsImage, {}, props.cohort.courses.card_image.split(',').map(src => {\n          return h('img', {src, style: {height: \"72px\", imageRendering: 'pixelated'}})\n        })),\n\n      //first event\n      !first_event ? null : h(FirstEvent, [\n        //date box\n        h(Box, {h: true, style:{gridAutoColumns: 'min-content auto'}}, [\n          h('div', [\n            h('div', {style: {backgroundColor: \"black\", color: 'white', padding: '4px 0px', textAlign: 'center'}}, \"NEXT\"),\n            h(DateBox, {date: new Date(first_event.start_date)}),\n          ]),\n          //event header\n          h(Box, {gap: 4, style: {paddingTop:4, alignContent: \"space-between\"}}, [\n            h('div', [\n              h('b.textSecondary',\n                (new Date(first_event.start_date)).toLocaleDateString([], {weekday: 'long'}).toUpperCase() +\n                ` | ` + getTimeBetween(new Date(first_event.start_date), new Date(first_event.end_date)) + 'hrs'),\n              h('h3', {style: {overflow:\"hidden\"}}, first_event.name)\n            ]),\n            h('a', {href: first_event.location}, h(Secondary, \"Join Event\"))\n          ])\n        ]),\n        //event description\n        h(Link, {\n          passHref: true,\n        href: `/courses/[slug]/[id]/cohorts/[cohortId]`,\n        as: `/courses/${props.cohort.courses.slug}/${props.cohort.courses.id}/cohorts/${props.cohort.id}`\n        },  h('a',  {\n          style: {color: colors.textPrimary, textDecoration: 'none'}\n        }, h(Box, {style: {overflowY: \"hidden\"}}, [\n                h(Text, {source: first_event.description})\n              ])\n             ))\n    ]),\n\n      // 2nd 3rd 4th event list\n      h(Box, [\n        ...events.slice(1, 4).map(cohort_event=> {\n        let event = cohort_event.events\n        return h(UpcomingEvent, [\n          h(DateBox, {date: new Date(event.start_date)}),\n          h(UpcomingEventContent, [\n            h('b.textSecondary',\n              (new Date(event.start_date)).toLocaleDateString([], {weekday: 'long'}).toUpperCase() +\n              ` | ` + getTimeBetween(new Date(event.start_date), new Date(event.end_date)) + 'hrs'),\n            h('h3', event.name),\n          ])\n        ])\n      }),\n        //show all events \n        h(Link, {\n          href: `/courses/[slug]/[id]/cohorts/[cohortId]`,\n          as: `/courses/${props.cohort.courses.slug}/${props.cohort.courses.id}/cohorts/${props.cohort.id}`\n        }, h('a', {style: {color: colors.textSecondary, justifySelf:\"right\"}}, `See all events`)),\n      ])\n    ])\n  ])\n}\n\nfunction DateBox(props:{date: Date}) {\n  return h(DateBoxContainer, [\n    h('b', props.date.toLocaleDateString([], {month: 'short'}).toUpperCase()),\n    h('h2', props.date.getDate()),\n    h('small', props.date.toLocaleTimeString([], {hour: \"numeric\", minute: \"2-digit\", hour12: true}))\n  ])\n}\n\nconst DateBoxContainer = styled('div')`\nh2 {\n    line-height: 100%;\n}\nwidth: 80px;\ndisplay: grid;\ngrid-gap: 4px;\nbox-sizing: border-box;\npadding: 8px 4px;\nborder: 1px solid;\ntext-align: center;\nbackground-color: white;\nheight: min-content;\n`\n\nconst Image = styled('img')`\nborder: 1px solid;\nimage-rendering: pixelated;\nimage-rendering: crisp-edges;\nheight: 370px;\nwidth: 166px;\n\n@media(max-width: 1024px) {\ndisplay: none;\n}\n`\n\nconst IconsImage = styled('div')`\nborder: 1px solid;\nimage-rendering: pixelated;\nimage-rendering: crisp-edges;\nbackground-color: ${colors.accentLightBlue};\ndisplay: grid;\ngrid-gap: 16px;\nalign-content: center;\njustify-items: center;\ngrid-template-rows: repeat(3, min-content);\nheight: 370px;\nwidth: 166px;\n\n@media(max-width: 1024px) {\ndisplay: none;\n}\n`\n\nconst Container = styled('div')`\nheight: 370px;\ndisplay: grid;\ngrid-gap: 16px;\n\ngrid-auto-columns: max-content;\ngrid-auto-flow: column;\n\ngrid-template-columns: min-content auto 320px;\n\n@media(max-width: 1024px) {\ngrid-template-columns: auto 320px;\nheight: min-content;\nheight: 370px;\n}\n\n@media(max-width:768px) {\ngrid-template-columns: auto;\ngrid-auto-rows: min-content;\ngrid-auto-flow: row;\nheight: auto;\n}\n`\n\nconst FirstEvent = styled('div')`\nheight: 370px; \ndisplay: grid;\ngrid-row-gap: 16px;\ngrid-auto-rows: min-content auto;\nposition: relative;\noverflow: hidden;\n\n::after {\n  content: '';\n  position: absolute;\n  height: 370px;\n  width: 100%;\n  /* background:linear-gradient(transparent 320px, ${colors.appBackground}); */\n  background: linear-gradient(to bottom, rgba(253,252,250,0) 0%,rgba(253,252,250,0) 80%, rgba(253,252,250,1) 100%);\n  pointer-events: none;\n }\n\n@media(max-width: 768px) {\n  height: auto;\n\n  ::after{\n    display:none;\n    height: auto\n  }\n}\n`\n\nconst UpcomingEvent = styled('div')`\ndisplay: grid;\ngrid-column-gap: 16px;\ngrid-template-columns: min-content auto;\n`\n\nconst UpcomingEventContent = styled('div')`\ndisplay: grid;\ngrid-row-gap: 4px;\ngrid-template-rows: min-content 3.75rem;\noverflow: hidden;\nheight: min-content;\npadding-top: 8px\n`\n","import h from 'react-hyperscript'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport styled from '@emotion/styled'\nimport { useEffect } from 'react'\n\nimport {colors, Mobile} from 'components/Tokens'\nimport { Box, WhiteContainer, FlexGrid} from 'components/Layout'\nimport {ClubCohortCard, CourseCohortCard} from 'components/Cards/CohortCard'\nimport {ClubListing, CourseListing} from 'components/pages/CourseAndClubList'\nimport { PageLoader } from 'components/Loader'\n// import { AccentImg } from '../components/Images'\nimport { useUserCohorts, useUserData, useUserCourses, useProfileData } from 'src/data'\nimport { Tabs } from 'components/Tabs'\nimport Settings from 'components/pages/dashboard/Settings'\nimport {Primary, Secondary, SmallLinkButton} from 'components/Button'\nimport { EnrolledCohort } from 'components/pages/dashboard/EnrolledCohort'\nimport { Calendar } from 'components/Icons'\nimport { EventCard } from 'components/Cards/EventCard'\n\nconst COPY = {\n  coursesHeader: \"All Courses\",\n  courseListHeader: \"There’s always something new to learn!\",\n  courseListButton: \"Find New Courses!\",\n  courseGardenHeader: \"Have an idea for a course?\",\n  courseGardenDescription: `KrakenEdu courses are created by our community. We seed and grow them in the Course\nGarden. Check out some in development, or propose your own!`,\n  courseGardenLink: \"Check out the Course Garden\",\n};\n\nconst Dashboard = () => {\n  let {data: user, mutate} = useUserData()\n  let {data: enrolledThings} = useUserCohorts()\n  let {data: profile, mutate:mutateProfile} = useProfileData(user ? user.username : undefined)\n  let {data: userCourses} = useUserCourses()\n  let router = useRouter()\n\n  useEffect(() => {\n    if(user === false) router.push('/')\n  }, [user])\n\n  if(!user || enrolledThings === undefined || userCourses === undefined || profile === undefined || profile === false) {\n    return h(PageLoader)\n  }\n\n  let completedCohorts = enrolledThings.course_cohorts.filter(c=> c.completed)\n  let activeCohorts = enrolledThings.course_cohorts\n    .filter(c=>!c.completed)\n    .sort((a, b)=>{\n      if(new Date(a.start_date) < new Date(b.start_date)) return -1\n      return 1\n    })\n  let upcomingEvents = enrolledThings.events.filter(e=>e.events.end_date>new Date().toISOString())\n  let [clubs, courses] = userCourses.maintaining_courses.reduce((acc, c)=> {\n    acc[c.type === 'club' ? 0 : 1].push(c)\n    return acc\n  }, [[],[]] as Array<typeof userCourses.maintaining_courses>)\n\n  return h(Box, {gap:64}, [\n    h('h1', `Hello ${user.display_name || user.username}!`),\n    h(Tabs, {\n      tabs: {\n        Active: h(Box, {gap:64}, [\n          activeCohorts.length === 0 && upcomingEvents.length === 0\n            ? h (WhiteContainer, [\n              h(Box, {gap:16, style: {maxWidth: 400, textAlign: 'center', margin: 'auto'}}, [\n                h( EmptyImg, {src: 'img/empty.png'}),\n                h('small.textSecondary', \"Hmmm... Looks like you haven't enolled in anything yet. Check out some available courses in the Course List below!\" ),\n                h(Link, {href: '/courses'}, h('a', {style:{marginBottom:'16px'}}, h(Primary, COPY.courseListButton)))\n              ]),\n            ])\n          // if enrolled, show grid of enrolled cohorts\n            : h(Box, {gap:32}, [\n              h(Link, {href: \"/calendar\"}, \n                h(SmallLinkButton, {textSecondary: true}, \n                  h(Box, {h:true, gap:8, style: {background: colors.grey95, padding: 16}}, [ Calendar, 'add all events to your calendar'])\n                 )),\n              upcomingEvents.length === 0 ? null : h(Box, [\n                h('h2', \"Events\"),\n                h(FlexGrid, {min: 400, mobileMin: 300}, upcomingEvents.map(ev => h(EventCard, {cost: ev.cost, ...ev.events}))),\n              ]),\n              h(Box, {gap: 64},\n                activeCohorts.map(cohort => {\n                  let facilitating = !!cohort.cohort_facilitators.find(f=>user && f.facilitator === user.id)\n                  return h(EnrolledCohort, {cohort, facilitating})\n                }))\n            ]),\n\n          activeCohorts.length === 0 ? null : h(MoreLearningBanner, [\n            h(Box, {ma: true, style:{textAlign:\"center\", justifyItems:\"center\"}}, [\n              h('h3', COPY.courseListHeader),\n              h(MoreLearningBannerButtons, [\n                h(Link, {href: '/courses'}, h('a', {}, h(Secondary, \"Courses\"))),\n                // h(Link, {href: '/clubs'}, h('a', {}, h(Secondary, \"Clubs\"))),\n                h(Link, {href: '/events'}, h('a', {}, h(Secondary, \"Events\")))\n              ])\n            ])\n          ]),\n\n        ]),\n        Completed: completedCohorts.length === 0 ? null : h(Box, [\n          h(FlexGrid, {min: 400, mobileMin:320}, completedCohorts.map(cohort => {\n            if(cohort.courses.type === 'club') return ClubCohortCard({...cohort, course: cohort.courses})\n            return h(CourseCohortCard, {...cohort, course:cohort.courses})\n          }))\n        ]),\n        Maintaining: userCourses.maintaining_courses.length === 0 ? null : h(Box, {gap: 32}, [\n          h(Box, [\n            courses.length > 0 ? h('h2', \"Courses\") : null,\n            h(FlexGrid, {min: 400, mobileMin: 320}, courses.map(course=>h(CourseListing, course))),\n          ]),\n          h(Box, [\n            clubs.length > 0 ? h('h2', \"Clubs\") : null,\n            h(FlexGrid, {min: 290, mobileMin: 290}, clubs.map(course=> h(ClubListing, course)))\n          ])\n        ]),\n        Profile: h(Settings, {\n          facilitator:userCourses.maintaining_courses.length !== 0,\n          profile,\n          user,\n          mutate: p => {\n            if(user) mutate({...user, ...p})\n            if(profile) mutateProfile({...profile, ...p})\n          }\n        })\n      }}),\n  ])\n}\n\nexport const MoreLearningBanner = styled('div')`\npadding: 32px;\nbackground-color: ${colors.accentPeach};\ndisplay: grid;\ngrid-template-rows: auto auto;\ngrid-gap: 16px;\n\n`\n\nexport const MoreLearningBannerButtons = styled('div')`\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngrid-gap: 16px;\ngrid-auto-flow: column;\n\n${Mobile} {\n  grid-template-columns: auto;\n  grid-template-rows: repeat(3, auto); \n}\n\n`\n\n\nexport let EmptyImg = styled ('img') `\nimage-rendering: pixelated;\nimage-rendering: -moz-crisp-edges;\nimage-rendering: crisp-edges;\ndisplay: block;\nmargin: auto auto;\nborder: none;\nheight: 200px;\nwidth: 200px;\n`\n\nexport default Dashboard\n"],"sourceRoot":""}