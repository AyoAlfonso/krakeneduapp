{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack://_N_E/./pages/index.ts","webpack://_N_E/./components/Cards/EventCard.ts"],"names":["window","__NEXT_P","push","COPY","Welcome","h","LandingContainer","Box","gap","Title","Tagline","CTAGrid","href","Primary","Tablet","Mobile","Landing","props","useCourses","initialData","data","courses","filter","course","course_cohorts","c","cohort_max_size","people_in_cohorts","length","sort","a","b","upcomingCohortA","Date","start_date","upcomingCohortB","name","reduce","acc","type","clubs","id","FlexGrid","min","mobileMin","flatMap","map","cohort","CourseCohortCard","slice","Link","style","justifySelf","Secondary","ClubCohortCard","events","ev","passHref","event","EventCard","cost","start","toLocaleTimeString","hour12","minute","hour","end","end_date","timeZoneName","Container","EventCardHeader","padding","border","borderTop","borderRadius","prettyDate","Seperator","colors","accentLightBlue","Card"],"mappings":"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","file":"static/chunks/pages/index-7ea12bc95f9dd0417059.js","sourcesContent":["\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/\",\n        function () {\n          return require(\"private-next-pages/index.ts\");\n        }\n      ]);\n    ","import h from \"react-hyperscript\";\nimport styled from \"@emotion/styled\";\nimport { InferGetServerSidePropsType, GetServerSidePropsContext } from \"next\";\n// import LandingPage2 from 'components/LandingPage2'\n// import Intro from 'writing/Intro.mdx'\nimport { Mobile, Tablet } from \"components/Tokens\";\nimport {\n  Box,\n  // Body,\n  FlexGrid,\n} from \"components/Layout\";\nimport { Primary, Secondary } from \"components/Button\";\n// import {TitleImg} from '../components/Images'\nimport { Courses, useCourses } from \"src/data\";\nimport { getToken } from \"src/token\";\n// import NewsletterSignup from 'components/NewsletterSignup'\nimport { coursesQuery } from \"pages/api/courses\";\nimport { getPublicEventsQuery } from \"./api/events\";\nimport Link from \"next/link\";\nimport { EventCard } from \"components/Cards/EventCard\";\nimport { CourseCohortCard, ClubCohortCard } from \"components/Cards/CohortCard\";\n\nlet COPY = {\n  hyperlinkTagline:\n    \"Kraken.Edu is the future of work and upskilling in Nigeria.\",\n  // registerHeader: \"Calling all professionals! Join the KrakenEdu Alpha to propose a course idea, and (very soon!) enroll one of our first courses.\",\n  registerButton: \"Browse the Courses\",\n  emailHeader: \"Get updates about new courses and more!\",\n  // emailDescription: \"We'll never spam or share your email. You can unsubscribe at any time.\",\n  emailButton: \"Get Updates\",\n  coursesHeader: \"All Courses\",\n};\n\ntype Props = InferGetServerSidePropsType<typeof getServerSideProps>;\nconst Landing = (props: Props) => {\n  let { data: allCourses } = useCourses({ initialData: props });\n  let [courses, clubs] = (allCourses || props).courses\n    .filter((course) => {\n      return !!course.course_cohorts.filter(\n        (c) =>\n          course.cohort_max_size === 0 ||\n          course.cohort_max_size !== c.people_in_cohorts.length\n      )[0];\n    })\n    .sort((a, b) => {\n      let upcomingCohortA = a.course_cohorts.filter(\n        (c) => new Date(c.start_date) > new Date()\n      )[0];\n      let upcomingCohortB = b.course_cohorts.filter(\n        (c) => new Date(c.start_date) > new Date()\n      )[0];\n\n      if (upcomingCohortA.start_date === upcomingCohortB.start_date)\n        return a.name > b.name ? 1 : -1;\n      return new Date(upcomingCohortA.start_date) <\n        new Date(upcomingCohortB?.start_date)\n        ? -1\n        : 1;\n    })\n    .reduce(\n      (acc, course) => {\n        acc[course.type === \"course\" ? 0 : 1].push(course);\n        return acc;\n      },\n      [[], []] as Array<Courses[\"courses\"]>\n    );\n\n  return h(Box, { gap: 48 }, [\n    h(Welcome),\n    // h(WhyHyperlink, {}, h(Body, {}, h(Intro))),\n    !courses || courses.length === 0\n      ? null\n      : h(Box, { gap: 48 }, [\n          h(\"h1\", { id: \"courses\" }, \"Upcoming Courses\"),\n          h(\n            FlexGrid,\n            { min: 400, mobileMin: 320 },\n            courses\n              .flatMap((course) => {\n                return course.course_cohorts.map((cohort) => {\n                  return h(CourseCohortCard, { ...cohort, course });\n                });\n              })\n              .slice(0, 4)\n          ),\n          h(\n            Link,\n            { href: \"/courses\" },\n            h(\n              \"a\",\n              { style: { justifySelf: \"right\" } },\n              h(Secondary, \"see all courses\")\n            )\n          ),\n        ]),\n    !clubs || clubs.length === 0\n      ? null\n      : h(Box, { gap: 48 }, [\n          h(\"h1\", \"Upcoming Clubs\"),\n          h(\n            FlexGrid,\n            { min: 290, mobileMin: 290 },\n            clubs\n              .flatMap((course) => {\n                return course.course_cohorts.map((cohort) => {\n                  return h(ClubCohortCard, { ...cohort, course });\n                });\n              })\n              .slice(0, 6)\n          ),\n          h(\n            Link,\n            { href: \"/clubs\" },\n            h(\n              \"a\",\n              { style: { justifySelf: \"right\" } },\n              h(Secondary, \"see all clubs\")\n            )\n          ),\n        ]),\n    props.events.length === 0\n      ? null\n      : h(Box, { gap: 48 }, [\n          h(\"h1\", \"Upcoming Events\"),\n          h(\n            FlexGrid,\n            { min: 400, mobileMin: 300 },\n            props.events.map((ev) =>\n              h(\n                Link,\n                { passHref: true, href: `/events/${ev.event}` },\n                h(EventCard, { cost: ev.cost, ...ev.events })\n              )\n            )\n          ),\n        ]),\n    h(\n      Link,\n      { href: \"/events\" },\n      h(\n        \"a\",\n        { style: { justifySelf: \"right\" } },\n        h(Secondary, \"see all events\")\n      )\n    ),\n  ]);\n};\n\nconst Welcome = () => {\n  return h(LandingContainer, [\n    h(Box, { gap: 16 }, [\n      h(Box, { gap: 32 }, [\n        h(Title, [\"Kraken.\", h(\"wbr\"), \"Edu\"]),\n        h(Tagline, COPY.hyperlinkTagline),\n      ]),\n      h(CTAGrid, [\n        h(\"a\", { href: \"#courses\" }, h(Primary, {}, COPY.registerButton)),\n        // h(NewsletterSignup)\n      ]),\n    ]),\n  ]);\n};\n\n// let WhyKrakenEdu = styled('div')`\n// background-color: #F0F7FA;\n// width: 100vw;\n// position: relative;\n// left: 50%;\n// right: 50%;\n// margin-left: -50vw;\n// margin-right: -50vw;\n// text-align: center;\n// `\n\nexport const getServerSideProps = async ({\n  req,\n  res,\n}: GetServerSidePropsContext) => {\n  let token = getToken(req);\n  if (!token) {\n    let courses = (await coursesQuery()).filter((course) => {\n      return !!course.course_cohorts.filter(\n        (c) =>\n          course.cohort_max_size === 0 ||\n          course.cohort_max_size !== c.people_in_cohorts.length\n      )[0];\n    });\n    let events = (await getPublicEventsQuery())\n      .filter((event) => {\n        return new Date(event.events.start_date) > new Date();\n      })\n      .slice(0, 3);\n    return { props: { courses, events } } as const;\n  }\n\n  res.writeHead(303, { Location: \"/dashboard\" });\n  res.end();\n  return { props: { courses: [], events: [] } };\n};\n\nconst LandingContainer = styled(\"div\")`\n  /* setting up the background image */\n  background-image: url(\"/img/landing.png\");\n  background-repeat: no-repeat;\n  background-position: right center;\n  background-size: 75%;\n  image-rendering: pixelated;\n  image-rendering: crisp-edges;\n  height: 700px;\n\n  ${Tablet} {\n    height: auto;\n    background-position: right 80px;\n  }\n\n  ${Mobile} {\n    background-position: center 104px;\n    background-size: 280px;\n  } ;\n`;\n\n/* Text Styling for Landing Content */\nconst Title = styled(\"h1\")`\n  font-family: \"Roboto Mono\", monospace;\n  font-size: 4rem;\n  text-decoration: none;\n  font-weight: bold;\n  color: blue;\n  z-index: 2;\n\n  ${Tablet} {\n    font-size: 2.625rem;\n  }\n`;\n\nconst Tagline = styled(\"h3\")`\n  z-index: 2;\n  width: 33%;\n  color: 19ef7d;\n\n  ${Mobile} {\n    padding-top: 176px;\n    width: 100%;\n  }\n`;\n\nconst CTAGrid = styled(\"div\")`\n  width: 25%;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-rows: auto auto;\n\n  ${Tablet} {\n    width: 100%;\n  }\n`;\n\nexport default Landing;\n","import h from 'react-hyperscript'\nimport styled from '@emotion/styled'\nimport {Card} from '.'\nimport { colors } from 'components/Tokens'\nimport { Box, Seperator } from 'components/Layout'\nimport { prettyDate } from 'src/utils'\nimport Link from 'next/link'\n\nexport const EventCard = (props:{name: string, start_date: string, end_date: string, cost: number, id: number})=>{\n  let start = new Date(props.start_date).toLocaleTimeString([], {hour12: true, minute: '2-digit', hour:'numeric'})\n  let end = new Date(props.end_date).toLocaleTimeString([], {hour12: true, minute: '2-digit', hour:'numeric', timeZoneName: \"short\"})\n  return h(Link, {href:`/events/${props.id}`, passHref: true}, h(Container, [\n    h(EventCardHeader),\n    h(Box, {padding:16, style:{border: '1px solid', borderTop: 'none', borderRadius: '2px'}}, [\n      h(Box, {gap:8},[\n        h('h3', props.name),\n        h('span',  `${prettyDate(props.start_date)} @ ${start} - ${end}`),\n      ]),\n      new Date(props.start_date) < new Date() ? null : h(Box, {gap:8},[\n        h(Seperator),\n        h('span.textSecondary', `${props.cost === 0 ? \"FREE\" : '$'+props.cost}`)\n      ])\n    ]),\n  ]))\n}\n\nlet EventCardHeader = styled('div')`\nbackground-color: ${colors.accentLightBlue};\nheight:8px;\nborder: 1px solid;\nborder-radius: 2px 2px 0px 0px;\n`\n\nlet Container = styled(Card)`\nborder: none;\npadding: 0px;\n`\n"],"sourceRoot":""}