{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?b78c","webpack://_N_E/./components/EditorWithPreview.ts","webpack://_N_E/./pages/courses/[slug]//settings/templates/[templateId].ts"],"names":["window","__NEXT_P","push","EditorWithPreview","props","mobile","useMediaQuery","useState","mode","setMode","h","Box","gap","style","justifySelf","LinkButton","onClick","Preview","Text","source","value","Editor","EditorPreviewContainer","height","colors","grey55","accentPeach","TemplateSettings","router","useRouter","templateId","query","courseId","id","useApiData","undefined","templates","data","mutate","template","find","t","name","content","type","title","formState","setFormState","status","setStatus","useEffect","PageLoader","onSubmit","e","a","preventDefault","callApi","res","result","replace","slug","shallow","map","disabled","width","BackButton","href","as","FormBox","LabelBox","Input","required","onChange","currentTarget","Radio","selected","v","items","component","Destructive","Primary"],"mappings":"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","file":"static/chunks/pages/courses/[slug]/[id]/settings/templates/[templateId]-a7e123b8cbf1e92b4b7a.js","sourcesContent":["\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/courses/[slug]/[id]/settings/templates/[templateId]\",\n        function () {\n          return require(\"private-next-pages/courses/[slug]/[id]/settings/templates/[templateId].ts\");\n        }\n      ]);\n    ","import h from 'react-hyperscript'\nimport styled from '@emotion/styled'\nimport Text from './Text'\nimport {colors} from './Tokens'\nimport { useMediaQuery } from 'src/hooks'\nimport { useState } from 'react'\nimport { Box } from './Layout'\nimport { LinkButton } from './Button'\n\nexport default function EditorWithPreview(props:{height?: number, value: string, onChange: (e:React.ChangeEvent<HTMLTextAreaElement>)=>void}) {\n  let mobile = useMediaQuery('(max-width:640px)')\n\n  let [mode, setMode] = useState<'edit'|'preview'>('edit')\n  if(mobile) return h(Box, {gap:4}, [\n    h('div', {style:{justifySelf: 'right'}}, [\n      mode === 'preview'\n        ? h(LinkButton, {onClick: ()=>setMode('edit')}, 'edit')\n        : h(LinkButton, {onClick: ()=>setMode('preview')}, 'preview'),\n    ]),\n    mode === 'preview'\n      ? h(Preview, {}, h(Text, {source: props.value}))\n      : h(Editor, props),\n  ])\n  return h(EditorPreviewContainer, [\n    h(Editor, props),\n    h(Preview, {height:props.height}, h(Text, {source: props.value}))\n  ])\n}\nlet EditorPreviewContainer = styled('div')`\ndisplay: grid;\nmax-width: 1200px;\ngrid-template-columns: 50% 50%;\n`\n\nlet Editor = styled('textarea')<{height?:number}>`\nbox-sizing: border-box;\nheight: ${props=>props.height ? props.height : 512}px;\npadding: 16px;\nfont-family: 'Lato', sans-serif;\nborder-color: ${colors.grey55} !important;\nborder: 1px solid;\nborder-radius: 2px 0 0 2px;\nresize: none;\nfont-size: inherit;\nline-height: inherit;\n`\n\nlet Preview = styled('div')<{height?:number}>`\noverflow: scroll;\nbox-sizing: border-box;\npadding: 16px;\nfont-size: 16px;\nheight: ${props=>props.height ? props.height : 512}px;\nbackground-color:${colors.accentPeach};\nborder-radius: 0 2px 2px 0;\n`\n","import h from 'react-hyperscript'\nimport { useRouter } from 'next/router'\nimport { useApiData, callApi } from 'src/apiHelpers'\nimport { GetTemplatesResult } from 'pages/api/courses/[id]/templates'\nimport { PageLoader } from 'components/Loader'\nimport { useState, useEffect } from 'react'\nimport { course_templates } from '@prisma/client'\nimport { Box, LabelBox, FormBox } from 'components/Layout'\nimport { Input, Radio } from 'components/Form'\nimport { Primary, BackButton, Destructive } from 'components/Button'\nimport {CreateTemplateMsg, CreateTemplateResult} from 'pages/api/courses/[id]/templates'\nimport { UpdateTemplateMsg, UpdateTemplateResult } from 'pages/api/courses/[id]/templates/[templateId]'\nimport EditorWithPreview from 'components/EditorWithPreview'\n\nfunction TemplateSettings() {\n  let router = useRouter()\n  let templateId = router.query.templateId\n  let courseId = router.query.id as string\n  let {data: templates, mutate }= useApiData<GetTemplatesResult>(courseId ? `/api/courses/${courseId}/templates` : undefined)\n  let template = templates ? templates.find(t=> t.name === templateId) : undefined\n\n  let [formState, setFormState] = useState<Omit<course_templates, 'course' | 'required'>>(template || {name: '', content:'', type: 'prepopulated', title: ''})\n  let [status, setStatus] = useState<'loading' | 'normal' |'success'>('normal')\n\n  useEffect(()=>{\n    if(template) setFormState(template)\n  }, [template])\n\n  if(templateId !=='new' && templates === undefined) return h(PageLoader)\n\n  const onSubmit = async (e:React.FormEvent) => {\n    e.preventDefault()\n    let res:CreateTemplateResult | UpdateTemplateResult\n    setStatus('loading')\n    if(templateId === 'new') {\n      res = await callApi<CreateTemplateMsg, CreateTemplateResult>(`/api/courses/${courseId}/templates`, formState)\n      if(res.status === 200 && templates) {\n        templates.push(res.result)\n        mutate(templates)\n      }\n    } else {\n      res = await callApi<UpdateTemplateMsg, UpdateTemplateResult>(`/api/courses/${courseId}/templates/${templateId}`, formState)\n      if(res.status === 200 && templates) {\n        if(res.result.name !== templateId) {\n          router.replace(`/courses/[slug]/[id]/settings/templates/[templateId]`,\n                      `/courses/${router.query.slug}/${router.query.id}/settings/templates/${res.result.name}`, {shallow: true})\n        }\n        mutate(templates?.map(t=>{\n          if(res.status === 200 && template && t.name===template.name) return res.result\n          return t\n        }))\n      }\n    }\n    if(res.status === 200) {\n      setStatus('success')\n      if(templateId === 'new') router.push(`/courses/[slug]/[id]/settings/templates/[templateId]`,\n                                           `/courses/${router.query.slug}/${router.query.id}/settings/templates/${res.result.name}`)\n    }\n  }\n\n  let disabled = templateId !== 'new' && template &&\n    !(formState.name !== template.name ||\n      formState.title !== template.title ||\n      formState.content !== template.content ||\n      formState.type !== template.type)\n\n  return h(Box, {gap: 32}, [\n    h(Box, {width: 640}, [\n      h(BackButton, {href: \"/courses/[slug]/[id]/settings\", as: `/courses/${router.query.slug}/${courseId}/settings`}, 'Settings'),\n      h('h2', router.query.templateId === 'new' ? 'Add New Template' : \"Edit Template\"),\n      h('p.big', `Create templates for topics to either be included in every new cohort's forum, or to be triggered by a facilitator at any time.`)\n    ]),\n    h(FormBox, {onSubmit, gap: 32}, [\n\n      // Template Name Input\n      h(LabelBox, {width: 400, gap: 8}, [\n        h('h4', \"Template Name\"),\n        h(Input, {\n          disabled: template?.required || undefined,\n          type: \"text\",\n          value: formState.name,\n          onChange: e => setFormState({...formState, name: e.currentTarget.value})\n        })\n      ]),\n\n      // Template Type Input\n      h(LabelBox, {width: 640, gap: 8}, [\n        h('h4', \"Type\"),\n        h(Radio, {\n          disabled: template?.required || undefined,\n          name: \"type\",\n          selected: formState.type,\n          onChange: (v)=>{\n            setFormState({...formState, type:v as typeof formState.type})\n          },\n          items: [\n            {value: \"prepopulated\", component: h('div', [\n              h('h4', 'Prepopulated'),\n              h('span.textSecondary', \"This topic will automatically be posted when each new cohort is created.\")\n            ])},\n            {value:\"triggered\", component: h('div', [\n              h('h4', \"Triggered\"),\n              h('span.textSecondary', \"This topic will be posted when the facilitator triggers it from the cohort settings page.\")\n            ])}\n          ] as const\n        })\n      ]),\n\n      // Template Title Input\n      h(LabelBox, {width: 400, gap: 8}, [\n        h(Box, {gap:4}, [\n          h('h4', \"Default Topic Title\"),\n          h('p.textSecondary', \"Default title of the published topic. For a triggered template, you'll be able to edit before publishing.\"),\n        ]),\n        h(Input, {\n          type: \"text\",\n          value: formState.title,\n          onChange: e => setFormState({...formState, title: e.currentTarget.value})\n        })\n      ]),\n\n      // Template Body Input\n      h(LabelBox, {gap: 8}, [\n        h(Box, {gap:4}, [\n          h('h4', \"Default Topic Body\"),\n          h(Box, {width: 400}, [\n            h('p.textSecondary', \"Default body text of the published topic. For a triggered template, you'll be able to edit before publishing.\"),\n            h('p.textSecondary', [\"You can use Markdown to format \", h('a', {href: 'https://commonmark.org/help/'}, \"(quick reference)\"), '.']),\n          ]),\n        ]),\n        h(EditorWithPreview, {\n          value: formState.content,\n          onChange: e=>setFormState({...formState, content: e.currentTarget.value})\n        }),\n      ]),\n\n      // Submit and Discard Changes Button\n      h(Box, {h: true, gap: 8, style:{justifySelf: 'end'}}, [\n        h(Destructive, {\n          disabled,\n          onClick: (e) => {\n            e.preventDefault()\n            if(template) setFormState(template)\n          }\n        }, \"Discard Changes\"),\n        h(Primary, {\n          status,\n          type: 'submit',\n          disabled\n        }, templateId === 'new' ? 'Create New Template' : \"Update Template\")\n      ])\n    ])\n  ])\n}\n\nexport default TemplateSettings\n"],"sourceRoot":""}