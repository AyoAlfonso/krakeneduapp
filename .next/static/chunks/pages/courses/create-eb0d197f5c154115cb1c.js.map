{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?3440","webpack://_N_E/./pages/courses/create.ts"],"names":["window","__NEXT_P","push","CreateCourse","user","useUserData","data","router","useRouter","useState","name","description","prerequisites","duration","cost","type","maintainers","formData","setFormData","useApi","status","callCreateCourse","admin","onSubmit","e","a","preventDefault","h","Error","Info","FormBox","CheckBox","style","marginTop","Input","checked","onChange","currentTarget","LabelBox","gap","required","maxLength","value","Textarea","min","max","parseInt","multiple","split","map","x","trim","Primary"],"mappings":"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","file":"static/chunks/pages/courses/create-eb0d197f5c154115cb1c.js","sourcesContent":["\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/courses/create\",\n        function () {\n          return require(\"private-next-pages/courses/create.ts\");\n        }\n      ]);\n    ","import h from 'react-hyperscript'\nimport { useRouter } from 'next/router'\nimport { useState } from 'react'\n\nimport {  Input, Error, Info, Textarea, CheckBox} from 'components/Form'\nimport { Primary } from 'components/Button'\nimport { LabelBox, FormBox } from 'components/Layout'\n\nimport { useApi } from 'src/apiHelpers'\nimport { useUserData } from 'src/data'\nimport { CreateCourseMsg, CreateCourseResponse } from 'pages/api/courses'\n\nconst CreateCourse = ()=> {\n  let {data: user} = useUserData()\n  let router = useRouter()\n  let [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    prerequisites: '',\n    duration: \"\",\n    cost: 5,\n    type: 'course' as 'course' | 'club',\n    maintainers: [] as string[]\n  })\n\n  let [status, callCreateCourse] = useApi<CreateCourseMsg, CreateCourseResponse>([formData])\n\n  if(user === false) router.push('/')\n  if(user &&  user.admin === false) router.push('/dashboard')\n\n  const onSubmit = async (e:React.FormEvent) => {\n    e.preventDefault()\n    await callCreateCourse('/api/courses', {...formData})\n  }\n\n  return h('div', [\n    h('h1', 'Create a New Course'),\n    status === 'error' ? h(Error, 'An error occured') : null,\n    status === 'success' ? h(Info, 'Course created!') : null,\n    h(FormBox, {onSubmit}, [\n      h(CheckBox, {style:{marginTop: '16px'}}, [\n        h(Input, {\n          type: 'checkbox',\n          checked: formData.type === 'club',\n          onChange: e=> setFormData({...formData, type: e.currentTarget.checked ? 'club' : 'course'})\n        }),\n        h('h4', 'Club? '),\n      ]),\n      h(LabelBox, {gap:8}, [\n        h('h4', 'Name'),\n          h(Input, {\n            required: true,\n            type: 'text',\n            maxLength: 50,\n            value: formData.name,\n            onChange: e => setFormData({...formData, name: e.currentTarget.value})\n          }),\n      ]),\n      h(LabelBox, {gap:8}, [\n        h('h4', 'Description'),\n          h(Textarea, {\n            required: true,\n            maxLength: 200,\n            value: formData.description,\n            onChange: e => setFormData({...formData, description: e.currentTarget.value})\n          }),\n      ]),\n      h(LabelBox, {gap:8}, [\n        h('h4', 'Duration'),\n        h(Input, {\n          type: 'text',\n          value: formData.duration,\n          onChange: e=> setFormData({...formData, duration: e.currentTarget.value})\n        })\n      ]),\n      h(LabelBox, {gap:8}, [\n        h('h4', 'Prerequisites'),\n        h(Textarea, {\n          value: formData.prerequisites,\n          onChange: e=> setFormData({...formData, prerequisites: e.currentTarget.value})\n        })\n      ]),\n      h(LabelBox, {gap:8}, [\n        h('h4', 'Cost (USD)'),\n        h(Input, {\n          required: true,\n          type: 'number',\n          min: '5',\n          max: '1000',\n          value: formData.cost,\n          onChange: e=> setFormData({...formData, cost: parseInt(e.currentTarget.value)})\n        })\n      ]),\n      h(LabelBox, {gap:8}, [\n        h('h4', 'Maintainers'),\n        h(Input, {\n          required: true,\n          type: 'email',\n          multiple: true,\n          onChange: e=> setFormData({...formData, maintainers: e.currentTarget.value.split(',').map(x=>x.trim())})\n        })\n      ]),\n      h(Primary, {status, type: 'submit'}, 'Submit')\n    ])\n  ])\n}\n\nexport default CreateCourse\n"],"sourceRoot":""}