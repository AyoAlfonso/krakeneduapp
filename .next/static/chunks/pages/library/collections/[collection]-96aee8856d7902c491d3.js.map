{"version":3,"sources":["webpack://_N_E/./components/Cards/index.ts","webpack://_N_E/./components/Pill.ts","webpack://_N_E/./pages/404.ts","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?73de","webpack://_N_E/./pages/library/collections/[collection].ts"],"names":["Card","colors","grey15","textPrimary","Pill","props","red","accentRed","textSecondary","borderOnly","grey55","grey90","user","useUserData","data","h","Box","style","textAlign","width","margin","Link","href","window","__NEXT_P","push","LibraryCollections","collection","gap","BackButton","title","description","FlexGrid","min","mobileMin","posts","sort","a","b","Date","date","map","p","path","height","getTime","NewPill","WrappedLibraryCollectionsPage","notFound","ErrorPage"],"mappings":"yKAGaA,EAAO,YAAO,IAAP,sBAAH,2FAKDC,IAAOC,OALN,+BAQRD,IAAOE,YARC,uHAiBKF,IAAOC,OAjBZ,qB,kGCDJE,EAAO,YAAO,OAAP,qBAAH,4IAQR,SAAAC,GAAK,OAAIA,EAAMC,IAAML,IAAOM,UAAYN,IAAOO,gBARvC,KASf,SAAAH,GAAK,OAAGA,EAAMI,WAAN,4BACaJ,EAAMC,IAAML,IAAOM,UAAYN,IAAOS,OADnD,iCAEaT,IAAOU,OAFpB,OATO,K,oCCFjB,6EAMe,qBAAI,IACNC,EAAQC,cAAdC,KAEL,OAAOC,IAAEC,IAAK,CAACC,MAAO,CAACC,UAAW,SAAUC,MAAO,cAAeC,OAAQ,SAAU,CAClFL,IAAE,KAAM,OACRA,IAAE,IAAK,8BACPA,IAAE,IAAK,kEACPA,IAAEM,IAAM,CAACC,KAAMV,EAAO,aAAe,KAAMG,IAAE,SAAU,qC,sBCZpDQ,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,oCACA,WACE,OAAO,EAAQ,Y,uMCYzB,I,KAEA,SAASC,EAAmBrB,GAC1B,OAAIA,EAAMsB,WACHZ,IAAEC,IAAK,CAACY,IAAK,IAAK,CACvBb,IAAEC,IAAK,CAACG,MAAO,KAAM,CACnBJ,IAAEC,IAAK,CAACY,IAAK,GAAG,CACdb,IAAEc,IAAY,CAACP,KAAM,YAAa,mBAClCP,IAAE,KAAMV,EAAMsB,WAAWG,SAE3Bf,IAAE,QAASV,EAAMsB,WAAWI,eAE9BhB,IAAEiB,IAAU,CAACC,IAAI,IAAKC,UAAW,KAAM7B,EAAM8B,MAC1CC,MAAK,SAACC,EAAGC,GACR,OAAO,IAAIC,KAAKF,EAAEG,MAAQ,IAAID,KAAKD,EAAEE,MAAQ,GAAK,KAEnDC,KAAI,SAAAC,GAAC,OAAE3B,IAAEM,IAAM,CAACC,KAAKoB,EAAEC,MAAO5B,IAAEf,IAAM,CAACiB,MAAM,CAAC2B,OAAO,gBAAiB,CACrE7B,IAAEC,IAAK,CAACY,IAAK,IAAI,CACfb,IAAEC,IAAK,CAACY,IAAK,GAAI,CACfb,IAAE,KAAM2B,EAAEZ,OACV,IAAIS,KAAKG,EAAEF,MAAQ,IAAID,MAAM,IAAIA,MAAQM,UAAY,QAA2B9B,IAAE+B,EAAS,QAAU,OAGvG/B,IAAE,IAAK2B,EAAEX,wBApBYhB,IAAE,MAAO,IAFxBgC,UADsB,SAAC1C,GAAD,OAAgBA,EAAM2C,SAAWjC,IAAEkC,WAAalC,IAAEW,EAAoBrB,IA0D5G,IAAMyC,EAAU,YAAO1C,IAAP,qBAAH,iE","file":"static/chunks/pages/library/collections/[collection]-96aee8856d7902c491d3.js","sourcesContent":["import styled from '@emotion/styled'\nimport {colors } from 'components/Tokens'\n\nexport const Card = styled('a')`\nbox-sizing: border-box;\npadding: 16px;\nbackground-color: white;\nborder: 1px solid;\nborder-color: ${colors.grey15};\ntext-decoration: none;\n\ncolor: ${colors.textPrimary};\n\n&:visited {\ncolor: inherit;\n}\n\n&:hover, &:active, &:focus {\ncursor: pointer;\ntransform: translate(-4px, -4px);\nbox-shadow: 4px 4px ${colors.grey15};\ncolor: inherit;\n}\n`\n","import styled from '@emotion/styled'\nimport {colors} from './Tokens'\nexport const Pill = styled('span')<{borderOnly?: boolean, red?: boolean}>`\nheight: min-content;\nwidth: fit-content;\nfont-weight: bold;\nfont-family: Roboto Mono;\npadding: 2px 8px;\nfont-size: 0.75rem;\nborder-radius: 4px;\ncolor: ${props => props.red ? colors.accentRed : colors.textSecondary};\n${props=> props.borderOnly\n? `border: 2px solid ${props.red ? colors.accentRed : colors.grey55};`\n: `background-color: ${colors.grey90};`\n}\n`\n","import h from 'react-hyperscript'\nimport Link from 'next/link'\n\nimport {Box} from 'components/Layout'\nimport { useUserData } from 'src/data'\n\nexport default ()=>{\n  let {data: user} = useUserData()\n\n  return h(Box, {style: {textAlign: 'center', width: 'fit-content', margin: 'auto'}}, [\n    h('h1', '404'),\n    h('p', \"This page doesn't exist :(\"),\n    h('p', \"It could be bad link, or maybe we're just still working on it!\"),\n    h(Link, {href: user ? '/dashboard' : '/'}, h('a.mono', 'take me back to the homepage'))\n  ])\n}\n","\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/library/collections/[collection]\",\n        function () {\n          return require(\"private-next-pages/library/collections/[collection].ts\");\n        }\n      ]);\n    ","import h from 'react-hyperscript'\nimport fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\nimport { InferGetStaticPropsType } from 'next'\nimport { Library, collections } from 'pages/library'\nimport ErrorPage from 'pages/404'\nimport { Box, FlexGrid } from 'components/Layout'\nimport { Card } from 'components/Cards'\nimport Link from 'next/link'\nimport { BackButton } from 'components/Button'\nimport styled from '@emotion/styled'\nimport { Pill } from 'components/Pill'\n\ntype Props = InferGetStaticPropsType<typeof getStaticProps>\n\nconst WrappedLibraryCollectionsPage = (props: Props)=>props.notFound ? h(ErrorPage) : h(LibraryCollections, props)\nexport default  WrappedLibraryCollectionsPage\nfunction LibraryCollections(props:Extract<Props, {notFound: false}>){\n  if(!props.collection) return h('div', '')\n  return h(Box, {gap: 64}, [\n    h(Box, {width: 640}, [\n      h(Box, {gap: 8},[\n        h(BackButton, {href: \"/library\"}, 'all Collections'),\n        h('h1', props.collection.title),\n      ]),\n      h('p.big', props.collection.description),\n    ]),\n    h(FlexGrid, {min:250, mobileMin: 250}, props.posts\n      .sort((a, b)=>{\n        return new Date(a.date) < new Date(b.date) ? 1 : -1\n      })\n      .map(p=>h(Link, {href:p.path}, h(Card, {style:{height:'min-content'}}, [\n        h(Box, {gap: 16},[\n          h(Box, {gap: 8}, [\n            h('h3', p.title),\n            new Date(p.date) > new Date((new Date()).getTime() - 60 * 60 * 24 * 7 * 1000) ? h(NewPill, \"new!\") : null,\n            // h('span.textSecondary', `${p.author} | ${prettyDate(p.date)}`)\n          ]),\n          h('p', p.description)\n        ])\n\n      ])))\n     )\n])\n}\n\nexport const getStaticProps = async (ctx:any) =>{\n  let name = ctx.params.collection\n  let collection = collections[name as keyof typeof collections]\n  if(!collection) return {props:{notFound: true}} as const\n\n  let posts = fs.readdirSync('./pages/library').map((file)=>{\n    if(fs.lstatSync(path.join('./pages/library/', file)).isDirectory()) return\n    let content = fs.readFileSync('./pages/library/'+file)\n    let {data} = matter(content)\n    return {...data, path: '/library/'+file.slice(0, -4)} as Library\n  }).filter(p=>{\n    return p?.tags?.includes(name)\n  })\n\n  return {props: {collection, posts:posts as Library[], notFound: false}} as const\n}\n\nexport const getStaticPaths = async () => {\n  let paths = Object.keys(collections).map(name=>{\n    return {\n      params: {collection: name}\n    }\n  })\n  return {paths, fallback: false}\n}\n\n// pill to tag new posts - published in the last 7 days\nconst NewPill = styled(Pill)`\n    background-color: green;\n    color: white;\n`\n"],"sourceRoot":""}