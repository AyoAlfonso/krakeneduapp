{"version":3,"sources":["webpack://_N_E/./components/pages/CourseAndClubList.ts"],"names":["CourseAndClubList","props","allCourses","useCourses","initialData","type","data","upcoming","courses","flatMap","course","course_cohorts","filter","c","cohort_max_size","people_in_cohorts","length","map","cohort","sort","a","b","sortByDateAndName","min","mobileMin","CohortCardComponent","ClubCohortCard","CourseCohortCard","console","log","h","Box","gap","width","FlexGrid","style","maxWidth","name","ClubListing","CourseListing","CourseListingContainer","CourseListingContent","Link","href","slug","id","ClubHeaderImage","card_image","split","src","height","textDecoration","status","Pill","red","description","WatchCourseInline","colors","accentLightBlue","borderColor","margin","small_image","border","textPrimary","borderRadius","boxSizing","textAlign","grey80","Mobile"],"mappings":"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","file":"static/chunks/0bf26373868b88e09f315792ecf613464c1953fc.ade48e03fa9eb93dd097.js","sourcesContent":["import h from \"react-hyperscript\";\nimport Link from \"next/link\";\nimport { useCourses, Courses } from \"src/data\";\nimport { Box, FlexGrid } from \"components/Layout\";\nimport { colors, Mobile } from \"components/Tokens\";\nimport { WatchCourseInline } from \"components/Course/WatchCourse\";\nimport { CourseCohortCard, ClubCohortCard } from \"components/Cards/CohortCard\";\nimport styled from \"@emotion/styled\";\nimport { Pill } from \"components/Pill\";\nimport { sortByDateAndName } from \"src/utils\";\n\nexport function CourseAndClubList(props: {\n  initialData: Courses;\n  type: \"club\" | \"course\";\n}) {\n  let { data: allCourses } = useCourses({\n    initialData: props.initialData,\n    type: props.type,\n  });\n\n  let upcoming =\n    allCourses &&\n    allCourses.courses\n      .flatMap((course) =>\n        course.course_cohorts\n          .filter(\n            (c) =>\n              course.cohort_max_size === 0 ||\n              course.cohort_max_size !== c.people_in_cohorts.length\n          )\n          .map((cohort) => {\n            return { cohort, course };\n          })\n      )\n      .sort(({ cohort: a }, { cohort: b }) => sortByDateAndName(a, b));\n\n  let [min, mobileMin] = props.type === \"club\" ? [290, 290] : [400, 320];\n  //Club cohort card will soon change to job cohort card\n  let CohortCardComponent =\n    props.type === \"club\" ? ClubCohortCard : CourseCohortCard;\n  console.log(upcoming, \"upcomingupcoming-\");\n  return h(Box, { gap: 64 }, [\n    // Header for Clubs\n    props.type === \"club\"\n      ? h(Box, { width: 640 }, [\n          h(Box, { gap: 16 }, [\n            h(Box, { gap: 8 }, [\n              h(\"h1\", \"Clubs\"),\n              h(\n                \"p.big\",\n                `Clubs are a lightweight way to convene people with shared interests to explore new things together.`\n              ),\n            ]),\n            // h(Link, {href: \"/forms/propose-club\"}, h('a', {}, h(Primary, 'Propose a new Club!')))\n          ]),\n        ])\n      : // END Header for Clubs\n\n        //Header for Courses\n        h(Box, { width: 640 }, [\n          h(Box, { gap: 16 }, [\n            h(Box, { gap: 8 }, [\n              h(\"h1\", \"Courses\"),\n              h(\n                \"p.big\",\n                `Courses are deep dives into a subject, led by a facilitator experienced in the field.`\n              ),\n            ]),\n            // h(Link, {href: \"/forms/propose-course\"}, h('a', {}, h(Primary, 'Propose a new Course!')))\n          ]),\n        ]),\n    // END Header for Courses\n\n    // Upcoming Club or Course COHORTS\n\n    h(Box, { gap: 16 }, [\n      h(\n        \"h3.textSecondary\",\n        \"Upcoming \" + (props.type === \"club\" ? \"Clubs\" : \"Cohorts\")\n      ),\n      h(\n        FlexGrid,\n        { min, mobileMin },\n        upcoming?.map(({ cohort, course }) => {\n          return h(CohortCardComponent, { ...cohort, course });\n        })\n      ),\n    ]),\n    // END Upcoming Club or Course COHORTS\n\n    // All Courses or Clubs (Not Cohort)\n    h(Box, { gap: 32 }, [\n      h(Box, { gap: 8 }, [\n        h(\n          \"h3.textSecondary\",\n          `All ${props.type === \"club\" ? \"Clubs\" : \"Courses\"}`\n        ),\n        h(\"p.textSecondary\", { style: { maxWidth: 640 } }, [\n          `If something looks interesting, `,\n          h(\"b\", `click the bell to get email updates`),\n          ` when a new\n  cohort is available AND inspire the facilitator to plan new cohorts`,\n        ]),\n      ]),\n      h(\n        FlexGrid,\n        { min: 290, mobileMin: 290 },\n        allCourses?.courses\n          .sort((a, b) => (a.name > b.name ? 1 : -1))\n          .map((course) => {\n            if (props.type === \"club\") return h(ClubListing, course);\n            return h(CourseListing, course);\n          })\n      ),\n    ]),\n    // END All Courses or Clubs (Not Cohort)\n  ]);\n}\n\ntype ListingProps = {\n  card_image: string;\n  small_image: string;\n  id: number;\n  slug: string;\n  description: string;\n  name: string;\n  status: \"live\" | \"draft\" | \"archived\";\n};\n\n// Club Listing Component (Not Cohort)\nexport const ClubListing = (props: ListingProps) => {\n  return h(CourseListingContainer, [\n    h(CourseListingContent, [\n      h(\n        Link,\n        { href: `/courses/${props.slug}/${props.id}` },\n        h(\n          \"a\",\n          {},\n          h(\n            ClubHeaderImage,\n            props.card_image\n              .split(\",\")\n              .map((src) => h(\"img\", { src, height: \"32px\", width: \"32px\" }))\n          )\n        )\n      ),\n      h(Box, { gap: 8 }, [\n        h(\n          Link,\n          { href: `/courses/${props.slug}/${props.id}` },\n          h(\"a\", { style: { textDecoration: \"none\" } }, h(\"h3\", props.name))\n        ),\n        props.status === \"draft\" ? h(Pill, { red: true }, \"draft\") : null,\n        h(\"p\", props.description),\n      ]),\n      h(WatchCourseInline, { id: props.id }),\n    ]),\n  ]);\n};\n\nconst ClubHeaderImage = styled(\"div\")`\n  background-color: ${colors.accentLightBlue};\n  border: 1px solid;\n  border-color: ${colors.borderColor};\n  border-radius: 2px;\n  width: min-content;\n  display: grid;\n  grid-template-columns: repeat(3, min-content);\n  grid-gap: 16px;\n  padding: 8px;\n`;\n//END Club Listing Component\n\n//Course Listing Component (Not Cohort)\nexport const CourseListing = (props: ListingProps) => {\n  return h(CourseListingContainer, [\n    h(CourseListingContent, [\n      h(\n        Link,\n        { href: `/courses/${props.slug}/${props.id}` },\n        h(\n          \"a\",\n          { style: { margin: \"auto auto\" } },\n          h(\"img\", {\n            src: props.small_image,\n            height: \"128px\",\n            width: \"128px\",\n            style: {\n              border: `1px solid ${colors.textPrimary}`,\n              borderRadius: \"64px\",\n              boxSizing: \"border-box\",\n            },\n          })\n        )\n      ),\n      h(Box, { gap: 8 }, [\n        h(\n          Link,\n          { href: `/courses/${props.slug}/${props.id}` },\n          h(\n            \"a\",\n            { style: { textDecoration: \"none\", textAlign: \"center\" } },\n            h(\"h3\", props.name)\n          )\n        ),\n        props.status === \"draft\" ? h(Pill, { red: true }, \"draft\") : null,\n        h(\"p\", props.description),\n      ]),\n      h(WatchCourseInline, { id: props.id }),\n    ]),\n  ]);\n};\n\nconst CourseListingContainer = styled(\"div\")`\n  border: 1px solid ${colors.grey80};\n  border-radius: 4px;\n  box-sizing: border-box;\n  padding: 16px;\n\n  ${Mobile} {\n    padding: 0 0 32px 0;\n    border-top: none;\n    border-left: none;\n    border-right: none;\n    border-bottom: 1px solid ${colors.grey80};\n    border-radius: 0;\n\n    :last-child {\n      border-bottom: none;\n    }\n  }\n`;\n\nconst CourseListingContent = styled(\"div\")`\n  height: 100%;\n  display: grid;\n  grid-gap: 16px;\n  grid-template-rows: min-content auto min-content;\n`;\n// END Course Listing\n"],"sourceRoot":""}