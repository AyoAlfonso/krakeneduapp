{"version":3,"sources":["webpack://_N_E/./node_modules/unist-util-visit-parents/color.browser.js","webpack://_N_E/./components/Text.ts","webpack://_N_E/./node_modules/node-emoji/lib/emoji.js","webpack://_N_E/./node_modules/unist-util-is/convert.js","webpack://_N_E/./node_modules/unist-util-visit/index.js","webpack://_N_E/./node_modules/lodash.toarray/index.js","webpack://_N_E/./node_modules/remark-emoji/index.js","webpack://_N_E/./node_modules/node-emoji/index.js","webpack://_N_E/./node_modules/unist-util-visit-parents/index.js"],"names":["module","exports","d","Text","props","h","TextStyles","Markdown","source","plugins","emoji","disallowedTypes","colors","textSecondary","grey95","accentPeach","toArray","emojiByName","emojiNameRegex","trimSpaceRegex","stripColons","str","colonIndex","indexOf","length","substring","substr","wrapColons","NON_SPACING_MARK","String","fromCharCode","nonSpacingRegex","RegExp","stripNSB","code","replace","emojiByCode","Object","keys","reduce","k","Emoji","_get","hasOwnProperty","get","find","nameOrCode","findByName","findByCode","name","stripped","key","undefined","hasEmoji","hasEmojiByName","hasEmojiByCode","result","which","emoji_code","includeColons","word","emojify","on_missing","format","split","map","s","i","isMissing","join","random","emojiKeys","Math","floor","search","matcher","filter","toString","unemojify","replacement","cleanSpaces","words","replaced","idx","strip","convert","test","ok","type","node","Boolean","typeFactory","tests","checks","index","any","apply","this","arguments","anyFactory","all","allFactory","Error","visit","visitParents","CONTINUE","SKIP","EXIT","tree","visitor","reverse","parents","parent","children","MAX_SAFE_INTEGER","argsTag","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","reIsHostCtor","reIsUint","rsComboMarksRange","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","reHasUnicode","freeGlobal","global","freeSelf","self","root","Function","baseValues","object","array","iteratee","Array","arrayMap","mapToArray","size","forEach","value","setToArray","set","stringToArray","string","hasUnicode","match","unicodeToArray","asciiToArray","func","transform","funcProto","prototype","objectProto","coreJsData","maskSrcKey","uid","exec","IE_PROTO","funcToString","objectToString","reIsNative","call","Symbol","iteratorSymbol","iterator","propertyIsEnumerable","nativeKeys","arg","DataView","getNative","Map","Promise","Set","WeakMap","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","arrayLikeKeys","inherited","isArray","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","n","baseTimes","skipIndexes","isIndex","push","baseIsNative","isObject","isMasked","isFunction","e","isHostObject","baseKeys","Ctor","constructor","proto","isPrototype","getValue","getTag","ArrayBuffer","resolve","ctorString","isLength","tag","values","isString","copyArray","data","next","done","iteratorToArray","emoticon","RE_EMOJI","RE_SHORT","DEFAULT_SETTINGS","padSpaceAfter","options","settings","assign","pad","emoticonEnable","getEmojiByShortCode","iconFull","emoticons","includes","iconPart","slice","trimmedChar","addPad","getEmoji","got","color","step","is","factory","tagName","displayName","subresult","offset","grandparents","concat","toResult"],"mappings":"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","file":"static/chunks/7afedaeeda5dd192dc68f5c5440d3c601eb21985.b9128bb0c6b4e21c36db.js","sourcesContent":["module.exports = identity\nfunction identity(d) {\n  return d\n}\n","import styled from '@emotion/styled'\nimport h from 'react-hyperscript'\nimport Markdown, { NodeType } from 'react-markdown'\nimport {colors} from './Tokens'\nimport emoji from 'remark-emoji'\n\nexport default function Text(props:{source:string, disallowedTypes?: NodeType[]}) {\n  return h(TextStyles, {}, h(Markdown, {\n    source:props.source,\n    plugins:[emoji],\n    disallowedTypes: props.disallowedTypes\n  }))\n}\nexport const TextStyles = styled('div')`\n\nh1:first-of-type { margin-top: 0 !important; margin-left: 0 !important; }\n\nh1 {\n  margin-top: 2.75rem;\n  margin-bottom: .5rem;\n  font-family: 'Lato', sans-serif;\n  font-weight: bold;\n  font-size: 1.8rem;\n\n}\n\nh2 {\n  margin-top: 1.75rem;\n  margin-bottom: .75rem;\n  font-family: 'Lato', sans-serif;\n  font-weight: 900;\n  font-size: 1.35rem; \n  font-kerning: normal;\n}\n\nh3 {\n  margin-top: 1.25rem;\n  margin-bottom: .6rem;\n  font-family: 'Lato', sans-serif;\n  font-weight: 900;\n  font-size: 1.25rem;\n  font-kerning: normal;\n\n\n}\n\nh4 {\n  margin-top: 1.5rem;\n  margin-bottom: .6rem;\n  font-family: 'Lato', sans-serif;\n  font-weight: 700;\n  font-size: 1.1rem;\n  text-transform: uppercase;\n  font-kerning: normal;\n  color: ${colors.textSecondary};\n}\n\n\np {\n  margin-bottom: 1rem;\n  margin-top: 0;\n  font-size: 1rem;\n  line-height:165%;\n  font-kerning: normal;\n\n}\n\nli {\n  margin-bottom: 8px;\n  margin-top: 8px;\n  font-size: 1rem;\n  line-height: 155%;\n\n}\npre { \n  white-space: pre-wrap; \n  font-family: 'Roboto Mono', monospace;\n  background-color: ${colors.grey95};\n  color: ${colors.textSecondary};\n  border-radius: 2px;\n  padding: 16px;  \n}\n\nimg {\nmax-width: 100%;\n}\n\nblockquote {\n  background-color: ${colors.accentPeach};\n  margin: 0 0 8px 0;\n  padding: 16px 32px 4px 32px;\n  color: ${colors.textSecondary};\n  font-style: italic;\n}\n`\n","/*jslint node: true*/\nvar toArray = require('lodash.toarray');\nvar emojiByName = require('./emoji.json');\n\n\"use strict\";\n\n/**\n * regex to parse emoji in a string - finds emoji, e.g. :coffee:\n */\nvar emojiNameRegex = /:([a-zA-Z0-9_\\-\\+]+):/g;\n\n/**\n * regex to trim whitespace\n * use instead of String.prototype.trim() for IE8 support\n */\nvar trimSpaceRegex = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n/**\n * Removes colons on either side\n * of the string if present\n * @param  {string} str\n * @return {string}\n */\nfunction stripColons (str) {\n  var colonIndex = str.indexOf(':');\n  if (colonIndex > -1) {\n    // :emoji: (http://www.emoji-cheat-sheet.com/)\n    if (colonIndex === str.length - 1) {\n      str = str.substring(0, colonIndex);\n      return stripColons(str);\n    } else {\n      str = str.substr(colonIndex + 1);\n      return stripColons(str);\n    }\n  }\n\n  return str;\n}\n\n/**\n * Adds colons to either side\n * of the string\n * @param {string} str\n * @return {string}\n */\nfunction wrapColons (str) {\n  return (typeof str === 'string' && str.length > 0) ? ':' + str + ':' : str;\n}\n\n/**\n * Ensure that the word is wrapped in colons\n * by only adding them, if they are not there.\n * @param {string} str\n * @return {string}\n */\nfunction ensureColons (str) {\n  return (typeof str === 'string' && str[0] !== ':') ? wrapColons(str) : str;\n}\n\n// Non spacing mark, some emoticons have them. It's the 'Variant Form',\n// which provides more information so that emoticons can be rendered as\n// more colorful graphics. FE0E is a unicode text version, where as FE0F\n// should be rendered as a graphical version. The code gracefully degrades.\nvar NON_SPACING_MARK = String.fromCharCode(65039); // 65039 - '️' - 0xFE0F;\nvar nonSpacingRegex = new RegExp(NON_SPACING_MARK, 'g')\n\n// Remove the non-spacing-mark from the code, never send a stripped version\n// to the client, as it kills graphical emoticons.\nfunction stripNSB (code) {\n  return code.replace(nonSpacingRegex, '');\n};\n\n// Reversed hash table, where as emojiByName contains a { heart: '❤' }\n// dictionary emojiByCode contains { ❤: 'heart' }. The codes are normalized\n// to the text version.\nvar emojiByCode = Object.keys(emojiByName).reduce(function(h,k) {\n  h[stripNSB(emojiByName[k])] = k;\n  return h;\n}, {});\n\n/**\n * Emoji namespace\n */\nvar Emoji = {\n  emoji: emojiByName,\n};\n\n/**\n * get emoji code from name\n * @param  {string} emoji\n * @return {string}\n */\nEmoji._get = function _get (emoji) {\n  if (emojiByName.hasOwnProperty(emoji)) {\n    return emojiByName[emoji];\n  }\n\n  return ensureColons(emoji);\n};\n\n/**\n * get emoji code from :emoji: string or name\n * @param  {string} emoji\n * @return {string}\n */\nEmoji.get = function get (emoji) {\n  emoji = stripColons(emoji);\n\n  return Emoji._get(emoji);\n};\n\n/**\n * find the emoji by either code or name\n * @param {string} nameOrCode The emoji to find, either `coffee`, `:coffee:` or `☕`;\n * @return {object}\n */\nEmoji.find = function find (nameOrCode) {\n  return Emoji.findByName(nameOrCode) || Emoji.findByCode(nameOrCode);\n};\n\n/**\n * find the emoji by name\n * @param {string} name The emoji to find either `coffee` or `:coffee:`;\n * @return {object}\n */\nEmoji.findByName = function findByName (name) {\n  var stripped = stripColons(name);\n  var emoji = emojiByName[stripped];\n\n  return emoji ? ({ emoji: emoji, key: stripped }) : undefined;\n};\n\n/**\n * find the emoji by code (emoji)\n * @param {string} code The emoji to find; for example `☕` or `☔`\n * @return {object}\n */\nEmoji.findByCode = function findByCode (code) {\n  var stripped = stripNSB(code);\n  var name = emojiByCode[stripped];\n\n  // lookup emoji to ensure the Variant Form is returned\n  return name ? ({ emoji: emojiByName[name], key: name }) : undefined;\n};\n\n\n/**\n * Check if an emoji is known by this library\n * @param {string} nameOrCode The emoji to validate, either `coffee`, `:coffee:` or `☕`;\n * @return {object}\n */\nEmoji.hasEmoji = function hasEmoji (nameOrCode) {\n  return Emoji.hasEmojiByName(nameOrCode) || Emoji.hasEmojiByCode(nameOrCode);\n};\n\n/**\n * Check if an emoji with given name is known by this library\n * @param {string} name The emoji to validate either `coffee` or `:coffee:`;\n * @return {object}\n */\nEmoji.hasEmojiByName = function hasEmojiByName (name) {\n  var result = Emoji.findByName(name);\n  return !!result && result.key === stripColons(name);\n};\n\n/**\n * Check if a given emoji is known by this library\n * @param {string} code The emoji to validate; for example `☕` or `☔`\n * @return {object}\n */\nEmoji.hasEmojiByCode = function hasEmojiByCode (code) {\n  var result = Emoji.findByCode(code);\n  return !!result && stripNSB(result.emoji) === stripNSB(code);\n};\n\n/**\n * get emoji name from code\n * @param  {string} emoji\n * @param  {boolean} includeColons should the result include the ::\n * @return {string}\n */\nEmoji.which = function which (emoji_code, includeColons) {\n  var code = stripNSB(emoji_code);\n  var word = emojiByCode[code];\n\n  return includeColons ? wrapColons(word) : word;\n};\n\n/**\n * emojify a string (replace :emoji: with an emoji)\n * @param  {string} str\n * @param  {function} on_missing (gets emoji name without :: and returns a proper emoji if no emoji was found)\n * @param  {function} format (wrap the returned emoji in a custom element)\n * @return {string}\n */\nEmoji.emojify = function emojify (str, on_missing, format) {\n  if (!str) return '';\n\n  return str.split(emojiNameRegex) // parse emoji via regex\n            .map(function parseEmoji(s, i) {\n              // every second element is an emoji, e.g. \"test :fast_forward:\" -> [ \"test \", \"fast_forward\" ]\n              if (i % 2 === 0) return s;\n              var emoji = Emoji._get(s);\n              var isMissing = emoji.indexOf(':') > -1;\n\n              if (isMissing && typeof on_missing === 'function') {\n                return on_missing(s);\n              }\n\n              if (!isMissing && typeof format === 'function') {\n                return format(emoji, s);\n              }\n\n              return emoji;\n            })\n            .join('') // convert back to string\n  ;\n};\n\n/**\n * return a random emoji\n * @return {string}\n */\nEmoji.random = function random () {\n  var emojiKeys = Object.keys(emojiByName);\n  var randomIndex = Math.floor(Math.random() * emojiKeys.length);\n  var key = emojiKeys[randomIndex];\n  var emoji = Emoji._get(key);\n  return { key: key, emoji: emoji };\n}\n\n/**\n *  return an collection of potential emoji matches\n *  @param {string} str\n *  @return {Array.<Object>}\n */\nEmoji.search = function search (str) {\n  var emojiKeys = Object.keys(emojiByName);\n  var matcher = stripColons(str)\n  var matchingKeys = emojiKeys.filter(function(key) {\n    return key.toString().indexOf(matcher) === 0;\n  });\n  return matchingKeys.map(function(key) {\n    return {\n      key: key,\n      emoji: Emoji._get(key),\n    };\n  });\n}\n\n/**\n * unemojify a string (replace emoji with :emoji:)\n * @param  {string} str\n * @return {string}\n */\nEmoji.unemojify = function unemojify (str) {\n  if (!str) return '';\n  var words = toArray(str);\n\n  return words.map(function(word) {\n    return Emoji.which(word, true) || word;\n  }).join('');\n};\n\n/**\n * replace emojis with replacement value\n * @param {string} str\n * @param {function|string} the string or callback function to replace the emoji with\n * @param {boolean} should trailing whitespaces be cleaned? Defaults false\n * @return {string}\n */\nEmoji.replace = function replace (str, replacement, cleanSpaces) {\n  if (!str) return '';\n\n  var replace = typeof replacement === 'function' ? replacement : function() { return replacement; };\n  var words = toArray(str);\n\n  var replaced = words.map(function(word, idx) {\n    var emoji = Emoji.findByCode(word);\n    \n    if (emoji && cleanSpaces && words[idx + 1] === ' ') {\n      words[idx + 1] = '';\n    }\n\n    return emoji ? replace(emoji) : word;\n  }).join('');\n\n  return cleanSpaces ? replaced.replace(trimSpaceRegex, '') : replaced;\n};\n\n\n/**\n * remove all emojis from a string\n * @param {string} str\n * @return {string}\n */\nEmoji.strip = function strip (str) {\n  return Emoji.replace(str, '', true);\n};\n\nmodule.exports = Emoji;\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (test == null) {\n    return ok\n  }\n\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (typeof test === 'object') {\n    return 'length' in test ? anyFactory(test) : allFactory(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction allFactory(test) {\n  return all\n\n  function all(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) return false\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = []\n  var index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return any\n\n  function any() {\n    var index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (iteratorSymbol && value[iteratorSymbol]) {\n    return iteratorToArray(value[iteratorSymbol]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = toArray;\n","const visit = require('unist-util-visit');\nconst emoji = require('node-emoji');\nconst emoticon = require('emoticon');\n\nconst RE_EMOJI = /:\\+1:|:-1:|:[\\w-]+:/g;\nconst RE_SHORT = /[$@|*'\",;.=:\\-)([\\]\\\\/<>038BOopPsSdDxXzZ]{2,5}/g;\n\nconst DEFAULT_SETTINGS = {\n    padSpaceAfter: false,\n    emoticon: false\n};\n\nfunction plugin(options) {\n    const settings = Object.assign({}, DEFAULT_SETTINGS, options);\n    const pad = !!settings.padSpaceAfter;\n    const emoticonEnable = !!settings.emoticon;\n\n    function getEmojiByShortCode(match) {\n        // find emoji by shortcode - full match or with-out last char as it could be from text e.g. :-), \n        const iconFull = emoticon.find(e => e.emoticons.includes(match)); // full match\n        const iconPart = emoticon.find(e => e.emoticons.includes(match.slice(0, -1))); // second search pattern\n        const trimmedChar = iconPart ? match.slice(-1): '';\n        const addPad = pad ? ' ': '';\n        let icon = iconFull ?\n            iconFull.emoji + addPad: \n            iconPart && (iconPart.emoji + addPad +  trimmedChar);\n        return icon || match;\n    }\n\n    function getEmoji(match) {\n        const got = emoji.get(match);\n        if (pad && got !== match) {\n            return got + ' ';\n        }\n        return got;\n    }\n\n    function transformer(tree) {\n        visit(tree, 'text', function(node) {\n            node.value = node.value.replace(RE_EMOJI, getEmoji);\n            \n            if (emoticonEnable) {\n                node.value = node.value.replace(RE_SHORT, getEmojiByShortCode);\n            }\n        });\n    }\n\n    return transformer;\n}\n\nmodule.exports = plugin;\n","module.exports = require('./lib/emoji');","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\nvar color = require('./color')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var step\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n  step = reverse ? -1 : 1\n\n  factory(tree, null, [])()\n\n  function factory(node, index, parents) {\n    var value = typeof node === 'object' && node !== null ? node : {}\n    var name\n\n    if (typeof value.type === 'string') {\n      name =\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      visit.displayName =\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\n    }\n\n    return visit\n\n    function visit() {\n      var grandparents = parents.concat(node)\n      var result = []\n      var subresult\n      var offset\n\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step\n\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)()\n\n          if (subresult[0] === EXIT) {\n            return subresult\n          }\n\n          offset =\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\n        }\n      }\n\n      return result\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"sourceRoot":""}