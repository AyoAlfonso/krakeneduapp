webpackHotUpdate_N_E("pages/courses",{

/***/ "./components/pages/CourseAndClubList.ts":
/*!***********************************************!*\
  !*** ./components/pages/CourseAndClubList.ts ***!
  \***********************************************/
/*! exports provided: CourseAndClubList, ClubListing, CourseListing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CourseAndClubList\", function() { return CourseAndClubList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClubListing\", function() { return ClubListing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CourseListing\", function() { return CourseListing; });\n/* harmony import */ var _Users_ayooluwaalfonso_code_krakeneduapp_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _Users_ayooluwaalfonso_code_krakeneduapp_node_modules_next_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react_hyperscript__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hyperscript */ \"./node_modules/react-hyperscript/index.js\");\n/* harmony import */ var react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_hyperscript__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var src_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/data */ \"./src/data.ts\");\n/* harmony import */ var components_Layout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! components/Layout */ \"./components/Layout/index.ts\");\n/* harmony import */ var components_Tokens__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! components/Tokens */ \"./components/Tokens.ts\");\n/* harmony import */ var components_Course_WatchCourse__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! components/Course/WatchCourse */ \"./components/Course/WatchCourse.ts\");\n/* harmony import */ var components_Cards_CohortCard__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! components/Cards/CohortCard */ \"./components/Cards/CohortCard.ts\");\n/* harmony import */ var components_Pill__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! components/Pill */ \"./components/Pill.ts\");\n/* harmony import */ var src_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\n\n\n\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_Users_ayooluwaalfonso_code_krakeneduapp_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\n\n\n\n\n\n\n\n\n\nfunction CourseAndClubList(props) {\n  _s();\n\n  var _useCourses = Object(src_data__WEBPACK_IMPORTED_MODULE_5__[\"useCourses\"])({\n    initialData: props.initialData,\n    type: props.type\n  }),\n      allCourses = _useCourses.data;\n\n  var upcoming = allCourses && allCourses.courses.flatMap(function (course) {\n    return course.course_cohorts.filter(function (c) {\n      return course.cohort_max_size === 0 || course.cohort_max_size !== c.people_in_cohorts.length;\n    }).map(function (cohort) {\n      return {\n        cohort: cohort,\n        course: course\n      };\n    });\n  }).sort(function (_ref, _ref2) {\n    var a = _ref.cohort;\n    var b = _ref2.cohort;\n    return Object(src_utils__WEBPACK_IMPORTED_MODULE_11__[\"sortByDateAndName\"])(a, b);\n  });\n\n  var _ref3 = props.type === \"club\" ? [290, 290] : [400, 320],\n      _ref4 = Object(_Users_ayooluwaalfonso_code_krakeneduapp_node_modules_next_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref3, 2),\n      min = _ref4[0],\n      mobileMin = _ref4[1]; //Club cohort card will soon change to job cohort card\n\n\n  var CohortCardComponent = props.type === \"club\" ? components_Cards_CohortCard__WEBPACK_IMPORTED_MODULE_9__[\"ClubCohortCard\"] : components_Cards_CohortCard__WEBPACK_IMPORTED_MODULE_9__[\"CourseCohortCard\"];\n  console.log(upcoming, \"upcomingupcoming-\");\n  return react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    gap: 64\n  }, [// Header for Clubs\n  props.type === \"club\" ? react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    width: 640\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    gap: 16\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    gap: 8\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"h1\", \"Clubs\"), react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"p.big\", \"Clubs are a lightweight way to convene people with shared interests to explore new things together.\")]) // h(Link, {href: \"/forms/propose-club\"}, h('a', {}, h(Primary, 'Propose a new Club!')))\n  ])]) : // END Header for Clubs\n  //Header for Courses\n  react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    width: 640\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    gap: 16\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    gap: 8\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"h1\", \"Courses\"), react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"p.big\", \"Courses are deep dives into a subject, led by a facilitator experienced in the field.\")]) // h(Link, {href: \"/forms/propose-course\"}, h('a', {}, h(Primary, 'Propose a new Course!')))\n  ])]), // END Header for Courses\n  // Upcoming Club or Course COHORTS\n  react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    gap: 16\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"h3.textSecondary\", \"Upcoming \" + (props.type === \"club\" ? \"Clubs\" : \"Cohorts\")), react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"FlexGrid\"], {\n    min: min,\n    mobileMin: mobileMin\n  }, upcoming === null || upcoming === void 0 ? void 0 : upcoming.map(function (_ref5) {\n    var cohort = _ref5.cohort,\n        course = _ref5.course;\n    return react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(CohortCardComponent, _objectSpread(_objectSpread({}, cohort), {}, {\n      course: course\n    }));\n  }))]), // END Upcoming Club or Course COHORTS\n  // All Courses or Clubs (Not Cohort)\n  react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    gap: 32\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    gap: 8\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"h3.textSecondary\", \"All \".concat(props.type === \"club\" ? \"Clubs\" : \"Courses\")), react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"p.textSecondary\", {\n    style: {\n      maxWidth: 640\n    }\n  }, [\"If something looks interesting, \", react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"b\", \"click the bell to get email updates\"), \" when a new\\n  cohort is available AND inspire the facilitator to plan new cohorts\"])]), react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"FlexGrid\"], {\n    min: 290,\n    mobileMin: 290\n  }, allCourses === null || allCourses === void 0 ? void 0 : allCourses.courses.sort(function (a, b) {\n    return a.name > b.name ? 1 : -1;\n  }).map(function (course) {\n    if (props.type === \"club\") return react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(ClubListing, course);\n    return react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(CourseListing, course);\n  }))]) // END All Courses or Clubs (Not Cohort)\n  ]);\n}\n\n_s(CourseAndClubList, \"V8e0JzT7BpQS6Gx3xJ9/wjGusvc=\", false, function () {\n  return [src_data__WEBPACK_IMPORTED_MODULE_5__[\"useCourses\"]];\n});\n\n_c = CourseAndClubList;\n// Club Listing Component (Not Cohort)\nvar ClubListing = function ClubListing(props) {\n  return react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(CourseListingContainer, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(CourseListingContent, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    href: \"/courses/\".concat(props.slug, \"/\").concat(props.id)\n  }, react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"a\", {}, react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(ClubHeaderImage, props.card_image.split(\",\").map(function (src) {\n    return react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"img\", {\n      src: src,\n      height: \"32px\",\n      width: \"32px\"\n    });\n  })))), react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    gap: 8\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    href: \"/courses/\".concat(props.slug, \"/\").concat(props.id)\n  }, react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"a\", {\n    style: {\n      textDecoration: \"none\"\n    }\n  }, react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"h3\", props.name))), props.status === \"draft\" ? react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Pill__WEBPACK_IMPORTED_MODULE_10__[\"Pill\"], {\n    red: true\n  }, \"draft\") : null, react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"p\", props.description)]), react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Course_WatchCourse__WEBPACK_IMPORTED_MODULE_8__[\"WatchCourseInline\"], {\n    id: props.id\n  })])]);\n};\n_c2 = ClubListing;\n\nvar ClubHeaderImage = /*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"div\", {\n  target: \"e1pweaio0\",\n  label: \"ClubHeaderImage\"\n})(\"background-color:\", components_Tokens__WEBPACK_IMPORTED_MODULE_7__[\"colors\"].accentLightBlue, \";border:1px solid;border-color:\", components_Tokens__WEBPACK_IMPORTED_MODULE_7__[\"colors\"].borderColor, \";border-radius:2px;width:min-content;display:grid;grid-template-columns:repeat(3,min-content);grid-gap:16px;padding:8px;\" + (false ? undefined : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")); //END Club Listing Component\n//Course Listing Component (Not Cohort)\n\n\nvar CourseListing = function CourseListing(props) {\n  return react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(CourseListingContainer, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(CourseListingContent, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    href: \"/courses/\".concat(props.slug, \"/\").concat(props.id)\n  }, react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"a\", {\n    style: {\n      margin: \"auto auto\"\n    }\n  }, react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"img\", {\n    src: props.small_image,\n    height: \"128px\",\n    width: \"128px\",\n    style: {\n      border: \"1px solid \".concat(components_Tokens__WEBPACK_IMPORTED_MODULE_7__[\"colors\"].textPrimary),\n      borderRadius: \"64px\",\n      boxSizing: \"border-box\"\n    }\n  }))), react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Layout__WEBPACK_IMPORTED_MODULE_6__[\"Box\"], {\n    gap: 8\n  }, [react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    href: \"/courses/\".concat(props.slug, \"/\").concat(props.id)\n  }, react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"a\", {\n    style: {\n      textDecoration: \"none\",\n      textAlign: \"center\"\n    }\n  }, react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"h3\", props.name))), props.status === \"draft\" ? react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Pill__WEBPACK_IMPORTED_MODULE_10__[\"Pill\"], {\n    red: true\n  }, \"draft\") : null, react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(\"p\", props.description)]), react_hyperscript__WEBPACK_IMPORTED_MODULE_3___default()(components_Course_WatchCourse__WEBPACK_IMPORTED_MODULE_8__[\"WatchCourseInline\"], {\n    id: props.id\n  })])]);\n};\n_c3 = CourseListing;\n\nvar CourseListingContainer = /*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"div\", {\n  target: \"e1pweaio1\",\n  label: \"CourseListingContainer\"\n})(\"border:1px solid \", components_Tokens__WEBPACK_IMPORTED_MODULE_7__[\"colors\"].grey80, \";border-radius:4px;box-sizing:border-box;padding:16px;\", components_Tokens__WEBPACK_IMPORTED_MODULE_7__[\"Mobile\"], \"{padding:0 0 32px 0;border-top:none;border-left:none;border-right:none;border-bottom:1px solid \", components_Tokens__WEBPACK_IMPORTED_MODULE_7__[\"colors\"].grey80, \";border-radius:0;:last-child{border-bottom:none;}}\" + (false ? undefined : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nvar CourseListingContent = /*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"div\", {\n  target: \"e1pweaio2\",\n  label: \"CourseListingContent\"\n})(false ? undefined : {\n  name: \"6dpw0j\",\n  styles: \"height:100%;display:grid;grid-gap:16px;grid-template-rows:min-content auto min-content;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n}); // END Course Listing\n\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CourseAndClubList\");\n$RefreshReg$(_c2, \"ClubListing\");\n$RefreshReg$(_c3, \"CourseListing\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/pages/CourseAndClubList.ts\n");

/***/ })

})